%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Adobe Illustrator Artwork
%%Creator: Adobe Illustrator(R) 24.3
%%For: Pavel Sivak
%%CreationDate: 22/11/2021
%%BoundingBox: 0 0 1213 800
%%HiResBoundingBox: 0 0 1212.6351 800
%%CropBox: 0 0 1212.6351 800
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 24.3.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 24.3.0 x569 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 84 8%%BeginData: 15302 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFCFFFDFCFFFDFCFFFD3BFFCFFFFFFFCAFFCFFFCAFFCFFFCAFFCF%FFCAFFCFFFCAFFCFFFCAFFCFFFCFFD54FFCAFFCAFFA8FFCACFA8CFCACFA8%CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCA%CFA8CFCACFA8CFCACFA8FFCAFFCAFD44FFCFFFCAFFCAFFCAFFCAFFCAFFCA%FFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCA%FFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFD3CFFCAFFCACFCACFCA%CFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCA%CFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCA%CFCACFCACFCAFD34FFCAFFCACFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCA%FFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCA%FFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCACFCAFFCAFD2E%FFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8%CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCA%CFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8FD2AFFCA%FFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCA%FFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCA%FFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFD28FFCA%CFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCA%CFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCA%CFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCA%FD24FFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCA%FFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCA%FFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCA%FFCAFFCACFCAFD22FFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCA%CFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8%CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCA%CFA8CFCACFA8CFCACFA8CFCACFA8FD20FFCFFFCAFFCAFFCAFFCAFFCAFFCA%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA%FFCAFFCAFFCAFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCF%FFCAFFCFFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFD21FFCFCACFCACF%CACFCACFCACFCACFCACFCACFCACAA8CFCACAA8CFCACAA8CFCACAA8CFCACA%A8CFCACAA8CFCACAA8CFCACFCACFCACFCACFCACAA8CFCACAA8CFCACAA8CF%CACAA8CFCACAA8CFCACAA8CFCACAA8CFCACFCACFCACFCACFCACFCACFCACF%CACFFD1FFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCACFA7CACACAA7CACACAA7%CACACAA7CACACAA7FD07CAA7FD04CAFFCAFFCAFFCACFA7CACACAA7CACACA%A7CACACAA7CACACAA7FD04CACFCACAA7FD04CAFFCAFFCAFFCAFFCAFFCAFF%CAFFCAFFCAFD1EFFCACFA8CFCACFA8CFCACFA8CFCACFA8CFA8CAA7CAA7CA%A7CAA7CAA7CAA7CAA7CAA7CAA7CAA8FFA8CFA7CAA7CAA7CFA8CFCACFA8CF%CACAA7CAA7CAA7CAA7CAA7CAA7CAA7CAA7CAA7CAA7FFA8FFA7CAA7CAA7CA%A8CFCACFA8CFCACFA8CFCACFA8CFCACFA8FD1EFFCAFFCAFFCAFFCAFFCAFF%CAFFCAFFCFCFA7FD12CAFFCAFFCACFCACFCACFCAFFCAFFCAFFCAFFFD13CA%FD05FFFD05CAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFD1EFFCACFCACFCA%CFCACFCACFCACFCACFCAFFCACAA7CAA7CAA7CAA7CAA7CAA7CAA7CAA7CAA7%FFCFCAA7CAA7CAA8CAA8CFCACFCACFCACFCACAA7CAA7CAA7CAA7CAA7CAA7%CAA7CAA7CAA7CAFFFFA8CFFFFFFFCFA7CACACFCACFCACFCACFCACFCACFCA%CFCACFCAFD1EFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCACFCACAA7CACACAA7%CAC9CAA7CACACAA7CAC9CAFFFFCFFFA8CFCAFFA7CFCAFFCAFFCAFFCAFFCA%CAA7CACACAA7CAC9CAA7CAC9CAA7FD04CAFFCFCACAFFCFFFA8CACAFFCAFF%CAFFCAFFCAFFCAFFCAFFCAFFCACFCAFD1CFFCACFCACFA8CFCACFA8CFCACF%A8CFCACFA8CAA7CAA7CAA7CAA8FFCAFFA8CAA8CAA7CACAFFA8FFCACFA8FF%A7CAA7CFCACFA8CFCACFA8CAA7CAA7CAA7CAA8FFA8CFA8CFA8CAA7CAA8FF%FFCACAFFA8FFA8CAA7CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFCAFD%1CFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCACFFD05CAFFFFFFCAFFCFFD07FF%CAFFFFCAA7CACACAA7CFCAFFCAFFCAFFCAFFFD05CACFFFFFCACFCAFD09FF%CAFFA7FD06CAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFD1CFFCACFCA%CFCACFCACFCACFCACFCACFCACFA8CAA7CAA7FFFFCAA7CFCACFA8CFCACAA8%CFA7CAFFFFA7CAA7CAA7CAA7CFCACFCACFCACFCACAA7CAA7CACFFFA8CAA8%CAA8FFCAFD05FFA7FFA8CAA7CAA7CAA7CFCACFCACFCACFCACFCACFCACFCA%CFCACFCACFCAFD1CFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCACFA7CACACACF%CFCAFD05FFCFFFCFFFCACFC9FFFD04CAA7FD04CAFFCAFFCAFFCACFA7FD04%CAFFCACAA7CACACAA8FFCAFFCAFFCAFFFFCFCACAA7FD04CAFFCAFFCAFFCA%FFCAFFCAFFCAFFCAFFCAFFCAFD1CFFCFCFA8CFCACFA8CFCACFA8CFCACFA8%CFA8CAA7CAA8FFCAFD05FFCAFFA8FFCAFFA8CFA8FFA1CAA7CAA7CAA7CFA8%CFCACFA8CFCACAA7CAA7FFFFFFA8CAA7CFA7CAA8CFCAFFA8FFFFFFA7CAA7%CAA7CAA7CAA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCAFD1CFFCAFFCA%FFCAFFCAFFCAFFCAFFCAFFCFCFA7CACAFFCFFFCFFD0BFFCACFFD07CACFCA%FFCAFFCAFFCAFFCACAC9FD05FFCAFD0CFFFD08CAFFCAFFCAFFCAFFCAFFCA%FFCAFFCAFFCAFFCAFD1DFFCFCACFCACFCACFCACFCACFCACFCAFFCACAA7FF%CACAFFFFCAFFFFFFA7FFFFFFCAFFA8CACACAA7CAA7CAA7CAA8CFCACFCACF%CACFCACAA7CFFFCAA8FD05FFCAFD08FFCFA7CAA7CAA7CAA7CACACFCACFCA%CFCACFCACFCACFCACFCACFCACFCAFD1CFFCACFCAFFCAFFCAFFCAFFCAFFCA%FFCACFFD05CAFFCAFFFFFFCACACAFD04FFCFCFFFC9CAA7CACACAA7CFCAFF%CAFFCAFFCAFFCACACACFC9FD06FFCACAFD07FFCACAA7CACACAA7CACAFFCA%FFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFD1CFFCACFCACFA8CFCACFA8CFCA%CFA8CFCACFA8CAA7CAA1CFCACAA8FFFFCAA1CAA8CFCAFFA8FFA7CAA7CAA7%CAA7CAA7CFCACFA8CFCACFA8CAA7CAA1CACFFD05FFA7CAA7CAA8FFFFFFA8%CAA7CAA7CAA7CAA7CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8FD1C%FFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCACFCACAA7CFFFFFCFFFFFFFFD04CA%A7FFFFFFFD08CAA7CFCAFFCAFFCAFFCAFFCACAC9CACFFFFFFFCAFFFD04CA%A7CAFFFFFFFD0ACAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFD1CFFCF%CFCACFCACFCACFCACFCACFCACFCACFA8CAA7CACAFFCACAA7FFCACAA7CAA7%CAA8FFCACAA7CAA7CAA7CAA7CAA7CFCACFCACFCACFCACAA7CAA8FFFFFFA1%FFFFCAA7CAA7CAA7FFFFFFA7CAA7CAA7CAA7CAA7CFCACFCACFCACFCACFCA%CFCACFCACFCACFCACFCAFD1CFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCACFA7%CACACFCAFFC9CFFFFFC9CAA7CAC9FFFFFFCACAA7CACACAA7FD04CAFFCAFF%CAFFCACFA7CACACFFFFFCACAFFFFCACAA7CACACAFFFFFFCFA7CACACAA7FD%04CAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCACFCFFD1AFFCACFA8CFCA%CFA8CFCACFA8CFCACFA8CFA8CAA7CAA8FFA7CAA7FFA8CAA7CAA7CAA8FFA8%FFA7CAA7CAA7CAA7CAA7CFA8CFCACFA8CFCACAA7CAA8FFA8CAA7CAFFCAA7%CAA7CAA7FFA8FFA8CAA7CAA7CAA7CAA7CFCACFCACFA8CFCACFA8CFCACFA8%CFCACFA8CFCAFD1CFFCAFFCAFFCAFFCAFFCAFFCFFFCAFFCFCFA7CACAFFCA%FFCACACAFFFD05CAFFFFFFCACFCACFCACFCACACACFCAFFCAFFCAFFCAFFCA%CACACFFFFFCACACAFFFFCAC9CACACAFD04FFFD07CACFA8FFCFFFCAFFCAFF%CAFFCAFFCAFFCAFFCAFFCAFFCFFD1AFFCACFCACFCACFCACFCAFFCAA77DCA%CAFFCACAA7CAA8CAA7CAA7CAA8CFA7CAA7CACAFFA8CF7D52272852A7A7CA%A8CFCACFCACFCACFCACAA7CAA7CFA8CAA7CAA8FFA7CAA7CAA7FFA8FFCFCA%A7CAA7CAA7CA762727A1A8CFCACFCACFCACFCACFCACFCACFCACFCAFD1CFF%CAFFCAFFCAFFCAFFA852202720A8CFCFCACAA7CACACAA7CACACAA7CACACA%A7CAC9CAA1280528052728CAC9CFCAFFCAFFCAFFCAFFCACAA7CAC9CAA7CA%CACAA7CACACAA7CAC9CAA7CACACAA7CACA7D274B4B4B2076CFFFCAFFCAFF%CAFFCAFFCAFFCAFFCAFFCFFD1AFFA8CFCACFA8CFCACFCA52F8FD0420A8CA%CFCACFA8CFCACAA8CFCACAA8CFCACAA8CFCA7700280527002727A8CACFCA%CFA8CFCACFA8CFCACAA8CFCACAA8CFCACAA8CFCACAA8CFCACAA8CFFD04CA%27276FC36F2727A8CACFA8CFCACFA8CFCACFA8CFCACFA8FD1CFFCAFFCAFF%CAFFCAFF4B27204B6F4B52CFA8FFA8FFCFA8A8FFCFFFCAFFCFFFCAFFCF7D%052827284BC34B28A7FFCAFFCAFFCAFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF%CFFFCAFFCFFFCAFFCFFFCAFFA77675A0C29A4B2776FFCAFFCAFFCAFFCAFF%CAFFCAFFCAFFCFFD1AFFCACFCACFCACFCAFFA74B4A6F4A754A527CFD0427%5227CFCACFCACFCACFCACFCAFF7700277676A09A7627CACACFCACFCACFCA%CFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCA524BA076%A076A027A1CFCFCACFCACFCACFCACFCACFCACFCAFD1BFFCFCAFFCAFFCAFF%CF5220756F756F4B76CF27272728F851CAFFCAFFCAFFCAFFCAFFCAFF5228%9AC99AA0752ECAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFF%CAFFCAFFCAFFCAFFCFCF4B769AC29AC3762752FFCAFFCAFFCAFFCAFFCAFF%CAFFCACFCAFD1AFFCACFA8CFCACFCAA7F8264A757576207D7D2EFD0527CF%CACFA8CFCACFA8CFCACFCACF0552A0C3A0767DCFA1CACACFCACFA8CFCACF%A8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFCACFA8CFA85220A09A9A9A4B%F852CACFCACFA8CFCACFA8CFCACFA8CFCACFFD1BFFCAFFCAFFCAFF52204A%994B754B27272E2752272727A8CFFFCAFFCAFFCAFFCAFFCAFFCFA8529AA0%CAA1A82E2E9ACACFFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCA%FFCAFFCAFFCFCA27519AC34B9A7C7627A8CFFFCAFFCAFFCAFFCAFFCAFFCA%FFCAFD1AFFCACFCACFCAFF7D216F994B51272727514B4B272E2752CAFFCA%CFCACFCACFCACFCACFA87E537D75767DA14B7676C2A1FFCACFCACFCACFCA%CFCACFCACFCACFCACFCACFCACFCACFCACFCACFCAFF7D75A0A19A9A9AA8A0%9F7CFFCACFCACFCACFCACFCACFCACFCACFFD19FFCAFFCAFFCAFFCFA193BC%4B2E272E4B756F756F752727A1FFCAFFCACFCAFFCACFCAFF7E532F5A2F7D%A07DC2C2A0C9C9CACAFFCAFFCAFFCACFCAFFCACFCAFFCACFCAFFCACFCAFF%CACFCAFFCACFCAC99FA7A1C39AA15AA7C1C8C9FFCACFCAFFCACFCAFFCAFF%CAFFCAFD19FFCFA8CFCACFCAC39394FD05274B4B756E756E4B27CFCACFA8%CFCACFA8CFCACF7D532F532F5A2F539AC27DC37CCAC3CFA8CFCACFA8CFCA%CFA8FFCACFA8FFCACFA8FFCACFA8FFCACFA8FFCACA9FC29FA09AA17E84A0%C19FC8A8FFCACFA8FFCACFA8FFCACFA8CFCAFD18FFCAFFCAFFCFCAB5BC4B%2E27522752272E27524B754BA8FD0BFFA8535A2F5A535A2FA1A059755284%FD05FFCAFD17FFC8C8A0C2C2C37E857EC89FC89FCFFD0AFFCAFFCAFD18FF%CFCFCACFCACF94B66F27272E2727272E2727272E4B6FA1FD0BFF7E535353%2F5A2F532F592F2F2F84FD04FFCACFCAFD16FFC89FC29FC1A0847E84A0C2%9FC1A6FD09FFCACFCACFCAFD18FFCAFFCAFFBCB69352272E2752272E2752%2727275293CAFD0BFFA92F5A53592F5A535A2F5A535A5AFFFFFFCFFFCAFD%17FFC9C29FC89FA77E8584C29FC89FC9FD08FFCAFFCAFFCAFD18FFA8CFCA%CF9AB593942728274BFD0427054B4B2705939AFFCAFFFFFFA8FFFFFFA8FF%FF5A2F5A2F532F5A2F2F2F7D77A1A1CFFFFFA8CFCAFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8C89FC29FC87E845A849FC19FC89FFFA9FF%FFFFA8FFFFFFA8CFCACFA8FD18FFCAFFCABC93B6935227756F7627512776%94BC93524B7084FD0BFFA85A535A535A53597DC3C2C3C2C3C3FFFFFFCAFD%17FFC2C89FC8A1857E8584C89FC8C2C8CAFD07FFCAFFCAFFCAFFCFFD16FF%CACFCFC393BC93936E756F756E754B9493BC9BB66F2E27A8FD08FFCFFFFF%A8285A53532F7D9AC39AC39AC39AC3A1FFA8CFCAFD16FFC89FC29F847E84%5A84A0C19FC89FCAFD07FFCFA8CFCACFCAFD18FFCAFFC3B693BC93756F75%6F754B4BB6BCC3FFBCB6277DFD0AFFCACF7E2F275A53A1BCC3C2C39AC3C2%C39AC3CAFFCAFD17FFCFC9C9A77E8584847EA7C1C89FC8C9FD07FFCAFFCA%FFCAFFCAFD16FFCACFA8CFA1BC949AFD0627F84B93FFA8A16F4B52FFFFFF%A8FFFFFFA8FFFFCFA7845A524BC3BCC39AC39A9A9AC39AC39AC3CACFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFCAFFA8FFFFFF5252527D5252272E2E7D5A85%7DC29FC29FC9A8FFA8FFA8FFA8FFCACFA8CFCACFCAFD16FFCAFFCAFFCFFF%FFCA272E2727F827275252764B524B5252CAFD04FFCAFFCACFA7FFCFCAA8%C3C2C3C2C3C3C39AC3C2C3C2C3C2CACFFFFFFFCFFFCAFFCAFFCFFFCAFFCF%FFCAFFCFFF52FD04272E272E272E275252A7C2C89FC8A6FFCAFFA8FFCAFF%CFFFCAFFCAFFCAFD16FFCACFCACFCACFCAFFA1936F52274B27524B4B4B52%4B524B4C52CFCAFFCACFCAFFA8FFFFFFA8FFA1C39AC39AC39AC39AC39AC3%9AC39ACACACFCACFCACAA0FFCAFFCACFCAFFCACFCAFFCA52272E2727272E%2727272827274BC89FC299A0CACFCAA1A7CFCACFCACFCACFCACFCAFD16FF%CAFFCAFFCAFFCA7D4B764B524B524B524B524B524B524B527DFFCAFFCACF%A8CFA8CFA8CFA8CA9AC3C2C39AC3C2C39AC3C3C39AC3C2CACAFFCAFFA1A1%CFFFCAFFCACFCAFFCACFCAFF52FD04272E272E272727522776C1C8A0C3A1%FFCAFF76CACFFFCAFFCAFFCAFFCAFD16FFA8CFCACFA8CFCACA4B524B524B%524B524B524B4B274B274B4B52A1CFA8FFA77C7BA07B7C7BA0A0C39AC39A%C29AC39AC39AC39AC39AC3A1CFA8CFCAA776FFCACFA8CFCACFA8CFCACFA8%52272705FD0727052751C89FC29ACACACFCAA0A1FFCACFA8CFCACFA8CFCA%FD16FFCAFFCAFFCAFFCA7D4B524B524B524B524B524B524B524B764B7CCA%FFCACFA0A6A0A67CA6A0C3C2C3C3C39AC3C3C3C2C39AC3C2C3C2C3CAFFCA%FFA1A1CFFFCAFFCAFFCAFFCAFFCACF5128272E272E2752277D525353A0C1%C8A0C3C3FFCFFFA0CACFFFCAFFCAFFCAFFCAFFCFFD14FFCACFCACFCACFCA%FFA8A8A1A1767D4B4B274B27524B524B4B27524BA8FFFFCFCAA7CAA7A8A7%CFCAFFCAFFCACA9AC39AC39AC39AC39AC39ACAFD04FFA8FFFFFFCAFFFFFF%CAFFFFFFA675FD082752FFA8FFA6C19FC29AC3A8FFFFFFCAFFFFFFCACFCA%CFCACFCAFD16FFCAFFCAFFCAFD09FFA8A87DA152524B524B524B5276FD10%FFC39AC3C2C3CAFFBCC3769AA1FD10FFC9752827272752272E2752FFFFFF%C99FC8A0A099CAFD08FFCAFFCAFFCAFFCFFD14FFCACFA8CFCACFA8FFFFFF%A8FFFFFFCAFD04FF7D27524B52274B4B4BA1FFA8FFFFFFA8FFFFFFA8FFFF%FFA8FF9AC39AC39ACAFFCA75A09AC3CFFFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFC87505FD072705A8FFFFA7C29FA027A1CAFFA8FFFFFFA8FFCACFA8CFCA%CFA8FD16FFCAFFCAFFCAFD0DFFA8524B7652524B764B7DFD0FFFC39AC3C3%C3CAFFFFCAA0C3A0A8FD10FFA152272E2752272E27277DFFCBFFCAFFCAFF%FFFFCAFD07FFCAFFCAFFCAFFCFFD14FFCACFCACFCACFCAFFFFFFCAFFFFFF%CAFD05FF524B4B524B4B4B524BA8FD04FFCAFFFFFFCAFFFFFFCFFFA1C29A%C39ACAFFFFFFC99A592F7EA8FFCFFFA8FFCAFFA8FFA8FFA8FFFFFFFD0527%2E2727007DFFA87DA87D7E7EA8A8A884FFA8FFA8FFCACFCACFCACFCAFD16%FFCAFFCAFFCAFFCFFFCFFFA8FFCAFFA8FFCAFFCA7D4B524B524B524B759A%FFA8FFCAFFA8FFCAFFA8FFCAFFA8CABCC39AC3C3FFA8FFA8532F592F5A7D%A8A8FFCAFFCAFFA8FFCAFFA8FFCA5227522727272E272752FF5959525952%7D53A9A88484A9CFFFA8FFCAFFCAFFCACFFD15FFCACFCACFA8CFCAFFA8FF%FFFFA8FFFFFFA8FFFFFF7D4B4B5227524B6F6E75A8FFA8FFFFFFA8FFFFFF%A8FFFFFFA1C29AC39ACAFFFFCAA8537E597E53532F7EFFFFCBFFFFFFCBFD%05FF52FD0727007DA85376C276C29A767DFF7EA87EFFFFFFA8CFCACFA8CF%CAFD16FFCFFFCAFFCAFD0EFFA84B524B764B27279A6F9AA8FD0DFFC2C3C2%C3CAFFFFFFA87D527D527D527D7DFD0CFF7D2752272727522728A8A92FA1%99A0C2A09A84FFFFA8FD05FFCAFFCAFFCAFD18FFCACFCACFCAFD0DFFA152%4B524B7627A8A16F6E7576CAA8A8767DFD06FFCAC39AC29AFFFFFFCACFA8%A87DA8A8FD0FFF7D05FD0427052752FF59539ABB7CCA76C17CFFA884A8A9%A9FFCACFCACFCACFCFFD18FFCAFFCAFD0EFFCA4B524B4B7DFFFFFF75756F%756F764B2727FD07FFA1C3C2C3FD04FFCAFD15FFA8A19AC37DA79AA1847E%53A1A0A97EA89AA17E847E847EFFFFFFCAFFCACFCAFD18FFCACFCACFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFA8524B754AA1FFFFFFA127512727202752FD%05FFA8FFFFCA9AC2A0FFA8FFCACFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FD05FFA19A9ACAFFC29A84595299C2A1CAA0C27C8459845A84A8FFCACF%A8CFCAFD1AFFCFFFCAFD0FFFA8FF766FA0FFFFFFA127F8F8277DA8FD09FF%CAC2C2C3CAFFFFFFCAFD16FFCA9AC3CAFFA0C3A18476C2A8AFA8FFA0847E%858484A8FFFFFFCAFFCAFD1CFFCACFCAFD10FFA74A75CAFFFFFF27F852FD%0CFFA852A1537EFFFFCFCFCAFD13FFA8C394BC939A9BBC939B5AA19AC9A9%FFA1A07D845A847EFFFFFFCACFCACFCFFD1CFFCACFCFFFA8FFFFFFA8FD09%FFA8756EA1FD04FFA8FD0DFF7E532F5A2F7EA8FFCAFFCFCAA1FFFFCAA1FF%CFFFFFFFCFFD05FFC3B693BC939393B693B69AA87E857EA87D847E847E84%7EA9A7A1CAFFCACFCAFD1CFFCACFCACFA176CAFFA175A8CFCACFCACFCACF%CAA84B756EA0CAFFCACFCACFCACFCACFCACFCACFCACFCAA8537E53592F53%53CAA8CA767CA8A87675A7A8A1A8A1A8A1A8A1A8A1CACACAA1CAC4CAA1CA%A8FF847E5A7E59845A7E59845A7E7DA175A8A7CACAFD1FFFA87DA87D7E7D%7D767D7DA27D7D7DA27D7D52274B756F767DA27DA27D7D7DA27D7D77FD04%7D7EA2A9A8A984847EA8A8CAA2A8A2A87DA87DA87DA87DA87DA87DA87DFD%04A8CAA8CAA8CBA8A87EA87DA87EA87EA87EA87EA87EA87DA8A1A8CAFD22%FFA9FFA8FFA8FFA8FFA8FFA8FFA8FF7D52F827272720277DFFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFCAFD63FFA87D7D527D52FDFCFFFDFC%FFFDDFFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 6.0-c002 79.164488, 2020/07/10-22:06:53        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/"
   dc:format="application/postscript"
   xmp:CreatorTool="Adobe Illustrator 24.3 (Macintosh)"
   xmp:CreateDate="2021-11-22T11:36:47+01:00"
   xmp:ModifyDate="2021-11-22T11:36:47+01:00"
   xmp:MetadataDate="2021-11-22T11:36:47+01:00"
   xmpMM:RenditionClass="proof:pdf"
   xmpMM:OriginalDocumentID="uuid:65E6390686CF11DBA6E2D887CEACB407"
   xmpMM:DocumentID="xmp.did:97b58f6b-86e8-42bc-8538-41101e4b5b0d"
   xmpMM:InstanceID="xmp.iid:97b58f6b-86e8-42bc-8538-41101e4b5b0d"
   illustrator:StartupProfile="Web"
   illustrator:CreatorSubTool="Adobe Illustrator"
   xmpTPg:NPages="1"
   xmpTPg:HasVisibleTransparency="True"
   xmpTPg:HasVisibleOverprint="False"
   pdf:Producer="Adobe PDF library 15.00"
   pdfx:CreatorVersion="21.0.0">
   <dc:title>
    <rdf:Alt/>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Pavel Sivak</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="172"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgArAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FWiyjqQPnjaaWG4gHWRfvyPEE8B7lpvLYft/gcHiBPhyWm+t/En6MHiBPhSaOoQeDfcP64+K&#xA;E+CWjqMPZW/D+uDxQvglo6jH2Q/hj4oT4Jd+kU/kP34+KF8EuGox90P4Y+KF8Et/pGL+Vvwx8UL4&#xA;JbGoQeDfcP64fFCPBLYvrc9yPox8QI8KS8Xdsf2x9NRh4wjw5LhNEejqfpGS4gjhK/CxdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdiq2SWOMVdgBgJASIk8kLJqKjZFr7nbKjl7m0Ye9Qa+uG6EL8hkDkL&#xA;YMQUmllb7Tk/TkTIsxELcCXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq2rMv2SR8sbQQqrd3C/t1+&#xA;e+SEyxOMFWTUW/bSvuMsGXvazh7kTHdQybBqHwOxywTBa5QIVckwdirsVdirsVdirsVdirsVUbq4&#xA;EKbbufsjITlTOELKWO7O3JjUnvmMTblAU1il2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxVEW948ZAb4k/EZZHIQ1TxgpirKyhlNQehzIBtxyKbxQ7FXYq7FXYq7FXYqld45a4bwX&#xA;YfRmNkNlysYoKOQbHYq7FUHJqISRk4V4mla5G2Qit/Si/wC+z9/9mPEngd+lF/32fv8A7MeJeB36&#xA;UX/fZ+/+zHiXgd+lF/32fv8A7MeJeBVN1KIxIYTwZeYNf2Q3H9eHdjQurUv0ov8Avs/f/Zg4mXAi&#xA;4pPUjV6U5CtMLAhfhVCT34ilaPhWlN6+IrkSWQjaz9KL/vs/f/ZjxJ4HfpRf99n7/wCzHiXgd+lF&#xA;/wB9n7/7MeJeB36UX/fZ+/8Asx4l4FVbqVohIsJKMWANf5ByP4Yd2NC6tS/Si/77P3/2YOJlwIm3&#xA;mE0fMCm9KYQWJFKuFDsVdiqM0+bcxHod1/jl2KXRozR6o7Lmh2KuxV2KuxV2KuxVKJ/7+T/WP68x&#xA;Jcy5keQWYGTsVdiqTXP+9En+scgW0clLAl2KuxVEWNqbq6SEbAmrHwA3OShGzTGcuEWj5or5WeW3&#xA;DSWp5JGgJPEDYfCOvTLCDzHJpiY8jzQUtqVgaaRDGSQEBqATXcAEA9MgY7W2iW9BHWn+80fyxDGX&#xA;NWwoSm+/3qf6P1DIFtjyQ+BLsVdiqpbwtPMkS/acgfL3wgWaRI0LZI0htfSsrSD1yq1kFQKA+JO1&#xA;TmVdbAOEBxeomkv1Gws0jknKS28h3VCAUqewK1A+/K5wHPk3Y8kuWxU9P/3mHzOVhslzRWFi7FXY&#xA;quicpIr+BrhBookLCcZluE7FXYq7FXYq7FXYqlNwKTyf6xzFnzcyHIKeRZOxV2KpNc/70Sf6xyBb&#xA;RyRltAsFsJ2h9edxWNCKqq9OTD37ZZEUL6tUpWaugmsEOqrBzeZValREEXavQbUy4CVNEjC+Sm4k&#xA;IrLHBIKAlnQg0ozHpXsMB+CRXS0PPc3FmFaO3ijVgVkeNfiqDQ7n55AyMejOMRLmSs1mT0o7WCJj&#xA;wVefLpUt3/XgymqAThFkkpUzuxqzFj4k1ym3IATa0/3mj+WTDVLmrYUJTff71P8AR+oZAtseSL02&#xA;yT0vrc0LzoDxSJBWp8T7ZZCO1kNWSe9A06TUJvXkWN3hUEhI0oKEfZHEe+JmbUYxXejYtTsJwvrx&#xA;xnYCQuNwfEAqRT/ZZYMkTzajikOSIS40mEl7dFeToBElWPtsMkJRHJgYzPNAaqZ4rRWk+Ga5kMkl&#xA;OwUUVfoyvJYHvbcVE+QShpJH+0xanSprlFuSAmWn/wC8w+ZyYa5c0VhYuxV2KuxVNrduUCH2/Vtm&#xA;VA7OHMUVTJMXYq7FXYq7FXYqlV2P9If5/wAMxZ83Lx/SpZFm7FXYqlUiRtdPzkCLzNepNPbamRrd&#xA;ss0m9tdxzWV6acY1Xih/2NFH0bUy+MrBcaUKkEyllYWbzD4WEZcex41y0na2gD1UgbOdL62JWizq&#xA;GDx9ASQACPY0yuJ4h5ts48J8m7pZFKxoAZ2MnBOtfUJIJ8AKmuMlhXwSTUXUzLErc1gQRBvEjqfv&#xA;OUTO9dzlYxtfehcgzTi0/wB5o/lkw1S5q2FCV3SK944Z1jHw7tXwHgDka3bAdk90u7hkc21vvBAg&#xA;AcihY13OZOOQOwcPLAjc8yiF02yWZpvSXm2+/QfIZLgF2x8SVVaE0qSwmH7oCJw1WhB2JHRt9zkM&#xA;ZieTPKJDmmmXNDHPMNyst0sSmohBBP8AlN1/VmLmlZpzdPGhfelWUt6aaf8A7zD5nJhrlzRWFi7F&#xA;XYq7FUysTW3A8CR/HMjHycXL9SIyxrdirsVdirsVdiqVXZrcP8/4Ziz5uXj+kKWRZuxV2KpNc/70&#xA;Sf6xyBbRyTIzQW1vGirWNQHcMP7yUgED/VXrl1gBooyP45Ii4upv0CHduUkxILezMT+rbJSkeBhG&#xA;I8T3JCrMpDKSrDoRscxnLpkU7BrK1k5Vm9EjnXf44+Na/wCsRmUeQcOP1EdLY5mK5jsVTi0/3mj+&#xA;WTDVLmrYUJTff71P9H6hkC2x5Jzp5tbDSxdHdpRU+JO9FGZEKjG3EyXOdNxXs7aRc3TmrszcAP2Q&#xA;aKPuwiZ4SVMBxgMeBINRsR3zFcxlOkSltPg9RizvyAJ3OzHx9szMZ9IcDMPUWLuGDsG3YE1J8cwy&#xA;54W4qmmn/wC8w+ZyYa5c0VhYuxV2KuxVMNOP7g/6x/UMvxcnGzc0VlrU7FXYq7FXYq7FUomNZnPi&#xA;x/XmJLm5keSzAyYv51/Mnyj5NgV9avAlxIAYrGKklw4NRyEYIIXY/E1B74QEgKHkX81PJ/nUzRaN&#xA;cOLu3HOWzuE9OUITTmBVlYV/lJp3xIpSE2uf96JP9Y5WWwclS5ullhRKHkvHelOiKrd968RkpSsM&#xA;YxoqsF7bjT3tJ1ZiWLRkUoDTb8cImOGixlA8VhA5W2plc6zp9vp4lldohbQH1ZG2RVSjljTsOH3Z&#xA;eJggAc3H8M2SeTxDWf8AnIzRIbl00rSpbyFZKLLLIIQ0Y/aA4O1T4EZeNEepazqx3M48keftE84W&#xA;c8+mrLFJasq3FvOFDqXFVI4swKmhofbMbLhMDu5GLKJjZntp/vNH8siES5q2FCU33+9T/R+oZAts&#xA;eStLfxSaXFaFG9SNqhtuPU/wOTMwY01jGRO3WF7BDBPBcKzxS0oFptTr/DGEgAQVyQJII6IHK21N&#xA;7LVLSG2tkcP6kDMdgKUYmvfwOXxyAAOPPEST5pfevA91I8FfSY1Feu+5/HKpVezdAGt0i8yeadE8&#xA;t2AvdWn9GJm4RqAWd260VRucAiSyJpgll/zkfpsOqmGbSZRohLLHeKwM5I/a9IgLT/J57fhlox7N&#xA;Ui9h0PWtP1vSbXVdPcyWd2nOFiCppWhBB6EEEHIkIR2KuxV2Ko/Tv7pv9b+GX4uTj5uaLy1pdirs&#xA;VdirsVcTQE+GKpKTU18cw3Odir5E/NefTvOn5h6tfaZfiW1tfQtYnC1RljQB2Q13Xnzp4/LIZMvB&#xA;Wzl4MHGOaVeXoH8veYNC1HTQ66jFeoobk1HSpEnPbYMlajwyOLKZSPc2Z8MYx83tnmb89r/y/r+q&#xA;6Je+XA1xZysLS49biksRNYnZShNWSjbHMqOKxbqpZiDSv5K/PFfNnm2w8vRaUmnPPHJLcPIzzkiO&#xA;Mvwj4oiqdvtMSO3WmMsdBYZTI09b9OP+UfcMqbrd6cf8o+4Yrbzz89G8yw+Q538vhqmQJqQhTlJ9&#xA;UZGDkdwK8eVB08BXL9MI8W7VmMuHZ8+eXfy8l1PTodXkvI/0fSR7iKIgzKI/2Pi4oGb3O3XLNRrx&#xA;CRjXq+xlpuzjkiJ36ftZl5Q8sabYfnF5eg012htpkkuJIFZpGX04GfjISSKOVHc/qyvDqJZMUuLm&#xA;Geq08ceUcPIh9KgACg2GUK3iq0ohNSoJ8aYq704/5R9wxW3enH/KPuGK2704/wCUfcMVt3px/wAo&#xA;+4YrbvTj/lH3DFbeF/m9JZeYPPkPl+4jdIdKtWkDqeIaWb03NAP8gr74JyMY2HI0uIZJUe5K9W0G&#xA;O+0O3s7oxQ29rGWkkBJCBEonD4V2A36jpTfrmPDJUrDtcuHigAeQZr/zjpdmXyVc27Xn1j6teyLH&#xA;bmtYI2VSooeztybbbr3rmXPm6J6rkVdirsVR+nfYf5jL8XJx83NF5a0uxV2KuxV2Kqdw3GBz7H8d&#xA;sjM7MoDcJTmK5jCvzd8yahoXku6bTIhNqV//AKHbAsFEfqqQ8xqR/drU/OmCwObfp9NPNLhgLfLt&#xA;lpi6FA8UtwrXshDv6fxhadFIPGvX2yuWOWQ7D0ubn4dJ6ZSBn5b/ADRMN7q1zqVlqELRxS6Z/vNw&#xA;RVHIkkNJsebb9T8ss4YYRvzLg+Jk1F8IoBS12XWNQupb/UrmS4urg8pLonka+G42A6AUpl+LPCew&#xA;cPUaTJj3luO96x/zjj5Kb17vzXdMWEXKzsVoRViAZZN2PQEKO25w5ZdGOGPV73lDkOxVj/mLzxoG&#xA;gyCG7kaS6IqLaEcnAPTlUhVr7nMnBpJ5NxyaMuohDY83ivl6CLTbiW38vRgWLzvK1heynmqMRxaO&#xA;VENeI2ZWXfb4tt6u1NLKJEpcu8OZ2TqRIGEefcfvH6WQX2p6xb3b6h5UtLKG5voVjXVJvUMtvGSH&#xA;aJY5eSqA9dxz5bV7UoM4YiYHoejb4WTPETHdtf4/QzP8vLjzYUWHXrtr1nieUTOipUh1AMfFEPHi&#xA;3fIwyGRJqo9E5MEYYudzvf7Wb5a4jsVdirsVdirsVdirwjWvLt/qHnvUvMty5tFtpngs7aOjGaKN&#xA;mjEjsS1FelafqzG/MxySMI/wiyf0By8EDCUZfzjX2NTaHNqdzdW01wU024iEbwwqEk5Vq7GTc0Io&#xA;AvzyzS4+OYAcvtHN4WOUidqoDzT/APKXy7deVdav7KO8SXRL1A8SSIBcC5UqFBdRQr6Zb6ew70Y9&#xA;fGUuCW0ga8i4EsB4RIciHrOZjQ7FXYqjdNO0g+X8cuxNGbojcuaHYq7FXYq7FUPfNS3I8SB/HK8n&#xA;JsxD1JRdXVvaW0lzcyCKCFS8kjdAo65jOZCBnIRiLJfOP5lecbjUbye+UlVkPo2Ubb8Ix3p4nqfc&#xA;5HFHjlvyen1c/wAhpBGP95Lr59T8OjzBm6sx9yTmweHJJNlel7PaqXjPwggup6U7n6BleTDGfNuw&#xA;6ieP6SmljdNeK9u4qzKePAVJr12r1zBzYPDIlHvdtpNRLUA4yPURs+vfJGhaVp3lHSbWxjeO2FrH&#xA;IquRzLSqJGZ+JK8izEmhpmbwiW7q5cWMmJ5xNJ59Uh8D9+Phhj4pb+qQeH4nHwwviF82+dkuW80a&#xA;wszH1RdShT/khzw+jjSmb/AAMYA7nU5rMjaSrMxdTESkqmpYbFMslESFEWwjMg2Nimdx5o1KMQpZ&#xA;RRh4wFeNmKo4OxUkKxX4R4HNN/I8Rx72Zcr6O5PbMrgKoR5117nrP5Q3T6rokjag3q31jK8aSKWU&#xA;CKajhKV3UMCFr0GR1Gkjj4QO5jj1s58XmbZvcxRxsFWtSK9fozDnABuxzJVbe3ieIMy1Jr3PjkoQ&#xA;BDGcyCqfVYP5fxOT8MMPEk39Wg/l/XjwBfEk76tB/J+vHgC+IXfVoP5P148AXxCgdcH1fSLqaFP3&#xA;qoeJHUV2J+gGuYut9GKRjzpu054sgB5PLJlEpPIH0iOLMPEHY/IZyWLKYGw9AOdrYLZIAQu7E7tn&#xA;fdmQHhCdUZB5LtbVTyZTEn0xOytAT6zODTifhI7HYf8AGozgMkrkT5vVwFRA8nqeltDd6db3JUcp&#xA;I1Lf61KN+OdjpiMmOMu8PP5iYzIRX1aD+T9eX8Aa/EKFuVjSQoq0oFNd+5P9MqyRA5NuORPNdYPx&#xA;n49mFP444juuUbJlmQ4zsVdirsVdiqE1E/u0Hia/cMqy8m7DzeQfnNqt8DZ6VA/pwSIZ5u/M8iqg&#xA;/wCrSuYWU9HrvZ/BEiWT+Lk8W1+1munhSRwnpgn4QSDyp40/lwY9R4d7WvbunOaUY3XCD9v9iWXO&#xA;kwPbiENxqDycipNR8xgjrJcRJ3dRPs2BiADVde9F+X/K36RMLKzXKTkLbRxbtKTt25dT2zKnqDyA&#xA;3cjQdhQlHxcsv3fTpY7z3ff7kf5s8q3HljU5PST0ZrBwk0Q+zQ0ow9mBH34wmSTCTPV6SOKMNXpt&#xA;oirH2fsL6T/KG+1q98i2M+qxtG1XWx5qEZrNWpbtQU2MdOJ7ih98yIigA8/qsgnlnIcpSJ+ZZnkm&#xA;h2KvBvzsOmWPm+BwWSa+iT1ywpH6u6x0av7apTpSo61ObTST9G/K3Czx9WzD7aznncpbxl2O5p03&#xA;8ScvzZ4YxcjSNPpcmWVQFp7Y+VrdER7tjJNUs4U0TcUp05bZpM/a0jtAV59XpNJ7PwjvlPEe4cv1&#xA;/cyPR7240aTnpzG3BIZ412R+PTmP2uvfNdLU5JGySXcfkMHDwiIHw3+b06y1WHVLeK7i25Rj1Er9&#xA;l+RBX8MyTPiFvPTwHFMxKb2v9wv0/ry3HycXJ9Spk2DsVdirsVS3zHFcS6LdRwAmQqDQdSoYFgP9&#xA;jXMLtCMpYZCPNyNLIDICXm0iSpEspjYRsSqvQ8agVO+c5oNH42WMTtEn7t6dtrNT4WOUhuR+lQz0&#xA;QChQeJJtuEcSV7kBvwp/DPL8kTGRB6PfwlxAEdXovk24EmirHy5NC7KR4AnkB+OdR2RO8NdxdLr4&#xA;1kvvTzNo4SAujW5k/wAlIx9JLnKcrdiU0Yo6sP2SDlQNFuIsJyCCKjocy3CdirsVdirsVQOpH4ox&#xA;7HKcrfh6pDrPl3RtZjVNStVn4V9N6lXWvWjKQ2UGILn6fV5MJuBp5L+b35eeU9K0OG+tJp7bU3lE&#xA;FsrSkwsDV25rxrQBdmrsclARj0tuzanLq5ATkI113HwNfqeE6jY6w0cttFOXD7FefJevZ1O3yOXC&#xA;MOdfY6/JDNE8JlY8pWPsLIPy91fzB5O1CG+tpo5vQD+lazqZI0aRWViKFG/aO1aYCBd9XIx58oxH&#xA;EZeg9PjeyaeZ/Nes+Zb17vVZEkkdVQrHGsa8UNVFFG9PE1ONC76pGaYx+Ffo7npn5PfmpeRzW3lf&#xA;VpUNvxSDS7hxQpwHFIGK9QQAE99u+0uJxJ4h0e1m6kp9pK/6rf1GDxA1+GUPfvqckZgihilSWKtW&#xA;YryJJqnHfYrTfBPiIoVuw2BYt5u/LDy9rty8dzp/qQXKssriZ42ptRVSnH4W3FMuGScBwxEeEtZj&#xA;EmzdsKXS4tKLadEnBbVjDQksaoeNSzEsTt1JzV5ZylL1Gy9ppoQjAcAqJ3WSBnPBWK03Yj9WVuQ2&#xA;hNSjGrL38QcVZD5V1xdPuGgnNLW4I5N/KwqAflvvluOdbOBrtL4g4h9QeiR3TKiqCKDvSv8AEZlx&#xA;yUHnJY7KCl8xKmtQ6VQ+rNA9wr8PhCowUg/HWvxeGHxt6XwDVo/63L/Ov/Is/wDNeHxWPhFo3Up/&#xA;bA/55/8AN+Pir4SQefPM99oHk/VdXtnDXNrCTBWMUEjkIjGrHZWauSjOzTGcKFvlmT81/wAxxMrj&#xA;zFehpGNf3p49Cdl+yOnhl1ONZS+584ebLmb1rjWr6WWpYM9xKaE9aVbbGt76oJsUnGk/mh5msiq3&#xA;Lpfwjqswo9PZ1ofvrl0c0g0ywxL1vSdUOo6TaamI/QW4jD8GPLiCK9qV3G2cNro3qJgdZF6zRA+F&#xA;EeTOPIt5PJZ3QR3WJJgFkKKFclATxrvttm37MjLHAiXe4uvx3Ie5N7fXZJtZu9LDuJLSOKVpCqcW&#xA;EtaAbduObLxd3CODa0ZVtyzF3Y1ZiAOgoBQAZGUrTGNOyLNNbV+Vuh8BT7tsyoGw4mQUVXJMHYq7&#xA;FXYqgNR+2nyyjLzcjDyQmVNzA/za8ieYPNNhpg0dUeW3mk5pIwQcXX7RJ8ClPpyyESxOQB5Te/k1&#xA;+ZFqhc6QZ1FamCaBzt4LzDH7ss4SoyxYnquj63pT8NTsp7BiaKs0TozH/J5AA/jgZggoAQsxDEmO&#xA;m4pux/1m/hilfDJLFMF5nkPjikGzCnuO4xV9S/lr5kfzR5XgvGIa9gP1e+FaH1UA+Kn+WpDf7WV8&#xA;B6NcpAIbXPJ2tTanNNaw84ZTzBWRF3bdqhiO+a/No8hkSAjxIoFfI/mMsAbcqD+0ZY6D7mOVjRZe&#xA;77QviRRX/KutdIqZrevgXev/ABDM0aWQHR3EO1cMQBUtvd+tJNW8valo7oL0J+/5FGjblXjSvh0B&#xA;GVzxmPNztPq4Zr4eiBjtprieOOBeczHiiDq1f2cgBbfOYiLPJbOTAWWUFGSodW2K8ftVr0p3rjSQ&#xA;QRfR6J5HvotW0GN4LiOZrZjBKVblQijKKiv7DLmXiiSHm9cYxyGuR3Rc3ly+fzPbaqHi+rw2sluy&#xA;Etz5O6sCBxpT4fHJ+CbcYZ48NJr9Sl8V/H+mHwiw8UO+pS+K/j/THwivihg/5zxSR/l7qkOzNNH2&#xA;7CIiVj/wmU5Mnhyj/SlTIDjjKugt8jT7emfBx+O38c2Lr18hIjYjqBir1/QfyCuPNNlaa3peqQ2e&#xA;j30EUkSUaaRJBGFnQ14/ZnV164LZCLNLTTBpmkx6Zy9QWUIt/UpTn6S8edBWnKlc4mc7zmX9L9L1&#xA;WnjwxiPIMq/Lm6huLOexVgJ42MwB/aRqKSPkeudJpxezi9pDhIl05J5aeXL6HzJqGps8Rgu4YIo1&#xA;BbmDFy5chxpT4tt8v8E264548ICZyW0ka8iQR7YygQiOQFSyDNMNPNYSPBv4DL8XJxs3NFZa1OxV&#xA;2KuxVB6kvwo3gSPv/wBrKcobsJQOUuQjoJI1hQMwU07kDvmTA7OLkG6/14f9+L94yVsad60H8679&#xA;dxja08C/5yE0K1ttX03V7VEVLyJoJxGAB6kJBVjTuyvT/Y5CTkYTtTyGXZom8Hp94IwNz0f8kfNb&#xA;6L5ujsZWpY6vS3lHYTV/cv8A8EeH+yxEgObDJjMht0fSnrw/78X7xlluJTvXh/34v3jG1p3rw/78&#xA;X7xja0wz8yeDw2EisG4NIpoQftBT/wAa5iaro7rsY7yHuYpoL8Nc09un+kRAk+BcA5j4/qHvdvqx&#xA;eKX9U/cyzz55U07ULZtUidUmtCZ7mMEFJlRT9sVp8P2gfEZk6jFxC4/U6DR6wxqEvo+79jEvKn5i&#xA;6bomoPZ3AL2VyVaWeOjem1KB6CpIpse+ZGh0GURJO3l1aO0tbilIAbkddqesW+q6bcQpPBcxywuK&#xA;pIjAqR7EZM7Gi4gFrzf2Y6zIPpyPEF4S1+kLH/f6f8EMeIJ4Sknm/TbDX9FnsPraRs8ciqdiCXjZ&#xA;KHceOY2pwDLw70Ym27DkML25inxJeVED7brQ0+RBzOcFUNGX2IxV9LfkD5nt7b8sJDcuAmn3ssZ5&#xA;ECiSKkgO57tKcFWaDZEgCymd7rXkqS5mlbUJEeVmcqiFgpYk9QpzVz7CjKRl6tz5OfHtPhAFxRf5&#xA;eWXlbQLS5/Rd1LfS0ea8vrpw8zmRzI7UQKAOR6KoHTNjHT8J5c2ieq441dgbs1s9e065A4zKtV5r&#xA;U0qtStd6dxkpRMebREg8lea6t5YWEUiuQRXia5TkIpuxg2hcochMNOH7lj/lfwGX4uTjZuaKy1qd&#xA;irsVdiqlcx+pAyjr1HzGRmLDOBopVmK5aNtVUwioB69fnmRj5ONk5qhhhO5RfuGTphbvQg/32v3D&#xA;Glt5j/zkDp0LeSYLiONVe3vYmLKADxZJEI+8jIyDbhO755htLq8uILW0jaa5mkSOGJBVmZ2ChQPe&#xA;uRckp5ZeT/OVp5XTzXe2LWNi9zxtA/JLhYxT0pnQiqK714k+3YgnD1eMipOXoM8ZXA8/ve4eTPzd&#xA;8p6pZxQ60YtN1RVCytKoWCQjq6vTitfBqU98txamJG+xcbUaGcTcd4p3qn5l/llpjol1q9lWRgvK&#xA;GkyKWNBzeIOq9e5zK2cIxl1ZZ9Vtf98p/wACP6YaDCyxvz7p0b6EZoo1U20iyMVFDxNUPT3YZRqI&#xA;+l2XZWWstHqGEeWrZrzXbKFNj6qu1QacY/jbr7LmHiFyDvdZMRxSJ7vv2en61ZJcaXc2yKqm4jeK&#xA;tKfbUrvT55sZGqPm8nDd40/5ZeYzNxt/LZmTiaXb61DEpNf99iwkYffmeNfI7inDOlAKbaD+WP5h&#xA;6fqcM8N3p+m26yK8gW4vL1iq0J+FI9OUk0/aqPnkJ6oy5gMo4QOpev5jNzsVdir4e866PNa+ade0&#xA;2GJnNveXMUaopJ4rIwQ0XxFMlYDWIknYJTHa3kZS3mgkjuQFDQOrK9SKj4SK7jfESFWphIGiN3sG&#xA;k6dNoH5QpbTyL9b1O7+tSQKaOkRjWIK6kAg/CD0y7ALNscoocJ52mun+XoryVYfq0fERs815NwSB&#xA;So5BHkYijNvxr775z4zZsk8ggZc+/wA3p5YcGLHiOQR+n+b5e9N/JMYstf43EJs47m2aC5t5eKek&#xA;QK8WoaV+Hj1zN0WoJ4oG+IUfs3cDtDTACOQUIniG1V9W33sy0u50/TtQkl9WQrZKwmfh8LRkKaKR&#xA;1oTy2zaSEpDlzdLExiTvyZjeEGFSNwSKH6DmDl5Obi5oPKHITW2j4QKp60qfpzKgKDiTNlVyTB2K&#xA;uxV2KuxVK7uH05jT7LbrmNONFy8crCIs/wC5HzOW4+TTl5q2WNbsVSPzr5Wh80eXrjRpZzbCZo2W&#xA;dVDlTG4f7JK1rSnXAQyjKjbwLXvKkfkHz/pQMxuLSGW1vY7iQAEqkg9SoXwZD9FMwM+SUZgdHb6b&#xA;HHJiJr1bh9DeZdN/S/lvUtPjCSPeWsscHIjjzZD6bVo3RqGtMziARTqISMTYfGvlfRPzL82axcaX&#xA;oukBJLWRor6a4DJFbsrcWWWRioDAj7IBbwGVDTw7nJOtyHq938hf847W2lanb6x5r1BNau7YiS20&#xA;+KLhZxSj9tuRLTFT9nkBTwy4CnHlMy5vZsLBAa+YV0LUHnFYktpXf5Khav4ZGUTIUOZbMOTgmJdx&#xA;eS+WfNOjafrljczzr6LuY2YdUDqV5MDQhQTvmLptFnGTcVX42dtr+0MMsVCV8X43ew3TK9urKQys&#xA;QVYbggjqMyMvJ1OLmvtP7hfp/Xjj5Lk5quWNbsVdirsVebfmR5m8uXQt7GC8jmvreQs/A1RVK0YG&#xA;T7NagbVzC1UgRQ5vRdl6HPG5mJET8/kx2x81eVf8G6jaGZP0gbpVRkQlmA4Nu1KkLxI8MqEh4ZHW&#xA;3Ml2dmOpEgNuHdJ7podT08RQycvSlT1GWooh+KldutKZsdNmPgS748v0Og7V0Ph6uBkKjPnfkd/d&#xA;sy3yxZWU1mTLc2QJn/eW19wZBwQskgVl7N3rStKjMXS4snqPFIE94/auuzYvRHhgQBzEvv2Sq6WI&#xA;aveNDJ6qI8nGUMGDEmlQQFBB7UGZGixHxpEmXTn7t3G7QzROniAIA73w+/b7kdpOmJd6nbW5LFZX&#xA;VW3/AGK1b/hRm2nOgS6LHC5APVbwBYVUbAEAD2AOafLyd5h5qNrD6soB+yu7ZXCNltySoJpmS4js&#xA;VdirsVdirsVUrmH1Yio+0N1J8cjKNhnCVFhfmOy883tgbWwtWtGEqP60F6I3ZFPxKCAhHIe+VnEa&#xA;2LfDNEGyLQfmaL8z9U0s2mn6edLnaRGN1Ffxl+CmrKKKtOWTOM9JIhlgDuE1GoefQAP8Prt/2sIz&#xA;/wAaYfD/AKTDjHc02peflUn/AA6poK0F/FU/L4MfD/pLxjueAfnV58vLnzDpy6ppkunxxRNC5kZm&#xA;KuXr8VUSm2U6jS8Q5uTptWMZ5bFNfJv5+T6NYJp988eo2cIC28vrhJIk7KWo/JR22qPHoMrwwmNp&#xA;cm3UHFL1R5vZbHXfOV9ZQXtnocc1pdRpPbzJqEXF45FDq4+DowNcyvD/AKTg8Y7lb9I+ff8AqXl/&#xA;6T4v+aMfD/pLxx7lN9V/MBWIHlnkP5hqEFPxAx8P+kvGO5Tun87anYz2N3oLW1vdxvDM6XsDyKjg&#xA;qxVSApND3OThHhkDfJjOQIIpiNz+TLvGv1f67HKNz6q2jrX5rcqfwzYDXd4cE6Yd6beVvJHnfRri&#xA;JVvXNgpPOzlKGI1r4SScd96qMo1GTHkB23727DGUDz2TfzD5V816xHbQl7KOG2uY7mgeYFwgYem3&#xA;w9CGzXnCC50NRw3shfM/lX8wdct4bX19PtoYriO4LRy3Ku4jrWNiF6NXfJHED1KIZ+E8kz+qfmR/&#xA;LpP/ACMuf+aMl4cfNh4jvqn5kfy6T/yMuf8AmjHw4+a+Isn0vzrdxtbarZ6fe2MoKzQQXV1bsR7v&#xA;w6e2Jxx82eLUnHLijsfcD96VTfljpUgCr5bhiG9SNRuGJ8OoptlfgQ7nYjtzU9Zn/Sxab8rdGReM&#xA;Hl1KD7KnUZUH4RtgGngyPb2o6T/2IVJfJOoR2CWml6DZ6e6uHa5F68kjAV2ZjCrHrUfFtmTh4cfJ&#xA;1Wt1GTUm8kiSOXkpTeQ/N0pBaS2cACnqXMxYf8km/Xl0ssDzjfwDgwwyA2kQ6XyD5qZ+Qa0kJAq0&#xA;lxMTt84WyX5gDkGH5YnmV3+BfNsTv6Q090kjaNhLLP0kUq1OMY7HK82UTFdG3T4vDlxdU38teXPN&#xA;Wl2Nrp9zJZzW8AKtMHlMjAsT3Wm1cwxhoOfPUAm6ZbBCsScRue58TlkY0HHlKyqZJi7FXYq7FXYq&#xA;7FXYq7FXYq7FXYqh7zT7C9jMd5bRXMZFCkyLItPkwOKpP/yrv8v+fqf4Y0n1BuH+o21aj34Yrafo&#xA;iRoqIoVFAVVUUAA2AAGKt4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q//Z"/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="xmp.iid:b642cacd-5674-4ac6-bdc3-7468f10b4855"
    stRef:documentID="xmp.did:b642cacd-5674-4ac6-bdc3-7468f10b4855"
    stRef:originalDocumentID="uuid:65E6390686CF11DBA6E2D887CEACB407"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:8c6aeaac-a4d8-40fa-8c43-e64cfd16c391"
      stEvt:when="2021-04-22T13:31:31+03:00"
      stEvt:softwareAgent="Adobe Illustrator CC 22.0 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:940eb7d8-6013-4bae-a148-254e7152df03"
      stEvt:when="2021-11-22T11:31:01+01:00"
      stEvt:softwareAgent="Adobe Illustrator 24.3 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:cd5514e0-7cc6-4bbd-a95e-bb827fc26c1c"
      stEvt:when="2021-11-22T11:36:45+01:00"
      stEvt:softwareAgent="Adobe Illustrator 24.3 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:b642cacd-5674-4ac6-bdc3-7468f10b4855"
      stEvt:when="2021-11-22T11:36:45+01:00"
      stEvt:softwareAgent="Adobe Illustrator 24.3 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:97b58f6b-86e8-42bc-8538-41101e4b5b0d"
      stEvt:when="2021-11-22T11:36:47+01:00"
      stEvt:softwareAgent="Adobe Illustrator 24.3 (Macintosh)"
      stEvt:changed="/"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="1212.634900"
    stDim:h="800.000000"
    stDim:unit="Pixels"/>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Default Swatch Group"
       xmpG:groupType="0">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="R=255 G=255 B=255"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="255"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="R=0 G=0 B=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="0"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="R=0 G=0 B=0"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="0"
         xmpG:green="0"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="R=26 G=26 B=26"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="26"
         xmpG:green="26"
         xmpG:blue="26"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                        
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -800 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 800 li
1212.64 800 li
1212.64 0 li
cp
clp
1212.63 800 mo
0 800 li
0 0 li
1212.63 0 li
1212.63 800 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
150.469 744.771 mo
150.469 744.771 89.0327 667.212 92.7222 574.416 cv
96.4115 481.62 127.394 353.49 122.685 283.46 cv
114.556 162.557 95.2319 99.4867 334.092 73.5809 cv
580.313 46.877 968.796 53.3097 1033.03 153.432 cv
1093.05 246.964 1067.42 411.421 1083.24 465.668 cv
1110.18 558.001 1124.02 608.766 1105.81 662.409 cv
1081.83 733.076 1054.4 744.199 1054.4 744.199 cv
150.469 744.771 li
.992157 .901961 .843137 rgb
f
882.883 380.574 mo
616.477 380.574 li
616.477 171.73 li
882.883 171.73 li
882.883 380.574 li
cp
.937255 .803922 .733333 rgb
f
864.838 207.597 mo
864.688 207.048 864.093 206.947 863.522 206.85 cv
844.699 203.649 840.256 203.091 839.577 199.551 cv
839.192 197.545 838.881 196.151 837.284 194.879 cv
835.785 193.687 834.091 192.84 832.248 192.321 cv
831.427 192.089 830.596 191.927 829.761 191.8 cv
830.144 188.43 829.224 184.876 827.505 181.984 cv
827.172 181.425 826.342 181.422 826.009 181.984 cv
825.045 183.617 824.28 185.378 823.703 187.183 cv
823.272 188.53 823.003 189.885 822.813 191.267 cv
822.105 191.225 821.399 191.177 820.696 191.104 cv
819.667 190.998 818.605 190.828 817.563 190.571 cv
817.396 190.056 817.229 189.542 817.063 189.027 cv
816.586 187.557 816.108 186.087 815.632 184.618 cv
815.196 183.275 814.835 181.873 814.276 180.576 cv
813.866 179.624 813.196 178.742 812.117 178.55 cv
811.605 178.459 811.166 178.685 810.991 179.189 cv
810.247 181.34 807.987 189.422 807.756 190.538 cv
806.03 195.686 802.215 200.054 798.918 204.283 cv
796.802 206.999 794.719 209.778 793.188 212.875 cv
791.586 216.119 790.798 219.633 789.736 223.07 cv
788.696 226.435 787.253 229.924 784.167 231.907 cv
780.691 234.139 776.267 234.263 772.268 234.341 cv
762.753 234.529 753.307 233.195 743.937 231.689 cv
727.512 229.049 710.854 226.013 694.278 229.279 cv
686.978 230.718 679.823 233.416 673.771 237.806 cv
667.471 242.377 662.749 248.6 659.086 255.411 cv
655.356 262.343 652.643 269.753 649.681 277.028 cv
646.948 283.74 642.68 292.091 634.232 291.882 cv
632.489 291.839 630.765 291.301 629.4 290.195 cv
628.369 289.359 626.889 290.822 627.93 291.666 cv
628.659 292.257 629.444 292.724 630.265 293.086 cv
634.533 295.499 639.779 295.555 644.465 294.006 cv
650.693 291.945 655.325 287.148 658.888 281.803 cv
660.736 279.03 662.319 276.096 663.854 273.14 cv
665.508 279.302 666.412 285.641 666.521 292.026 cv
666.616 297.53 666.171 303.253 663.949 308.36 cv
662.922 310.722 661.506 312.933 659.602 314.683 cv
658.713 315.5 657.724 316.195 656.659 316.764 cv
655.541 317.36 654.317 317.795 653.354 318.647 cv
651.056 320.679 651.971 324.428 652.114 327.1 cv
652.307 330.681 652.498 334.262 652.69 337.842 cv
653.133 346.095 653.603 354.346 654.072 362.597 cv
654.094 362.981 654.38 363.309 654.783 363.309 cv
659.084 363.305 663.385 363.319 667.686 363.333 cv
668.188 363.335 671.04 357.396 670.714 356.944 cv
668.113 353.353 665.983 354.076 666.479 349.888 cv
666.771 347.431 667.108 344.979 667.426 342.526 cv
667.756 339.967 667.898 337.285 668.601 334.794 cv
669.823 330.455 674.374 328.067 677.535 325.231 cv
680.811 322.293 683.797 319.042 686.464 315.544 cv
689.168 311.997 691.498 308.186 693.479 304.193 cv
696.851 311.433 697.535 319.833 695.324 327.525 cv
694.761 329.488 693.708 331.377 693.354 333.388 cv
693.033 335.211 693.625 336.781 694.723 338.224 cv
695.918 339.795 697.281 341.192 698.353 342.865 cv
699.424 344.538 700.313 346.328 700.985 348.197 cv
702.522 352.472 702.998 357.093 702.271 361.582 cv
702.188 362.101 702.486 362.634 703.071 362.631 cv
719.232 362.532 li
719.828 362.528 719.875 361.927 719.945 361.291 cv
721.444 347.631 712.895 357.665 711.337 350.207 cv
710.535 346.363 709.404 333.04 710.262 329.203 cv
711.102 325.441 712.586 321.871 714.001 318.3 cv
715.455 314.628 716.776 310.938 717.663 307.083 cv
718.551 303.226 720.778 293.723 720.815 289.601 cv
720.834 287.612 720.833 285.623 720.83 283.634 cv
720.828 282.032 720.384 279.027 722.897 279.787 cv
724.342 280.223 725.683 281.347 726.808 282.318 cv
727.894 283.254 728.894 284.286 729.827 285.373 cv
731.788 287.654 733.439 290.181 735.067 292.706 cv
738.275 297.684 755.877 304.706 761.429 306.076 cv
763.449 306.574 765.546 307.072 767.598 307.707 cv
767.665 308.87 767.724 310.033 767.753 311.192 cv
767.859 315.452 767.832 319.715 767.738 323.975 cv
767.55 332.505 768.805 340.256 768.388 348.777 cv
768.15 353.612 768.125 358.888 767.908 363.724 cv
767.89 364.128 768.209 364.514 768.59 364.619 cv
774.104 366.144 778.492 365.62 784.202 365.251 cv
784.591 365.226 784.202 365.251 784.293 364.843 cv
784.85 362.322 786.299 355.902 784.532 354.452 cv
783.599 353.685 781.063 354.463 779.896 354.852 cv
779.178 355.092 778.224 354.235 778.343 352.514 cv
778.91 344.339 779.703 336.178 780.737 328.048 cv
781.034 325.715 781.352 323.384 781.686 321.055 cv
782.834 324.968 783.245 329.229 783.895 333.042 cv
785.342 341.544 786.831 350.04 788.255 358.546 cv
788.617 360.712 788.978 362.878 789.339 365.045 cv
789.405 365.438 789.843 365.698 790.211 365.708 cv
794.677 365.832 799.142 365.968 803.606 366.104 cv
804.619 366.134 806.324 356.002 805.633 355.491 cv
802.25 352.988 799.651 357.474 799.056 353.531 cv
798.278 348.395 797.813 343.196 797.21 338.036 cv
796.569 332.56 795.929 327.083 795.288 321.607 cv
794.706 316.628 793.531 311.234 796.392 306.73 cv
797.639 304.768 799.263 303.067 800.685 301.234 cv
802.081 299.436 803.392 297.573 804.6 295.643 cv
807.042 291.739 809.076 287.583 810.689 283.271 cv
814.074 274.23 815.047 264.876 815.113 255.285 cv
815.186 244.913 819.383 235.806 823.707 226.127 cv
831.021 229.175 834.155 229.283 842.094 229.442 cv
849.299 229.586 856.963 227.725 861.258 221.474 cv
862.677 219.409 863.544 217.011 863.694 214.552 cv
864.011 214.007 865.829 211.215 864.838 207.597 cv
cp
1 1 1 rgb
f
833.667 212.411 mo
819.113 197.602 814.146 215.913 812.305 218.577 cv
805.415 228.548 804.578 243.568 789.189 254.846 cv
785.876 257.274 768.319 261.715 742.617 257.854 cv
738.426 257.224 734.851 254.065 730.39 254.275 cv
728.558 254.361 726.693 254.925 725.41 256.171 cv
724.313 257.235 723.604 258.731 723.714 260.21 cv
723.746 260.641 723.854 261.055 724.021 261.45 cv
722.026 261.434 719.794 261.644 718.422 263.056 cv
716.73 264.796 717.343 267.195 718.683 268.941 cv
720.214 270.937 722.606 272.363 725.073 273.214 cv
727.539 274.065 730.326 274.223 732.768 273.224 cv
734.868 272.364 736.677 270.679 737.238 268.599 cv
737.518 267.563 737.379 266.512 737.392 265.459 cv
737.403 264.548 737.539 263.4 738.727 263.204 cv
739.445 263.084 740.241 263.297 740.946 263.405 cv
741.787 263.534 742.63 263.656 743.473 263.771 cv
744.99 263.977 746.511 264.159 748.036 264.311 cv
751.207 264.626 754.396 264.808 757.586 264.801 cv
768.767 264.777 788.469 263.888 797.259 257.311 cv
807.897 249.351 809.94 225.862 821.379 219.609 cv
835.195 212.056 857.104 222.573 858.688 222.368 cv
858.914 222.339 861.014 219.258 860.986 219.049 cv
860.802 217.67 833.813 212.56 833.667 212.411 cv
cp
.937255 .803922 .733333 rgb
f
707.831 257.311 mo
707.827 257.31 li
707.826 257.31 li
707.83 257.311 li
707.831 257.311 li
cp
f
691.414 263.587 mo
691.534 262.654 691.89 261.728 692.366 260.859 cv
692.697 261.229 693.023 261.603 693.395 261.927 cv
693.494 262.008 li
693.452 262.665 693.544 263.317 693.635 263.977 cv
693.642 264.031 li
692.895 263.894 692.14 263.784 691.414 263.587 cv
cp
693.179 266.22 mo
693.039 266.253 693.047 266.253 692.837 266.237 cv
692.934 266.244 692.859 266.229 692.771 266.214 cv
692.753 266.154 li
692.721 266.07 li
692.924 266.102 693.126 266.136 693.326 266.174 cv
693.179 266.22 li
cp
693.94 272.505 mo
693.977 272.359 694.023 272.219 694.076 272.081 cv
696.005 272.75 698.39 272.005 698.917 270.007 cv
698.966 269.82 698.994 269.634 699.013 269.449 cv
699.707 269.752 700.485 269.878 701.253 269.722 cv
702.331 269.501 703.156 268.735 703.496 267.789 cv
704.222 265.769 702.891 264.076 701.835 262.427 cv
701.592 262.047 701.404 261.678 701.268 261.257 cv
701.231 261.142 li
701.218 261.042 701.221 260.937 701.227 260.837 cv
701.225 260.779 li
701.246 260.689 li
701.274 260.565 701.312 260.437 701.364 260.32 cv
701.442 260.147 701.636 259.922 701.761 259.854 cv
701.864 259.796 701.929 259.827 701.844 259.809 cv
701.98 259.838 701.992 259.801 702.078 259.863 cv
702.227 259.971 702.376 260.229 702.448 260.467 cv
702.574 260.884 702.619 261.154 702.646 261.538 cv
702.714 262.469 702.814 263.411 703.296 264.25 cv
703.799 265.128 704.799 265.729 705.892 265.721 cv
707.018 265.711 708.065 265.065 708.651 264.208 cv
709.312 263.241 709.306 261.986 708.888 260.938 cv
708.682 260.421 708.409 259.929 708.07 259.474 cv
707.747 259.038 707.326 258.616 707.104 258.125 cv
707.057 258.02 707.031 257.907 707.007 257.799 cv
706.979 257.68 li
706.983 257.678 li
707.017 257.667 li
707.024 257.631 li
707.058 257.589 li
707.106 257.518 li
707.193 257.471 707.273 257.417 707.364 257.374 cv
707.376 257.368 li
707.526 257.327 li
707.688 257.308 li
707.826 257.31 li
707.827 257.31 li
707.857 257.31 li
707.831 257.311 li
707.833 257.312 li
707.83 257.311 li
707.704 257.316 707.803 257.309 707.866 257.325 cv
707.963 257.372 li
707.994 257.393 li
708.019 257.425 li
708.065 257.492 li
708.199 257.686 708.216 257.734 708.264 257.851 cv
708.559 258.581 708.688 259.391 709.175 260.046 cv
709.82 260.916 710.941 261.389 712.081 261.102 cv
713.168 260.828 714.059 259.932 714.293 258.928 cv
714.582 257.688 714.09 256.542 713.488 255.453 cv
713.333 255.174 713.106 254.793 713.095 254.504 cv
713.036 254.508 li
713.06 254.491 li
713.223 254.455 713.144 254.458 713.315 254.51 cv
713.451 254.551 713.463 254.56 713.532 254.616 cv
713.675 254.732 713.77 254.887 713.851 255.046 cv
714.06 255.458 714.134 255.942 714.224 256.386 cv
714.454 257.512 714.725 258.641 714.895 259.776 cv
715.018 260.593 715.071 261.566 714.41 262.197 cv
714.18 262.417 713.908 262.547 713.662 262.543 cv
713.149 262.535 712.535 262.255 711.915 262.413 cv
710.867 262.679 710.324 263.711 710.251 264.634 cv
710.137 266.081 711.128 267.315 711.501 268.666 cv
711.551 268.865 li
711.562 268.906 li
711.562 268.914 li
711.568 269.208 li
711.542 269.315 li
711.533 269.34 li
711.528 269.354 li
711.479 269.489 711.503 269.466 711.328 269.562 cv
711.19 269.637 710.938 269.648 710.647 269.57 cv
710.34 269.488 710.069 269.334 709.847 269.063 cv
709.276 268.37 709.185 267.38 709.09 266.547 cv
709.007 265.82 708.411 265.368 707.606 265.512 cv
705.277 265.929 704.097 268 703.536 269.916 cv
703.471 270.138 703.411 270.362 703.351 270.585 cv
703.294 270.793 703.15 271.094 703.147 271.31 cv
703.144 271.412 li
703.044 271.412 li
702.981 271.4 li
702.078 271.243 701.272 270.836 700.323 270.929 cv
698.337 271.123 697.892 272.81 697.115 274.18 cv
696.932 274.504 696.863 274.645 696.598 274.853 cv
696.047 275.041 li
695.457 275.062 694.919 274.878 694.463 274.469 cv
693.948 274.009 693.74 273.313 693.94 272.505 cv
cp
694.687 267.944 mo
695.071 267.702 695.354 267.419 695.563 267.109 cv
696.169 267.605 696.615 268.279 696.661 268.948 cv
696.704 269.562 696.472 270.138 695.65 270.178 cv
695.48 270.171 li
695.632 270.038 li
696.22 269.546 696.001 268.701 695.393 268.338 cv
695.155 268.197 694.905 268.073 694.646 267.966 cv
694.687 267.944 li
cp
696.385 263.213 mo
696.41 263.793 696.41 264.394 696.439 264.992 cv
696.325 264.921 696.208 264.854 696.089 264.792 cv
696.071 264.331 696.017 263.864 695.962 263.412 cv
695.938 263.177 li
696.085 263.198 696.233 263.21 696.385 263.213 cv
cp
699.045 262.165 mo
699.159 262.493 699.308 262.816 699.486 263.134 cv
699.943 263.946 700.709 264.791 701.037 265.559 cv
701.208 265.958 701.249 266.264 701.262 266.625 cv
701.271 266.891 701.164 267.231 701.02 267.391 cv
700.882 267.5 li
700.677 267.588 700.579 267.584 700.357 267.551 cv
700.149 267.521 699.748 267.307 699.527 267.077 cv
698.918 266.442 698.863 265.398 698.844 264.559 cv
698.827 263.859 698.844 263.142 698.772 262.437 cv
698.87 262.354 698.959 262.261 699.045 262.165 cv
cp
688.744 268.625 mo
688.497 268.782 687.93 269.259 687.58 269.229 cv
687.513 269.192 li
687.34 269.083 687.203 268.796 687.121 268.628 cv
686.802 267.972 686.74 267.154 687.07 266.494 cv
687.396 265.841 688.063 265.494 688.701 265.457 cv
688.867 265.447 689.021 265.455 689.167 265.476 cv
689.223 265.683 689.289 265.888 689.378 266.09 cv
689.656 266.722 690.16 267.288 690.777 267.705 cv
690.778 267.708 li
690.058 267.899 689.394 268.214 688.744 268.625 cv
cp
688.545 260.373 mo
688.628 260.099 688.824 259.755 688.98 259.598 cv
689.224 259.354 689.376 259.238 689.73 259.183 cv
689.94 259.179 li
690.057 259.192 690.164 259.206 690.278 259.238 cv
690.397 259.272 690.513 259.319 690.624 259.373 cv
690.513 259.556 690.402 259.739 690.301 259.927 cv
689.88 260.713 689.49 261.589 689.25 262.492 cv
688.857 262.13 688.553 261.685 688.466 261.183 cv
688.438 261.019 688.471 260.619 688.545 260.373 cv
cp
732.558 249.367 mo
729.486 248.766 726.279 249.501 723.885 251.364 cv
722.617 252.351 721.651 253.705 720.842 255.023 cv
720.784 255.117 720.73 255.214 720.675 255.31 cv
720.497 255.008 720.299 254.676 720.262 254.392 cv
720.221 254.083 720.565 253.932 720.789 253.753 cv
721.026 253.563 721.232 253.341 721.379 253.083 cv
721.817 252.309 721.768 251.34 721.277 250.606 cv
721.965 250.27 722.489 249.689 722.71 248.995 cv
724.051 248.581 725.017 247.309 724.846 245.995 cv
724.703 244.889 723.811 243.996 722.696 243.655 cv
723.224 242.731 723.053 241.504 722.396 240.648 cv
721.516 239.499 719.979 239.079 718.502 238.96 cv
718.597 238.883 718.699 238.813 718.76 238.763 cv
718.992 238.57 719.233 238.373 719.394 238.122 cv
719.715 237.621 719.677 237.015 719.408 236.503 cv
718.722 235.19 717.177 234.929 715.745 235.167 cv
715.316 235.238 714.896 235.347 714.475 235.446 cv
714.296 235.488 713.869 235.661 713.692 235.614 cv
713.488 235.561 713.548 235.567 713.504 235.363 cv
713.385 234.81 713.029 234.4 712.419 234.251 cv
711.832 234.107 711.171 234.23 710.643 234.486 cv
710.106 234.746 709.643 235.224 709.071 235.441 cv
708.783 234.21 707.624 233.244 706.182 233.255 cv
705.411 233.261 704.694 233.535 704.129 234.009 cv
703.702 234.367 703.132 235.295 702.486 235.305 cv
702.111 235.31 701.791 234.906 701.509 234.717 cv
701.169 234.488 700.787 234.315 700.386 234.196 cv
699.639 233.975 698.796 233.958 698.042 234.162 cv
696.833 234.486 695.938 235.329 695.5 236.363 cv
694.666 235.768 693.465 235.625 692.488 236.062 cv
691.319 236.584 690.748 237.772 690.823 238.92 cv
689.71 238.908 688.68 239.705 688.294 240.664 cv
687.771 241.96 688.456 243.31 689.309 244.367 cv
688.38 245.036 688.166 246.232 688.617 247.275 cv
689.138 248.48 690.269 249.466 691.491 250.085 cv
691.647 250.164 691.808 250.237 691.97 250.306 cv
692.078 250.52 692.409 251.61 692.668 251.497 cv
693.404 251.74 693.98 252.089 694.894 250.962 cv
694.995 251.102 li
695.178 251.426 697.389 251.612 697.585 251.343 cv
697.726 251.176 li
698.863 251.076 698.247 250.5 699.211 249.908 cv
699.354 249.82 699.396 249.688 699.373 249.568 cv
699.644 249.434 699.913 249.297 700.183 249.162 cv
701.201 249.145 702.156 249.298 702.78 250.047 cv
703.336 250.715 702.915 251.493 702.225 251.907 cv
701.319 252.45 700.167 252.369 699.134 252.353 cv
696.869 252.318 694.646 252.827 692.386 252.791 cv
691.241 252.773 690.146 252.562 689.132 252.063 cv
688.206 251.608 687.372 251.014 686.449 250.554 cv
683.24 248.952 679.144 249.077 675.997 250.75 cv
675.197 251.176 674.496 251.71 673.831 252.295 cv
673.231 252.823 672.167 253.757 671.26 253.211 cv
670.652 252.846 670.509 252.043 669.907 251.639 cv
669.205 251.167 668.279 251.336 667.72 251.921 cv
666.996 252.68 667.164 253.696 667.392 254.6 cv
667.462 254.756 li
667.098 255.717 667.001 256.783 667.992 257.476 cv
668.94 258.139 670.331 257.573 670.435 256.563 cv
671.238 256.278 671.984 257.253 672.415 257.765 cv
672.986 258.444 673.665 258.996 674.524 259.353 cv
676.25 260.068 678.222 260.034 680.003 259.509 cv
681.002 259.215 681.952 258.785 682.854 258.297 cv
683.747 257.816 684.57 257.158 685.5 256.743 cv
686.49 256.301 687.836 256.683 688.887 256.761 cv
690.103 256.851 691.322 256.891 692.542 256.879 cv
692.654 256.875 li
692.417 257.103 692.19 257.338 691.972 257.58 cv
691.615 257.381 691.234 257.222 690.829 257.124 cv
689.683 256.849 688.532 257.1 687.628 257.787 cv
686.001 259.021 685.676 261.285 686.672 262.937 cv
686.819 263.181 686.988 263.407 687.173 263.619 cv
686.271 263.96 685.491 264.57 685.032 265.403 cv
684.438 266.479 684.342 267.768 684.727 268.919 cv
685.135 270.143 686.092 271.439 687.65 271.391 cv
689.032 271.347 689.849 270.326 691.043 269.889 cv
691.191 269.834 691.343 269.793 691.494 269.759 cv
691.68 270.1 691.895 270.425 692.146 270.724 cv
691.519 271.904 691.274 273.235 691.762 274.492 cv
692.455 276.281 694.601 277.484 696.659 277.123 cv
697.652 276.949 698.428 276.345 698.952 275.574 cv
699.398 274.917 699.615 274.155 700.039 273.488 cv
700.204 273.254 li
700.268 273.193 li
700.31 273.151 li
700.329 273.137 li
700.446 273.079 li
700.697 273.051 li
700.935 273.073 701.173 273.151 701.4 273.214 cv
702.403 273.495 703.484 273.804 704.433 273.204 cv
705.622 272.451 705.633 270.813 706.068 269.662 cv
706.275 269.113 706.583 268.583 707.02 268.187 cv
707.397 269.764 708.185 271.231 710.083 271.689 cv
712.184 272.196 714.182 270.788 713.944 268.769 cv
713.855 268.014 713.557 267.329 713.246 266.63 cv
713.107 266.319 712.968 266.007 712.854 265.688 cv
712.793 265.519 712.738 265.348 712.696 265.174 cv
712.673 265.06 li
712.656 264.873 li
712.662 264.732 li
712.686 264.615 li
712.714 264.621 li
713.023 264.691 713.342 264.759 713.662 264.76 cv
714.91 264.762 715.98 264.069 716.657 263.151 cv
717.363 262.195 717.468 260.958 717.328 259.841 cv
717.175 258.607 716.883 257.385 716.638 256.165 cv
716.426 255.106 716.202 254.036 715.406 253.198 cv
714.689 252.443 713.473 252.078 712.412 252.346 cv
711.085 252.681 710.494 253.925 710.751 255.098 cv
710.976 256.125 711.851 256.967 711.948 258.02 cv
711.981 258.375 711.885 258.667 711.646 258.841 cv
711.637 258.849 711.332 259.071 711.483 258.953 cv
711.424 258.973 li
711.281 258.908 li
711.363 258.935 711.18 258.756 711.273 258.905 cv
711.272 258.904 li
711.161 258.739 li
711.087 258.602 li
711.004 258.389 li
710.874 258.032 710.777 257.666 710.64 257.312 cv
710.28 256.384 709.703 255.544 708.641 255.206 cv
707.743 254.919 706.648 255.093 705.874 255.587 cv
704.901 256.208 704.427 257.174 704.623 258.251 cv
704.821 259.345 705.68 260.107 706.261 261.031 cv
706.503 261.418 706.704 261.842 706.739 262.292 cv
706.769 262.667 706.695 262.934 706.467 263.175 cv
706.314 263.336 706.227 263.377 706.018 263.474 cv
705.846 263.497 li
705.684 263.462 li
705.492 263.323 705.483 263.298 705.368 263.07 cv
705.056 262.45 705.112 261.539 704.985 260.723 cv
704.847 259.832 704.518 258.9 703.776 258.272 cv
702.922 257.548 701.675 257.385 700.642 257.877 cv
699.746 258.304 699.115 259.209 698.903 260.098 cv
698.903 260.099 li
698.713 260.029 li
698.434 259.959 698.175 259.988 697.948 260.081 cv
697.415 259.393 696.609 258.94 695.586 259.172 cv
695.14 259.274 694.76 259.507 694.448 259.809 cv
694.177 259.511 693.921 259.205 693.664 258.935 cv
693.75 258.827 li
694.385 258.046 695.161 257.362 695.993 256.76 cv
696.058 256.703 li
697.231 256.597 698.399 256.446 699.56 256.25 cv
701.662 255.895 703.8 255.436 705.722 254.553 cv
707.422 253.771 708.912 252.577 709.676 250.954 cv
710.384 249.45 710.479 247.641 709.49 246.217 cv
708.473 244.753 706.643 243.996 704.851 243.638 cv
702.615 243.191 700.273 243.197 698.034 243.611 cv
696.471 243.9 694.395 244.603 694.03 246.233 cv
693.657 247.905 695.359 249.069 696.984 249.28 cv
696.997 249.281 li
696.415 249.436 695.887 249.729 695.456 250.129 cv
694.818 249.518 693.838 249.252 692.94 249.437 cv
692.88 248.689 692.494 247.988 691.857 247.514 cv
692.573 246.941 693.237 246.239 693.229 245.334 cv
693.224 244.716 692.919 244.14 692.406 243.806 cv
693.094 243.115 693.672 242.241 693.514 241.385 cv
695.309 241.596 697.166 241.055 698.487 239.906 cv
699.521 240.395 700.635 240.859 701.817 240.802 cv
702.652 240.761 703.441 240.484 704.021 239.962 cv
705.022 240.882 706.353 241.646 707.811 241.491 cv
708.734 241.394 709.587 240.954 710.097 240.288 cv
710.858 241.333 712.191 242 713.567 242.011 cv
713.169 242.856 713.03 243.817 713.591 244.627 cv
713.96 245.161 714.591 245.534 715.253 245.608 cv
714.841 246.959 715.544 248.499 716.887 249.176 cv
716.223 249.784 715.833 250.64 715.922 251.512 cv
716.033 252.594 716.792 253.501 717.843 253.949 cv
717.837 255.326 718.272 256.671 719.123 257.815 cv
719.229 257.958 719.432 258.069 719.628 258.061 cv
719.56 258.509 719.54 258.963 719.601 259.421 cv
719.7 260.174 719.986 260.895 720.416 261.53 cv
720.528 262.231 720.77 262.9 721.215 263.448 cv
721.547 263.857 722.063 264.087 722.61 263.867 cv
722.85 263.771 723.053 263.595 723.177 263.382 cv
723.38 263.343 723.566 263.244 723.705 263.074 cv
723.957 262.766 724.005 262.212 723.632 261.946 cv
723.318 261.722 723.035 261.464 722.788 261.184 cv
722.769 261.074 722.748 260.965 722.74 260.854 cv
722.702 260.239 722.763 259.648 722.933 259.053 cv
723.304 257.757 724.07 256.597 724.897 255.505 cv
725.266 255.018 725.677 254.528 726.195 254.167 cv
726.761 253.773 727.444 253.52 728.09 253.262 cv
729.674 252.629 731.259 252 732.844 251.369 cv
733.787 250.993 733.509 249.553 732.558 249.367 cv
cp
f
749.54 252.224 mo
749.168 251.48 748.688 250.799 748.139 250.155 cv
747.051 248.878 745.635 247.808 744.01 247.156 cv
742.249 246.449 740.216 246.143 738.357 246.732 cv
736.603 247.29 735.286 248.43 734.684 250.044 cv
734.343 250.959 735.973 251.613 736.411 250.712 cv
737.617 248.231 741.012 248.123 743.323 249.253 cv
744.498 249.828 745.544 250.641 746.34 251.621 cv
746.772 252.153 747.148 252.741 747.438 253.349 cv
747.714 253.923 747.819 254.543 748.068 255.123 cv
748.283 255.625 748.745 255.985 749.367 255.899 cv
749.93 255.822 750.412 255.383 750.394 254.834 cv
750.364 253.935 749.943 253.03 749.54 252.224 cv
cp
f
750.941 267.031 mo
750.439 266.905 749.824 267.186 749.708 267.673 cv
749.13 270.091 747.991 272.774 745.585 274.135 cv
744.215 274.909 742.597 275.129 741.014 275.193 cv
739.464 275.256 737.718 275.334 736.365 274.524 cv
735.846 274.213 735.096 274.429 734.794 274.901 cv
734.452 275.436 734.706 276.001 735.206 276.34 cv
736.809 277.426 738.914 277.435 740.824 277.364 cv
742.824 277.291 744.878 277.006 746.623 276.049 cv
749.636 274.396 751.145 271.229 751.643 268.162 cv
751.722 267.671 751.509 267.174 750.941 267.031 cv
cp
f
537.612 380.574 mo
271.206 380.574 li
271.206 171.73 li
537.612 171.73 li
537.612 380.574 li
cp
f
519.567 207.597 mo
519.417 207.048 518.822 206.947 518.251 206.85 cv
499.428 203.649 494.985 203.091 494.306 199.551 cv
493.921 197.545 493.61 196.151 492.013 194.879 cv
490.514 193.687 488.819 192.84 486.977 192.321 cv
486.156 192.089 485.325 191.927 484.489 191.8 cv
484.873 188.43 483.953 184.876 482.233 181.984 cv
481.9 181.425 481.07 181.422 480.738 181.984 cv
479.773 183.617 479.009 185.378 478.432 187.183 cv
478.001 188.53 477.732 189.885 477.541 191.267 cv
476.834 191.225 476.128 191.177 475.425 191.104 cv
474.396 190.998 473.335 190.828 472.292 190.571 cv
472.126 190.056 471.959 189.542 471.792 189.027 cv
471.314 187.557 470.837 186.087 470.36 184.618 cv
469.925 183.275 469.564 181.873 469.005 180.576 cv
468.595 179.624 467.925 178.742 466.846 178.55 cv
466.334 178.459 465.895 178.685 465.72 179.189 cv
464.976 181.34 462.716 189.422 462.485 190.538 cv
460.759 195.686 456.944 200.054 453.647 204.283 cv
451.531 206.999 449.448 209.778 447.917 212.875 cv
446.314 216.119 445.526 219.633 444.465 223.07 cv
443.425 226.435 441.981 229.924 438.896 231.907 cv
435.42 234.139 430.995 234.263 426.996 234.341 cv
417.482 234.529 408.035 233.195 398.666 231.689 cv
382.24 229.049 365.584 226.013 349.007 229.279 cv
341.707 230.718 334.552 233.416 328.5 237.806 cv
322.199 242.377 317.478 248.6 313.814 255.411 cv
310.086 262.343 307.372 269.753 304.41 277.028 cv
301.677 283.74 297.408 292.091 288.961 291.882 cv
287.218 291.839 285.494 291.301 284.129 290.195 cv
283.098 289.359 281.618 290.822 282.658 291.666 cv
283.388 292.257 284.173 292.724 284.994 293.086 cv
289.262 295.499 294.508 295.555 299.193 294.006 cv
305.422 291.945 310.054 287.148 313.617 281.803 cv
315.465 279.03 317.048 276.096 318.582 273.14 cv
320.236 279.302 321.141 285.641 321.25 292.026 cv
321.345 297.53 320.9 303.253 318.678 308.36 cv
317.651 310.722 316.235 312.933 314.331 314.683 cv
313.442 315.5 312.453 316.195 311.388 316.764 cv
310.27 317.36 309.046 317.795 308.083 318.647 cv
305.785 320.679 306.7 324.428 306.843 327.1 cv
307.035 330.681 307.227 334.262 307.419 337.842 cv
307.861 346.095 308.332 354.346 308.801 362.597 cv
308.822 362.981 309.109 363.309 309.512 363.309 cv
313.813 363.305 318.113 363.319 322.414 363.333 cv
322.917 363.335 325.769 357.396 325.442 356.944 cv
322.842 353.353 320.712 354.076 321.208 349.888 cv
321.499 347.431 321.837 344.979 322.154 342.526 cv
322.484 339.967 322.627 337.285 323.329 334.794 cv
324.552 330.455 329.104 328.067 332.264 325.231 cv
335.539 322.293 338.525 319.042 341.192 315.544 cv
343.897 311.997 346.227 308.186 348.208 304.193 cv
351.579 311.433 352.264 319.833 350.054 327.525 cv
349.489 329.488 348.437 331.377 348.083 333.388 cv
347.762 335.211 348.354 336.781 349.452 338.224 cv
350.647 339.795 352.01 341.192 353.082 342.865 cv
354.152 344.538 355.041 346.328 355.714 348.197 cv
357.251 352.472 357.727 357.093 357.001 361.582 cv
356.917 362.101 357.215 362.634 357.8 362.631 cv
373.961 362.532 li
374.557 362.528 374.604 361.927 374.674 361.291 cv
376.173 347.631 367.624 357.665 366.066 350.207 cv
365.264 346.363 364.133 333.04 364.991 329.203 cv
365.831 325.441 367.315 321.871 368.73 318.3 cv
370.184 314.628 371.505 310.938 372.392 307.083 cv
373.279 303.226 373.82 299.29 374.154 295.348 cv
374.503 291.239 374.619 287.114 374.657 282.992 cv
374.675 281.003 374.674 279.014 374.671 277.025 cv
374.669 275.423 374.225 272.418 376.738 273.178 cv
378.183 273.614 379.523 274.738 380.649 275.709 cv
381.734 276.646 382.734 277.677 383.668 278.764 cv
385.629 281.045 387.281 283.572 388.908 286.097 cv
392.116 291.074 395.3 296.25 400.116 299.849 cv
404.781 303.336 410.605 304.706 416.157 306.076 cv
418.178 306.574 420.274 307.072 422.326 307.707 cv
422.394 308.87 422.453 310.033 422.482 311.192 cv
422.588 315.452 422.561 319.715 422.467 323.975 cv
422.279 332.505 423.533 340.256 423.116 348.777 cv
422.879 353.612 422.854 358.888 422.637 363.724 cv
422.619 364.128 422.938 364.514 423.318 364.619 cv
428.833 366.144 433.221 365.62 438.931 365.251 cv
439.32 365.226 438.931 365.251 439.022 364.843 cv
439.579 362.322 441.027 355.902 439.261 354.452 cv
438.327 353.685 435.792 354.463 434.626 354.852 cv
433.906 355.092 432.952 354.235 433.072 352.514 cv
433.639 344.339 434.432 336.178 435.466 328.048 cv
435.764 325.715 436.08 323.384 436.415 321.055 cv
437.563 324.968 437.974 329.229 438.623 333.042 cv
440.071 341.544 441.56 350.04 442.983 358.546 cv
443.346 360.712 443.707 362.878 444.068 365.045 cv
444.134 365.438 444.572 365.698 444.94 365.708 cv
449.405 365.832 453.87 365.968 458.335 366.104 cv
459.348 366.134 461.053 356.002 460.362 355.491 cv
456.979 352.988 454.38 357.474 453.784 353.531 cv
453.007 348.395 452.543 343.196 451.939 338.036 cv
451.298 332.56 450.657 327.083 450.017 321.607 cv
449.435 316.628 448.26 311.234 451.121 306.73 cv
452.368 304.768 453.991 303.067 455.414 301.234 cv
456.81 299.436 458.121 297.573 459.328 295.643 cv
461.771 291.739 463.805 287.583 465.418 283.271 cv
468.803 274.23 469.775 264.876 469.842 255.285 cv
469.915 244.913 474.112 235.806 478.436 226.127 cv
485.75 229.175 488.884 229.283 496.823 229.442 cv
504.027 229.586 511.691 227.725 515.987 221.474 cv
517.405 219.409 518.272 217.011 518.423 214.552 cv
518.739 214.007 520.558 211.215 519.567 207.597 cv
cp
1 1 1 rgb
f
500.252 217.69 mo
500.282 217.623 li
500.313 217.548 li
500.252 217.69 li
cp
.937255 .803922 .733333 rgb
f
500.501 217.222 mo
500.545 217.167 li
500.602 217.091 li
500.501 217.222 li
cp
f
488.758 205.414 mo
488.248 206.324 487.276 206.992 486.259 207.195 cv
484.986 207.449 483.748 207.017 482.569 206.531 cv
477.834 204.581 477.897 201.834 477.84 200.968 cv
477.752 199.636 478.677 198.401 479.895 197.94 cv
481.007 197.52 482.341 197.874 483.438 198.203 cv
484.47 198.514 485.494 198.953 486.377 199.577 cv
488.129 200.813 489.989 203.216 488.758 205.414 cv
cp
514.846 208.85 mo
514.069 207.928 512.97 207.551 511.811 207.381 cv
510.348 207.166 508.874 207.029 507.41 206.813 cv
504.625 206.403 501.781 206.013 499.053 205.304 cv
496.435 204.624 494.466 203.447 492.782 201.315 cv
492.06 200.401 491.375 199.446 490.487 198.681 cv
489.452 197.788 488.253 197.173 486.99 196.673 cv
484.461 195.672 481.763 195 479.094 194.501 cv
476.465 194.01 473.744 193.627 471.063 193.663 cv
468.899 193.692 466.57 194.041 464.739 195.275 cv
462.419 196.839 461.5 199.481 461.147 202.15 cv
460.901 204.002 459.868 210.879 469.466 213.405 cv
471.137 213.845 472.816 214.516 474.234 215.52 cv
475.57 216.465 476.474 217.817 477.956 218.589 cv
479.505 219.396 481.203 219.988 482.829 220.621 cv
484.541 221.286 486.274 221.905 488.047 222.389 cv
491.315 223.282 494.735 223.676 498.12 223.542 cv
501.955 223.389 505.743 222.578 509.298 221.136 cv
510.079 220.82 510.389 219.387 509.298 219.224 cv
508.279 219.07 507.258 218.924 506.237 218.776 cv
506.234 218.744 li
506.194 218.334 506.17 217.917 506.09 217.513 cv
506.068 217.4 505.983 217.271 505.903 217.191 cv
505.789 217.078 505.643 217.012 505.485 216.991 cv
505.202 216.953 504.905 217.084 504.759 217.339 cv
504.554 217.698 504.368 218.083 504.286 218.491 cv
503.601 218.392 502.917 218.292 502.231 218.193 cv
502.203 218.096 502.175 217.998 502.15 217.9 cv
502.087 217.653 502.033 217.405 501.959 217.161 cv
501.887 216.928 501.713 216.743 501.475 216.677 cv
501.236 216.611 500.975 216.68 500.8 216.855 cv
500.706 216.95 500.625 217.059 500.545 217.167 cv
500.392 217.375 li
500.282 217.623 li
500.242 217.712 500.203 217.802 500.172 217.895 cv
499.7 217.826 499.227 217.759 498.754 217.689 cv
498.639 217.672 498.521 217.657 498.404 217.64 cv
498.443 217.38 li
498.458 217.252 498.464 217.124 498.451 216.996 cv
498.434 216.821 498.415 216.647 498.349 216.484 cv
498.259 216.262 498.173 216.108 498.013 215.925 cv
497.784 215.662 497.385 215.491 497.037 215.508 cv
496.835 215.517 496.642 215.568 496.47 215.676 cv
496.273 215.801 496.062 216.004 496.014 216.241 cv
496.081 216.082 li
495.996 216.253 495.936 216.422 495.936 216.617 cv
495.936 216.79 495.983 216.989 496.085 217.131 cv
496.149 217.219 496.231 217.292 496.326 217.347 cv
495.146 217.178 493.961 216.987 492.811 216.695 cv
492.75 216.444 li
492.717 216.32 492.694 216.227 492.637 216.104 cv
492.544 215.912 li
492.421 215.658 492.315 215.386 492.156 215.154 cv
492.021 214.958 491.832 214.827 491.585 214.827 cv
491.37 214.827 491.11 214.949 491.015 215.154 cv
490.932 215.394 li
490.823 215.637 li
490.881 215.5 li
490.785 215.655 490.689 215.811 490.592 215.966 cv
490.396 215.889 li
489.79 215.623 489.199 215.299 488.662 214.911 cv
488.322 214.665 487.276 213.957 487.227 213.526 cv
487.203 213.32 487.976 213.259 488.867 213.255 cv
488.905 213.343 li
488.914 213.545 li
489.036 213.777 li
489.228 213.953 li
489.386 214.037 489.578 214.079 489.753 214.022 cv
489.92 213.968 490.074 213.866 490.161 213.708 cv
490.233 213.577 490.313 213.447 490.379 213.313 cv
490.391 213.286 li
490.886 213.306 491.284 213.327 491.422 213.331 cv
491.63 213.336 491.838 213.346 492.047 213.352 cv
492.06 213.585 492.141 213.814 492.249 214.019 cv
492.319 214.15 492.415 214.277 492.525 214.377 cv
492.602 214.447 492.683 214.52 492.775 214.568 cv
492.871 214.619 492.975 214.662 493.079 214.695 cv
493.321 214.771 493.585 214.683 493.763 214.514 cv
493.951 214.337 494.115 214.12 494.245 213.896 cv
494.323 213.759 494.39 213.614 494.44 213.465 cv
494.449 213.433 li
495.284 213.462 496.119 213.484 496.954 213.518 cv
496.953 213.536 li
496.974 213.785 497.039 214.039 497.187 214.245 cv
497.316 214.424 497.46 214.539 497.684 214.569 cv
497.885 214.596 498.113 214.542 498.254 214.382 cv
498.473 214.133 498.671 213.868 498.871 213.603 cv
499.422 213.628 499.975 213.648 500.526 213.676 cv
500.518 213.697 li
500.492 213.791 500.486 213.893 500.477 213.99 cv
500.463 214.133 500.482 214.273 500.506 214.416 cv
500.545 214.643 500.642 214.871 500.766 215.065 cv
500.889 215.255 501.06 215.373 501.284 215.403 cv
501.5 215.432 501.727 215.373 501.88 215.208 cv
502.155 214.913 502.401 214.578 502.584 214.217 cv
502.651 214.082 502.713 213.941 502.767 213.799 cv
503.981 213.879 505.182 213.993 506.363 214.175 cv
506.362 214.438 506.378 214.698 506.4 214.962 cv
506.43 215.309 506.459 215.655 506.489 216.002 cv
506.504 216.184 506.546 216.338 506.66 216.485 cv
506.762 216.617 506.907 216.733 507.074 216.771 cv
507.214 216.803 507.358 216.803 507.498 216.771 cv
507.706 216.724 507.856 216.57 507.975 216.405 cv
508.222 216.059 508.447 215.698 508.646 215.322 cv
508.744 215.137 508.835 214.949 508.921 214.758 cv
508.947 214.696 li
510.516 215.086 512.054 215.615 513.556 216.356 cv
514.158 216.652 514.736 216.385 514.972 215.78 cv
515.833 213.578 516.541 210.863 514.846 208.85 cv
cp
f
461.689 212.542 mo
461.694 212.546 li
461.733 212.577 461.828 212.645 461.689 212.542 cv
cp
f
461.184 221.621 mo
461.184 221.621 li
cp
f
457.643 217.421 mo
457.644 217.422 li
457.746 217.555 li
457.643 217.421 li
cp
f
460.758 268.508 mo
460.044 267.529 458.714 267.751 457.933 268.522 cv
457.748 268.706 457.615 268.931 457.451 269.132 cv
457.184 269.459 457.241 269.45 456.854 269.275 cv
456.378 269.061 455.972 268.771 455.422 268.782 cv
454.209 268.807 453.691 269.929 453.592 270.981 cv
453.47 272.281 453.388 273.557 453.134 274.843 cv
452.636 277.361 451.796 279.81 450.665 282.113 cv
448.236 287.062 444.661 291.206 440.632 294.899 cv
440.381 295.075 440.128 295.246 439.889 295.437 cv
438.562 296.497 437.625 298.227 438.274 299.926 cv
438.325 300.06 438.408 300.191 438.509 300.309 cv
438.515 300.413 li
438.713 301.653 439.802 302.725 441.118 302.424 cv
441.678 302.296 442.118 301.958 442.447 301.513 cv
442.908 300.943 443.197 300.164 443.255 299.384 cv
443.402 299.106 443.516 298.811 443.586 298.51 cv
446.829 296.461 449.64 293.775 452.124 290.814 cv
455.719 286.529 459.245 281.701 460.685 276.213 cv
461.023 274.923 461.23 273.585 461.274 272.252 cv
461.31 271.161 461.437 269.44 460.758 268.508 cv
cp
f
448.337 339.156 mo
447.759 336.157 447.188 333.156 446.579 330.163 cv
446.497 329.386 446.307 328.613 446.1 327.853 cv
445.743 326.209 445.349 324.576 444.913 322.957 cv
444.342 320.42 443.828 317.87 443.371 315.311 cv
443.304 314.934 443.251 314.556 443.189 314.179 cv
443.209 314.083 443.227 313.986 443.216 313.868 cv
442.945 310.917 443.064 308.019 443.077 305.067 cv
443.079 304.566 442.636 304.086 442.119 304.109 cv
440.737 304.171 439.363 303.649 438.46 302.574 cv
437.737 301.713 437.458 300.676 437.369 299.6 cv
437.571 299.029 437.793 298.464 437.956 297.88 cv
438.033 297.602 437.985 297.343 437.862 297.129 cv
438.107 296.442 437.115 295.808 436.542 296.361 cv
435.171 297.68 433.973 299.163 432.759 300.625 cv
432.413 301.042 432.382 301.572 432.759 301.989 cv
436.461 306.083 438.683 311.157 440.197 316.413 cv
441.837 322.104 442.873 327.98 443.956 333.798 cv
444.642 337.487 445.308 341.18 445.916 344.883 cv
446.001 345.402 446.616 345.632 447.067 345.537 cv
449.895 344.939 448.69 340.992 448.337 339.156 cv
cp
f
455.479 359.987 mo
455.743 359.886 456.015 359.811 456.294 359.763 cv
456.598 359.732 456.903 359.726 457.207 359.758 cv
457.436 359.783 457.763 359.631 457.915 359.465 cv
458.067 359.299 458.16 359.113 458.19 358.89 cv
458.219 358.676 458.192 358.438 458.072 358.251 cv
457.941 358.048 457.724 357.825 457.473 357.791 cv
457.21 357.753 456.95 357.729 456.688 357.724 cv
456.501 357.721 li
456.397 357.72 li
456.312 357.729 li
456.121 357.733 455.93 357.732 455.738 357.754 cv
455.423 357.791 455.126 357.842 454.82 357.922 cv
454.704 357.952 454.586 357.991 454.483 358.052 cv
454.474 358.059 li
454.47 358.06 li
454.255 358.129 454.05 358.216 453.909 358.399 cv
453.885 358.438 li
453.815 358.465 li
453.549 358.596 453.283 358.727 453.016 358.857 cv
452.841 357.941 452.497 357.053 452.252 356.141 cv
451.836 354.586 451.849 352.939 451.761 351.342 cv
451.717 350.543 451.685 349.743 451.629 348.946 cv
451.581 348.245 451.485 347.517 450.977 346.983 cv
449.987 345.946 448.544 346.328 447.395 346.823 cv
447.119 346.942 446.959 347.207 446.903 347.498 cv
446.591 347.617 446.376 347.92 446.522 348.348 cv
447.215 350.366 447.667 352.498 447.985 354.604 cv
448.308 356.747 448.556 358.902 449.312 360.947 cv
449.392 361.164 449.558 361.321 449.75 361.435 cv
449.734 361.467 li
449.589 362.016 449.585 362.597 449.579 363.161 cv
449.573 363.701 449.541 364.24 449.534 364.779 cv
449.529 365.231 449.928 365.64 450.384 365.629 cv
451.174 365.611 451.964 365.633 452.751 365.699 cv
452.953 365.716 453.153 365.735 453.354 365.756 cv
453.446 365.766 453.539 365.776 453.63 365.788 cv
453.79 365.807 li
454.228 365.867 454.662 365.951 455.102 366.003 cv
455.544 366.056 455.933 365.62 455.986 365.223 cv
456.043 364.796 455.779 364.339 455.341 364.235 cv
454.521 364.04 453.639 363.975 452.798 363.929 cv
452.261 363.899 451.724 363.897 451.187 363.907 cv
451.172 363.659 451.156 363.41 451.147 363.161 cv
451.136 362.893 li
451.219 362.891 li
451.456 363.008 451.714 363.079 451.994 363.088 cv
452.189 363.094 452.398 363.057 452.584 362.993 cv
452.674 362.962 452.748 362.923 452.815 362.881 cv
453.934 362.901 455.052 362.978 456.16 363.126 cv
456.714 363.201 457.257 362.993 457.425 362.408 cv
457.463 362.276 457.467 362.134 457.446 361.994 cv
457.47 361.919 li
457.535 361.435 457.236 360.929 456.743 360.806 cv
456.044 360.632 455.317 360.531 454.593 360.519 cv
454.63 360.5 li
454.897 360.299 455.178 360.128 455.479 359.987 cv
cp
f
457.227 262.286 mo
456.569 260.741 456.18 259.211 455.884 257.562 cv
455.328 254.46 454.246 251.57 452.685 248.833 cv
451.91 247.476 451.043 246.172 450.126 244.906 cv
449.301 243.768 448.454 242.592 447.379 241.673 cv
445.188 239.798 442.777 239.737 440.23 240.904 cv
439.063 241.439 437.937 242.168 436.663 242.428 cv
435.221 242.722 433.794 242 432.348 242.344 cv
429.369 243.054 429.888 246.452 430.971 248.557 cv
432.178 250.9 434.32 252.59 436.359 254.199 cv
436.259 254.339 436.187 254.5 436.148 254.679 cv
436.073 255.023 436.271 257.026 436.242 257.468 cv
436.194 258.225 436.139 258.981 436.081 259.737 cv
435.954 261.376 435.81 263.014 435.68 264.652 cv
435.431 267.799 435.234 270.954 435.325 274.112 cv
435.408 276.954 435.71 279.803 436.394 282.568 cv
436.734 283.948 437.165 285.307 437.728 286.613 cv
438.247 287.815 438.807 289.068 439.875 289.875 cv
440.169 290.098 440.66 289.8 440.627 289.444 cv
440.506 288.09 439.831 286.825 439.409 285.545 cv
438.954 284.167 438.574 282.773 438.297 281.349 cv
437.749 278.525 437.551 275.641 437.563 272.767 cv
437.576 269.552 437.831 266.342 438.103 263.14 cv
438.241 261.502 438.385 259.864 438.501 258.225 cv
438.546 257.588 438.689 256.814 438.715 256.065 cv
440.627 257.581 442.539 259.098 444.452 260.613 cv
444.342 260.735 li
443.754 261.599 443.677 262.811 443.534 263.824 cv
443.387 264.859 443.272 265.899 443.176 266.941 cv
442.968 269.223 442.873 271.521 442.877 273.813 cv
442.882 275.806 442.952 277.799 443.231 279.774 cv
443.495 281.64 443.882 283.874 445.016 285.426 cv
445.649 286.294 447.155 285.819 446.839 284.658 cv
446.351 282.866 445.65 281.216 445.377 279.356 cv
445.091 277.399 445.051 275.405 445.046 273.431 cv
445.04 271.328 445.108 269.229 445.246 267.131 cv
445.313 266.116 445.397 265.102 445.486 264.088 cv
445.557 263.28 445.721 262.386 445.638 261.553 cv
448.468 263.793 451.301 266.029 454.144 268.253 cv
454.431 268.924 455.039 269.396 455.741 269.48 cv
456.326 269.774 456.981 269.467 457.258 269.004 cv
457.967 268.4 458.281 267.354 458.323 266.453 cv
458.39 264.984 457.79 263.607 457.227 262.286 cv
cp
f
429.168 292.64 mo
428.963 291.248 428.017 289.85 427.489 288.549 cv
426.926 287.162 426.455 285.737 426.076 284.289 cv
425.338 281.464 424.934 278.58 424.852 275.662 cv
424.668 269.066 426.008 262.558 427.823 256.249 cv
428.237 254.81 425.995 254.195 425.584 255.632 cv
423.68 262.288 422.313 269.208 422.631 276.163 cv
422.772 279.259 423.223 282.377 424.11 285.35 cv
424.549 286.82 425.089 288.256 425.735 289.648 cv
426.328 290.924 427.064 292.523 428.246 293.349 cv
428.75 293.701 429.238 293.121 429.168 292.64 cv
cp
f
418.038 292.757 mo
417.497 291.236 416.779 289.78 416.221 288.263 cv
415.656 286.73 415.163 285.167 414.776 283.578 cv
414.019 280.469 413.653 277.299 413.628 274.101 cv
413.573 267.088 415.988 262.048 418.198 255.453 cv
418.641 254.129 416.656 253.661 416.151 254.889 cv
413.437 261.492 411.337 267.297 411.488 274.44 cv
411.559 277.803 412.023 281.198 412.923 284.44 cv
413.775 287.506 415.001 290.86 417.115 293.294 cv
417.471 293.704 418.22 293.271 418.038 292.757 cv
cp
f
404.567 254.628 mo
401.603 264.613 399.081 275.518 403.372 285.498 cv
403.639 286.117 404.701 285.674 404.469 285.035 cv
400.903 275.193 404.007 264.833 406.567 255.179 cv
406.91 253.886 404.947 253.349 404.567 254.628 cv
cp
f
395.761 252.748 mo
394.993 253.405 394.482 254.438 394.028 255.328 cv
393.526 256.309 393.083 257.321 392.688 258.35 cv
391.901 260.403 391.37 262.535 391.066 264.711 cv
390.496 268.801 390.574 273.458 392.261 277.298 cv
392.46 277.752 393.278 277.535 393.216 277.04 cv
392.966 275.038 392.594 273.065 392.533 271.041 cv
392.471 268.987 392.585 266.921 392.934 264.896 cv
393.27 262.948 393.799 261.028 394.503 259.182 cv
394.872 258.213 395.302 257.271 395.782 256.353 cv
396.253 255.451 396.892 254.553 397.18 253.574 cv
397.434 252.709 396.372 252.226 395.761 252.748 cv
cp
f
384.559 251.417 mo
383.381 252.062 382.795 253.871 382.358 255.062 cv
381.852 256.44 381.52 257.882 381.371 259.343 cv
381.069 262.304 381.472 265.201 382.62 267.947 cv
382.93 268.688 384.135 268.413 383.865 267.604 cv
383.018 265.066 382.74 262.232 383.14 259.583 cv
383.34 258.252 383.672 256.942 384.157 255.688 cv
384.399 255.059 384.681 254.447 385 253.854 cv
385.313 253.27 385.636 252.738 385.69 252.065 cv
385.738 251.472 385.023 251.162 384.559 251.417 cv
cp
f
376.248 250.078 mo
376.18 249.789 375.862 249.537 375.561 249.554 cv
374.551 249.613 374.133 250.817 373.875 251.647 cv
373.602 252.524 373.493 253.455 373.433 254.368 cv
373.291 256.532 373.386 258.766 373.857 260.887 cv
374.012 261.581 375.149 261.438 375.108 260.718 cv
374.995 258.732 374.927 256.763 375.102 254.777 cv
375.171 253.989 375.267 253.201 375.487 252.439 cv
375.588 252.086 375.713 251.742 375.884 251.416 cv
376.124 250.958 376.375 250.621 376.248 250.078 cv
cp
f
358.009 244.916 mo
357.842 244.438 357.676 243.959 357.51 243.482 cv
356.833 241.533 356.147 239.587 355.456 237.644 cv
355.313 237.241 354.905 236.801 354.424 236.858 cv
352.794 237.052 351.169 237.302 349.558 237.609 cv
348.78 237.758 348.006 237.928 347.233 238.103 cv
346.938 238.169 346.591 238.23 346.261 238.33 cv
345.343 238.418 344.355 238.77 343.597 239.005 cv
342.293 239.411 341.021 239.944 339.804 240.563 cv
337.345 241.816 335.091 243.475 333.052 245.327 cv
331.993 246.29 330.985 247.318 330.182 248.508 cv
329.376 249.7 328.919 251.056 328.51 252.423 cv
327.595 255.48 326.121 258.195 323.544 260.175 cv
322.716 260.812 323.02 261.943 324.059 262.074 cv
327.201 262.47 330.461 261.153 332.45 258.69 cv
332.531 258.566 li
332.745 258.394 332.862 258.082 332.714 257.789 cv
331.753 255.88 333.286 253.729 335.398 254.039 cv
337.656 254.371 338.625 256.756 338.24 258.801 cv
338.064 259.734 339.288 260.751 340.026 259.841 cv
343.273 255.839 346.415 251.274 350.668 248.231 cv
351.1 248.009 351.532 247.789 351.966 247.572 cv
353.31 247.155 354.712 247.006 356.179 247.341 cv
357.068 247.543 358.096 247.403 358.292 246.329 cv
358.383 245.831 358.168 245.375 358.009 244.916 cv
cp
f
338.385 263.132 mo
338.27 261.241 338.056 259.353 337.373 257.634 cv
337.331 257.527 337.277 257.437 337.219 257.354 cv
337.166 257.154 337.07 256.963 336.945 256.779 cv
336.842 256.233 336.493 255.764 335.802 255.539 cv
335.216 255.348 334.746 255.467 334.39 255.76 cv
333.707 255.935 333.134 256.533 333.036 257.416 cv
332.911 258.545 333.602 259.545 334.591 259.822 cv
337.077 270.387 337.788 281.287 338.146 292.126 cv
337.961 293.12 337.751 294.109 337.501 295.093 cv
337.359 295.12 337.217 295.145 337.074 295.179 cv
336.179 295.397 336.022 296.697 336.817 297.142 cv
337.363 297.447 337.894 297.771 338.417 298.106 cv
338.595 298.485 338.973 298.74 339.384 298.742 cv
340.187 299.299 340.962 299.894 341.708 300.532 cv
342.341 301.073 343.66 300.784 343.556 299.767 cv
342.293 287.496 340.555 275.275 338.385 263.132 cv
cp
f
340.75 301.393 mo
339.522 300.575 338.246 299.829 336.952 299.116 cv
336.686 298.936 336.401 298.78 336.099 298.646 cv
335.94 298.563 335.787 298.469 335.627 298.387 cv
335.479 298.31 335.325 298.302 335.182 298.336 cv
334.548 298.264 334.02 298.781 333.984 299.414 cv
333.782 302.951 332.097 306.117 330.152 309 cv
327.991 312.203 325.565 315.239 323.246 318.328 cv
320.909 321.439 318.254 324.489 316.381 327.913 cv
315.284 329.918 314.583 332.071 314.143 334.286 cv
313.95 334.04 313.757 333.794 313.564 333.548 cv
312.871 332.664 312.056 331.661 310.807 331.731 cv
310.03 331.774 309.494 332.586 309.908 333.298 cv
310.49 334.3 311.081 335.296 311.683 336.286 cv
311.979 336.773 312.281 337.256 312.59 337.736 cv
312.745 337.976 312.916 338.207 313.087 338.435 cv
313.19 338.574 313.296 338.658 313.402 338.779 cv
313.55 338.948 313.641 339.086 313.847 339.195 cv
313.959 339.254 314.08 339.28 314.199 339.28 cv
314.354 339.361 li
316.352 340.135 li
317.044 340.402 317.578 339.734 317.651 339.145 cv
318.328 333.705 322.666 329.599 325.667 325.318 cv
328.953 320.634 331.394 315.441 334.34 310.55 cv
335.166 309.179 336.032 307.831 336.966 306.529 cv
337.426 305.888 337.9 305.256 338.395 304.641 cv
338.862 304.061 339.386 303.279 340.211 303.381 cv
341.35 303.521 341.538 301.917 340.75 301.393 cv
cp
f
318 356.435 mo
317.203 356.182 316.382 356.019 315.553 355.917 cv
315.915 355.881 316.279 355.865 316.643 355.873 cv
318.027 355.903 319.485 356.402 320.723 357.153 cv
321.345 357.532 322 356.667 321.494 356.153 cv
320.566 355.213 319.434 354.595 318.154 354.264 cv
317.525 354.101 316.864 354.003 316.213 353.989 cv
315.91 353.982 315.605 353.999 315.303 354.031 cv
315.181 354.044 315.058 354.063 314.936 354.079 cv
315.258 352.245 315.583 350.41 315.897 348.575 cv
316.234 346.615 316.617 344.656 316.904 342.688 cv
317.196 340.697 315.187 340.646 313.714 340.706 cv
313.276 340.724 312.913 340.984 312.758 341.366 cv
312.523 341.633 312.434 342.043 312.59 342.401 cv
312.596 342.52 312.622 342.635 312.662 342.746 cv
312.601 346.303 312.682 349.861 312.907 353.412 cv
312.926 353.484 li
312.542 355.707 312.16 357.93 311.793 360.155 cv
311.689 360.791 312.059 361.472 312.785 361.457 cv
314.946 361.41 317.103 361.539 319.249 361.788 cv
320.575 361.942 320.576 359.845 319.249 359.702 cv
317.504 359.515 315.757 359.429 314.005 359.408 cv
314.103 358.863 314.194 358.317 314.291 357.772 cv
314.311 357.776 li
316.455 357.813 318.6 358.411 320.583 359.351 cv
321.412 359.744 322 358.682 321.29 358.141 cv
320.294 357.382 319.2 356.816 318 356.435 cv
cp
f
414.772 241.833 mo
414.772 241.838 li
414.79 241.971 414.791 241.973 414.772 241.833 cv
cp
f
327.006 254.389 mo
327.016 254.26 326.997 254.119 326.954 253.997 cv
326.906 253.861 326.838 253.737 326.756 253.623 cv
326.719 253.385 li
326.708 253.294 li
326.696 253.24 li
326.677 253.136 326.658 253.033 326.631 252.931 cv
326.611 252.835 326.598 252.738 326.571 252.644 cv
326.54 252.537 326.505 252.431 326.467 252.327 cv
326.392 252.123 326.325 251.903 326.167 251.746 cv
325.935 251.513 325.53 251.443 325.214 251.434 cv
324.992 251.428 324.766 251.474 324.557 251.548 cv
324.432 251.592 324.319 251.644 324.212 251.719 cv
324.118 251.785 324.022 251.857 323.955 251.953 cv
323.914 251.985 li
323.833 252.065 li
323.696 252.159 323.585 252.292 323.524 252.446 cv
323.518 252.456 li
323.443 252.584 323.425 252.731 323.454 252.867 cv
323.434 253.12 323.437 253.369 323.501 253.625 cv
323.544 253.797 323.618 253.963 323.693 254.122 cv
323.737 254.216 323.792 254.305 323.853 254.389 cv
324.068 254.68 324.294 254.917 324.604 255.111 cv
324.784 255.224 324.979 255.289 325.182 255.332 cv
325.358 255.4 li
325.451 255.478 325.558 255.539 325.667 255.564 cv
325.881 255.613 326.123 255.603 326.313 255.479 cv
326.431 255.404 326.546 255.295 326.622 255.169 cv
326.713 255.092 326.8 255.008 326.864 254.895 cv
326.955 254.732 326.992 254.573 327.006 254.389 cv
cp
f
323.984 255.811 mo
323.688 255.451 323.229 255.293 322.778 255.258 cv
322.582 255.243 322.371 255.275 322.182 255.327 cv
321.994 255.379 321.796 255.458 321.634 255.57 cv
321.234 255.845 320.938 256.206 320.79 256.673 cv
320.745 256.814 320.732 256.965 320.715 257.111 cv
320.708 257.347 li
320.732 257.672 320.803 257.913 320.935 258.208 cv
321.027 258.416 321.171 258.604 321.321 258.772 cv
321.484 258.928 li
321.567 258.995 321.65 259.067 321.741 259.124 cv
321.902 259.225 322.074 259.256 322.259 259.271 cv
322.563 259.295 322.875 259.085 323.023 258.833 cv
323.08 258.735 323.107 258.636 323.123 258.536 cv
323.237 258.554 li
323.523 258.55 323.825 258.367 324.021 258.162 cv
324.311 257.858 324.458 257.419 324.444 257.001 cv
324.428 256.551 324.27 256.157 323.984 255.811 cv
cp
f
321.448 261.281 mo
321.168 260.831 320.696 260.603 320.182 260.551 cv
319.791 260.512 319.341 260.638 319.014 260.854 cv
318.608 261.122 318.308 261.504 318.157 261.968 cv
317.977 262.52 318.096 263.108 318.332 263.62 cv
318.438 263.851 318.598 264.062 318.767 264.249 cv
318.872 264.365 318.999 264.489 319.136 264.564 cv
319.286 264.646 319.454 264.67 319.622 264.684 cv
319.696 264.698 li
319.989 264.749 320.322 264.668 320.473 264.382 cv
320.595 264.151 320.579 263.918 320.467 263.707 cv
320.729 263.667 320.983 263.566 321.167 263.395 cv
321.414 263.167 321.592 262.823 321.644 262.493 cv
321.71 262.075 321.678 261.649 321.448 261.281 cv
cp
f
317.27 267.193 mo
317.27 267.193 li
317.265 267.202 li
317.27 267.193 li
cp
f
318.452 265.818 mo
318.086 265.344 317.571 265.038 317.001 264.868 cv
316.673 264.771 316.198 264.926 316.046 265.256 cv
315.826 265.739 315.694 266.237 315.715 266.772 cv
315.726 267.052 315.772 267.32 315.843 267.581 cv
315.87 267.742 315.921 267.896 316.007 268.034 cv
316.093 268.268 li
316.304 268.714 316.665 269.176 317.095 269.432 cv
317.373 269.597 317.711 269.586 317.989 269.433 cv
318.351 269.232 318.452 268.757 318.3 268.398 cv
318.293 268.387 li
318.63 268.084 318.815 267.657 318.869 267.203 cv
318.928 266.706 318.753 266.208 318.452 265.818 cv
cp
f
315.266 271.184 mo
314.84 271.055 314.364 271.125 313.974 271.323 cv
313.809 271.407 313.654 271.528 313.523 271.659 cv
313.39 271.792 313.263 271.952 313.186 272.125 cv
313.066 272.392 312.996 272.643 312.987 272.939 cv
312.981 273.157 313.019 273.389 313.096 273.593 cv
313.183 273.821 313.319 274.048 313.49 274.242 cv
313.477 274.348 li
313.509 274.587 li
313.534 274.649 li
313.57 274.78 313.637 274.895 313.733 274.991 cv
313.803 275.067 313.887 275.121 313.983 275.152 cv
314.059 275.169 li
314.2 275.298 li
314.331 275.368 314.473 275.406 314.622 275.413 cv
314.737 275.417 314.844 275.393 314.944 275.34 cv
315.047 275.307 315.137 275.249 315.213 275.167 cv
315.339 275.064 315.438 274.93 315.533 274.798 cv
315.627 274.664 315.689 274.505 315.746 274.353 cv
315.803 274.199 315.82 274.031 315.836 273.869 cv
315.836 273.836 li
316.099 273.663 316.291 273.358 316.354 273.063 cv
316.529 272.263 316.053 271.424 315.266 271.184 cv
cp
f
313.641 277.963 mo
313.607 277.483 313.501 276.991 313.255 276.57 cv
312.908 275.98 312.133 275.434 311.458 275.861 cv
310.661 276.367 310.248 277.244 310.186 278.167 cv
310.152 278.672 310.268 279.166 310.47 279.625 cv
310.613 279.889 li
310.666 280.105 310.796 280.304 310.997 280.411 cv
311.158 280.464 li
311.404 280.625 311.688 280.706 311.989 280.614 cv
312.274 280.526 312.447 280.312 312.514 280.044 cv
312.866 279.93 313.175 279.663 313.36 279.345 cv
313.598 278.937 313.674 278.429 313.641 277.963 cv
cp
f
307.562 286.126 mo
307.529 285.929 307.413 285.77 307.29 285.62 cv
307.074 285.44 li
306.813 285.319 li
306.734 285.296 li
306.641 285.279 306.538 285.259 306.439 285.261 cv
306.342 285.263 306.244 285.276 306.149 285.299 cv
306.058 285.322 305.957 285.372 305.877 285.407 cv
305.801 285.447 li
305.763 285.473 li
305.572 285.622 li
305.387 285.848 li
305.338 285.931 li
305.301 286.01 305.25 286.11 305.235 286.203 cv
305.205 286.448 li
305.203 286.586 305.231 286.761 305.316 286.875 cv
305.385 286.991 305.477 287.083 305.593 287.152 cv
305.786 287.232 li
305.916 287.361 li
305.982 287.401 li
306.035 287.421 li
306.079 287.456 li
306.246 287.526 li
306.432 287.551 li
306.44 287.551 li
306.475 287.549 li
306.718 287.505 li
306.823 287.494 li
306.986 287.448 307.052 287.385 307.182 287.281 cv
307.255 287.211 li
307.392 287.054 307.483 286.917 307.546 286.715 cv
307.558 286.668 li
307.591 286.425 li
307.6 286.329 307.575 286.213 307.562 286.126 cv
cp
f
291.993 293.536 mo
291.958 293.413 291.896 293.306 291.806 293.215 cv
291.659 293.101 li
291.545 293.035 291.423 293.002 291.292 293.002 cv
291.246 292.997 li
291.001 292.966 li
290.929 292.974 li
290.784 292.989 li
290.682 292.985 290.587 293.007 290.499 293.053 cv
290.407 293.083 290.328 293.134 290.26 293.206 cv
290.188 293.273 290.137 293.353 290.107 293.444 cv
290.061 293.533 290.04 293.627 290.043 293.729 cv
290.07 293.926 li
290.105 294.052 290.168 294.161 290.26 294.253 cv
290.41 294.369 li
290.526 294.436 290.65 294.47 290.784 294.47 cv
290.929 294.485 li
291.001 294.493 li
291.247 294.462 li
291.292 294.457 li
291.392 294.461 291.485 294.44 291.572 294.395 cv
291.806 294.244 li
291.877 294.178 291.927 294.1 291.957 294.01 cv
292.002 293.923 292.023 293.83 292.019 293.729 cv
291.993 293.536 li
cp
f
310.567 281.591 mo
310.572 281.47 310.546 281.358 310.492 281.253 cv
310.456 281.145 310.396 281.05 310.31 280.971 cv
310.151 280.825 309.915 280.687 309.69 280.714 cv
309.454 280.743 309.287 280.772 309.073 280.863 cv
308.867 280.95 308.712 281.049 308.542 281.203 cv
308.275 281.444 308.11 281.75 307.979 282.077 cv
307.882 282.317 307.838 282.591 307.844 282.851 cv
307.833 282.918 li
307.835 283.019 307.848 283.11 307.872 283.198 cv
307.886 283.26 li
307.889 283.282 li
307.91 283.405 307.964 283.516 308.015 283.629 cv
308.11 283.844 308.277 284.083 308.485 284.183 cv
308.623 284.263 308.771 284.303 308.93 284.304 cv
309.089 284.303 309.238 284.263 309.375 284.183 cv
309.481 284.121 309.566 284.033 309.637 283.936 cv
309.733 283.896 309.825 283.851 309.903 283.794 cv
310.097 283.653 310.257 283.499 310.372 283.282 cv
310.468 283.101 310.54 282.908 310.57 282.705 cv
310.602 282.491 310.626 282.285 310.613 282.069 cv
310.604 281.91 310.587 281.75 310.567 281.591 cv
cp
f
309.917 282.53 mo
309.981 282.682 li
309.917 282.53 li
cp
f
295.928 292.984 mo
295.901 292.873 295.851 292.775 295.775 292.693 cv
295.622 292.54 li
295.539 292.464 295.442 292.413 295.331 292.386 cv
295.103 292.355 li
294.949 292.356 294.805 292.395 294.671 292.473 cv
294.55 292.537 li
294.457 292.608 li
294.363 292.681 li
294.352 292.693 li
294.342 292.706 li
294.334 292.714 li
294.198 292.891 li
294.132 292.994 294.116 293.057 294.1 293.153 cv
294.06 293.3 294.06 293.447 294.1 293.594 cv
294.125 293.702 294.175 293.796 294.248 293.876 cv
294.307 293.967 294.384 294.038 294.481 294.09 cv
294.611 294.166 294.75 294.203 294.9 294.204 cv
294.998 294.209 295.067 294.206 295.182 294.175 cv
295.318 294.138 295.523 294.029 295.618 293.92 cv
295.708 293.816 li
295.791 293.738 295.851 293.646 295.885 293.541 cv
295.938 293.439 295.963 293.329 295.958 293.211 cv
295.928 292.984 li
cp
f
297.999 292.434 mo
297.939 292.388 li
297.975 292.42 li
297.999 292.434 li
cp
f
299.995 291.395 mo
299.969 291.287 299.92 291.193 299.847 291.113 cv
299.698 290.965 li
299.618 290.892 299.524 290.842 299.417 290.816 cv
299.196 290.787 li
299.047 290.788 298.907 290.825 298.778 290.9 cv
298.581 291.011 li
298.449 291.079 li
298.434 291.084 li
298.369 291.103 li
298.347 291.109 li
298.285 291.135 li
298.075 291.219 li
298.026 291.247 li
297.975 291.269 li
297.839 291.373 li
297.735 291.508 li
297.656 291.756 li
297.656 291.933 li
297.702 292.102 li
297.788 292.249 li
297.929 292.378 li
298.016 292.448 298.109 292.502 298.211 292.541 cv
298.297 292.572 li
298.335 292.587 li
298.321 292.578 li
298.565 292.653 298.848 292.629 299.088 292.58 cv
299.218 292.553 299.342 292.502 299.458 292.438 cv
299.569 292.375 299.697 292.286 299.782 292.201 cv
299.863 292.126 299.92 292.037 299.953 291.935 cv
300.005 291.836 300.029 291.729 300.024 291.615 cv
299.995 291.395 li
cp
f
297.939 292.388 mo
297.929 292.378 li
297.862 292.328 li
297.939 292.388 li
cp
f
304.396 288.761 mo
304.247 288.568 li
304.054 288.418 li
303.944 288.349 303.826 288.311 303.699 288.306 cv
303.572 288.277 303.445 288.283 303.318 288.322 cv
303.187 288.368 303.045 288.423 302.925 288.5 cv
302.666 288.696 li
302.577 288.803 li
302.541 288.808 li
302.258 288.859 302.043 289.088 301.901 289.322 cv
301.829 289.441 301.774 289.575 301.737 289.709 cv
301.704 289.954 li
301.737 290.198 li
301.83 290.417 li
301.887 290.525 301.966 290.611 302.066 290.676 cv
302.269 290.794 li
302.501 290.857 li
302.746 290.857 li
302.868 290.851 302.982 290.815 303.088 290.748 cv
303.265 290.654 303.434 290.543 303.597 290.428 cv
303.821 290.269 304.04 290.099 304.247 289.917 cv
304.396 289.725 li
304.466 289.615 304.503 289.497 304.509 289.37 cv
304.509 289.116 li
304.503 288.989 304.466 288.871 304.396 288.761 cv
cp
f
357.179 237.947 mo
357.179 237.947 357.711 238.749 358.288 241.28 cv
358.865 243.812 359.441 246.65 360.418 246.473 cv
361.394 246.295 364.365 247.005 364.188 246.163 cv
364.01 245.32 362.769 240.307 362.414 239.065 cv
362.059 237.823 361.394 237.291 359.752 237.291 cv
358.111 237.291 356.78 237.317 357.179 237.947 cv
cp
f
364.267 238.685 mo
364.267 238.685 364.799 239.486 365.376 242.018 cv
365.953 244.549 366.529 247.388 367.505 247.21 cv
368.481 247.033 371.453 247.743 371.276 246.9 cv
371.098 246.057 369.856 241.045 369.501 239.803 cv
369.147 238.561 368.481 238.028 366.84 238.028 cv
365.199 238.028 363.868 238.054 364.267 238.685 cv
cp
f
371.866 239.16 mo
371.866 239.16 372.398 239.961 372.975 242.493 cv
373.552 245.024 374.128 247.863 375.104 247.686 cv
376.08 247.508 379.052 248.218 378.875 247.375 cv
378.697 246.533 377.455 241.52 377.1 240.278 cv
376.746 239.036 376.08 238.503 374.439 238.503 cv
372.797 238.503 371.467 238.53 371.866 239.16 cv
cp
f
378.521 239.736 mo
378.521 239.736 379.054 240.538 379.63 243.069 cv
380.207 245.601 380.784 248.44 381.759 248.263 cv
382.735 248.085 385.708 248.795 385.53 247.952 cv
385.353 247.109 384.11 242.097 383.755 240.854 cv
383.401 239.612 382.735 239.08 381.094 239.08 cv
379.453 239.08 378.122 239.106 378.521 239.736 cv
cp
f
385.06 240.935 mo
385.06 240.935 385.593 241.736 386.169 244.268 cv
386.746 246.799 387.323 249.638 388.298 249.46 cv
389.274 249.283 392.247 249.993 392.069 249.15 cv
391.892 248.307 390.649 243.294 390.294 242.053 cv
389.94 240.811 389.274 240.278 387.633 240.278 cv
385.992 240.278 384.661 240.304 385.06 240.935 cv
cp
f
392.998 241.747 mo
392.998 241.747 393.531 242.548 394.107 245.08 cv
394.684 247.611 395.261 250.45 396.236 250.273 cv
397.212 250.096 400.185 250.805 400.007 249.962 cv
399.83 249.12 398.587 244.107 398.233 242.865 cv
397.878 241.623 397.212 241.091 395.571 241.091 cv
393.93 241.091 392.599 241.117 392.998 241.747 cv
cp
f
400.937 243.332 mo
400.937 243.332 401.469 244.133 402.045 246.665 cv
402.622 249.196 403.199 252.035 404.175 251.858 cv
405.15 251.68 408.123 252.39 407.945 251.547 cv
407.768 250.705 406.525 245.692 406.171 244.45 cv
405.816 243.208 405.15 242.675 403.509 242.675 cv
401.868 242.675 400.537 242.702 400.937 243.332 cv
cp
f
408.452 243.332 mo
408.452 243.332 408.984 244.133 409.561 246.665 cv
410.138 249.196 410.714 252.035 411.69 251.858 cv
412.667 251.68 415.638 252.39 415.461 251.547 cv
415.284 250.705 414.042 245.692 413.687 244.45 cv
413.332 243.208 412.667 242.675 411.025 242.675 cv
409.384 242.675 408.053 242.702 408.452 243.332 cv
cp
f
415.844 243.807 mo
415.844 243.807 416.376 244.608 416.953 247.14 cv
417.53 249.671 418.106 252.51 419.083 252.333 cv
420.059 252.155 423.03 252.865 422.853 252.022 cv
422.676 251.18 421.434 246.167 421.079 244.925 cv
420.724 243.683 420.059 243.15 418.417 243.15 cv
416.776 243.15 415.445 243.177 415.844 243.807 cv
cp
f
422.932 244.383 mo
422.932 244.383 423.464 245.185 424.041 247.717 cv
424.618 250.248 425.194 253.087 426.17 252.91 cv
427.146 252.732 430.118 253.442 429.941 252.599 cv
429.763 251.756 428.522 246.744 428.167 245.501 cv
427.812 244.26 427.146 243.728 425.505 243.728 cv
423.864 243.728 422.533 243.753 422.932 244.383 cv
cp
f
449.647 239.922 mo
449.647 239.922 450.309 240.306 451.612 241.904 cv
452.915 243.503 454.326 245.32 454.959 244.85 cv
455.59 244.379 457.957 243.836 457.533 243.299 cv
457.109 242.762 454.458 239.632 453.768 238.873 cv
453.077 238.114 452.416 237.97 451.247 238.548 cv
450.079 239.127 449.141 239.615 449.647 239.922 cv
cp
f
452.616 236.309 mo
452.616 236.309 453.278 236.692 454.581 238.291 cv
455.884 239.889 457.295 241.707 457.928 241.236 cv
458.56 240.766 460.925 240.224 460.502 239.686 cv
460.079 239.148 457.427 236.019 456.736 235.26 cv
456.046 234.5 455.385 234.356 454.216 234.935 cv
453.048 235.514 452.11 236.001 452.616 236.309 cv
cp
f
454.43 231.351 mo
454.43 231.351 455.092 231.733 456.395 233.333 cv
457.698 234.931 459.109 236.749 459.742 236.278 cv
460.374 235.808 462.739 235.265 462.316 234.728 cv
461.893 234.19 459.241 231.06 458.55 230.301 cv
457.86 229.542 457.198 229.397 456.03 229.977 cv
454.862 230.555 453.924 231.043 454.43 231.351 cv
cp
f
455.97 226.145 mo
455.97 226.145 456.632 226.528 457.935 228.126 cv
459.238 229.725 460.649 231.542 461.282 231.072 cv
461.914 230.602 464.28 230.059 463.856 229.521 cv
463.433 228.984 460.781 225.854 460.09 225.095 cv
459.4 224.336 458.739 224.192 457.57 224.771 cv
456.402 225.349 455.464 225.837 455.97 226.145 cv
cp
f
457.113 221.08 mo
457.113 221.08 457.775 221.462 459.078 223.061 cv
460.381 224.66 461.793 226.478 462.425 226.007 cv
463.057 225.537 465.422 224.994 464.999 224.457 cv
464.576 223.919 461.924 220.789 461.233 220.03 cv
460.543 219.271 459.881 219.126 458.713 219.706 cv
457.545 220.284 456.607 220.772 457.113 221.08 cv
cp
f
459.044 214.977 mo
459.044 214.977 459.706 215.359 461.009 216.958 cv
462.313 218.557 463.724 220.375 464.356 219.904 cv
464.988 219.434 467.354 218.891 466.93 218.354 cv
466.507 217.816 463.855 214.686 463.165 213.927 cv
462.474 213.168 461.813 213.023 460.645 213.603 cv
459.476 214.181 458.538 214.669 459.044 214.977 cv
cp
f
1055.99 739.251 mo
1055.99 743.745 954.695 743.745 829.74 743.745 cv
704.785 743.745 603.489 742.763 603.489 739.251 cv
603.489 735.738 704.73 736.207 829.686 736.207 cv
954.641 736.207 1055.99 734.756 1055.99 739.251 cv
cp
.501961 .47451 .556863 rgb
f
997.453 543.395 mo
997.453 614.628 li
1004.57 614.628 li
1004.57 543.395 li
997.453 543.395 li
cp
.631373 .392157 .309804 rgb
f
661.517 543.395 mo
661.517 614.628 li
668.634 614.628 li
668.634 543.395 li
661.517 543.395 li
cp
f
618.202 551.059 mo
665.075 554.096 788.07 554.66 1033.51 550.277 cv
1040.92 550.146 1041.31 547.795 1041.71 546.444 cv
1043.74 539.657 1048.19 507.627 1044.62 468.456 cv
1044.52 467.323 1043.27 465.113 1041.03 464.947 cv
1009.36 462.608 809.81 462.303 620.518 465.177 cv
619.199 465.197 618.156 466.298 618.041 467.61 cv
617.302 476.028 614.931 507.1 616.022 548.917 cv
616.053 550.104 617.019 550.981 618.202 551.059 cv
cp
.988235 .980392 .980392 rgb
f
1029.35 714.841 mo
1029.35 714.841 1031.73 734.389 1031.55 737.397 cv
1031.38 740.406 1024.79 740.4 1024.32 738.782 cv
1023.85 737.164 1015.14 717.053 1016.77 715.886 cv
1018.4 714.72 1029.35 714.841 1029.35 714.841 cv
cp
.631373 .392157 .309804 rgb
f
1003.14 714.841 mo
1003.14 714.841 1005.52 734.389 1005.34 737.397 cv
1005.17 740.406 998.574 740.4 998.108 738.782 cv
997.642 737.164 988.925 717.053 990.558 715.886 cv
992.191 714.72 1003.14 714.841 1003.14 714.841 cv
cp
.498039 .254902 .2 rgb
f
631.282 714.841 mo
631.282 714.841 630.475 734.389 630.649 737.397 cv
630.824 740.406 637.415 740.4 637.882 738.782 cv
638.349 737.164 645.497 717.053 643.864 715.886 cv
642.231 714.72 631.282 714.841 631.282 714.841 cv
cp
.631373 .392157 .309804 rgb
f
670.027 714.841 mo
670.027 714.841 669.22 734.389 669.395 737.397 cv
669.57 740.406 676.161 740.4 676.628 738.782 cv
677.094 737.164 684.243 717.053 682.609 715.886 cv
680.977 714.72 670.027 714.841 670.027 714.841 cv
cp
.498039 .254902 .2 rgb
f
617.297 592.561 mo
1045.34 592.561 li
1045.34 592.561 1049.47 592.552 1049.52 614.579 cv
1049.59 641.461 1046 641.222 1046 641.222 cv
1046 641.222 1046.93 711.844 1045.34 718.164 cv
1043.75 724.485 619.709 722.889 617.678 719.974 cv
615.647 717.058 615.739 640.428 615.739 640.428 cv
615.739 640.428 612.282 635.06 613.177 614.628 cv
614.099 593.569 617.297 592.561 617.297 592.561 cv
cp
.988235 .980392 .980392 rgb
f
620.02 638.591 mo
1041.51 638.591 li
1041.51 638.591 1043.22 638.2 1043.32 640.009 cv
1043.42 641.817 1042.78 643.039 1041.51 643.137 cv
1040.24 643.234 815.536 643.71 785.238 643.88 cv
754.94 644.05 623.165 641.804 620.916 641.218 cv
618.667 640.631 618.134 638.591 620.02 638.591 cv
cp
.878431 .815686 .772549 rgb
f
1039.81 473.054 mo
1039.81 473.054 1038.4 524.772 1034.09 541.054 cv
1034.09 541.054 622.133 546.335 621.79 546.341 cv
619.972 546.373 619.458 546.724 619.458 547.118 cv
619.458 547.771 621.101 547.795 621.101 547.795 cv
621.101 547.795 1031.62 546.802 1036.93 546.077 cv
1039.25 545.761 1041.35 522.725 1041.21 524.407 cv
1042.21 512.421 1043.16 491.032 1041.62 473.654 cv
1041.12 468.006 1039.71 468.383 1039.81 473.054 cv
cp
f
861.058 500.674 mo
861.058 500.674 867.644 581.271 859.514 587.014 cv
851.384 592.757 803.779 577.376 797.789 590.641 cv
791.798 603.906 799.5 623.002 797.789 627.795 cv
796.077 632.587 792.891 621.354 786.045 622.957 cv
779.198 624.56 781.152 620.06 780.297 608.592 cv
779.44 597.124 782.435 585.415 788.311 583.811 cv
794.954 581.997 848.816 582.406 852.239 579.665 cv
855.663 576.925 855.937 514.875 855.937 514.875 cv
861.058 500.674 li
cp
.917647 .686275 .294118 rgb
f
855.898 527.041 mo
858.567 524.896 861.2 522.704 863.803 520.475 cv
862.857 510.09 861.059 500.674 861.059 500.674 cv
855.937 514.875 li
855.937 514.875 856.173 520.916 855.898 527.041 cv
cp
.827451 .588235 .223529 rgb
f
924.206 424.488 mo
921.277 420.644 924.572 420.278 926.769 416.187 cv
928.966 412.095 923.474 408.562 920.574 404.968 cv
917.674 401.373 922.805 402.248 923.902 394.52 cv
925.001 386.792 916.592 380.629 916.592 380.629 cv
916.592 380.629 919.755 375.462 914.629 370.154 cv
909.504 364.845 903.807 366.738 903.807 366.738 cv
903.807 366.738 895.235 358.723 889.291 358.54 cv
883.346 358.357 873.651 367.45 873.651 367.45 cv
866.033 367.158 861.298 370.15 858.469 373.825 cv
857.57 374.695 856.738 375.64 855.994 376.661 cv
854.19 379.134 852.954 382.028 852.469 385.053 cv
851.898 388.614 852.245 392.548 850.677 395.881 cv
849.19 399.037 845.971 400.876 844.804 404.261 cv
844.258 405.845 844.139 407.575 844.412 409.224 cv
844.728 411.132 846.264 413.418 845.055 415.242 cv
844.121 416.648 843.041 417.642 842.556 419.334 cv
842.131 420.814 842.114 422.432 842.527 423.916 cv
842.974 425.52 844.487 426.972 844.243 428.697 cv
843.99 430.48 842.59 431.973 841.681 433.459 cv
837.863 439.704 838.247 448.131 842.518 454.047 cv
843.264 455.081 845 454.084 844.244 453.037 cv
840.451 447.782 839.936 440.44 843.214 434.793 cv
844.646 432.327 847.075 429.805 846.02 426.713 cv
845.5 425.191 844.431 424.028 844.256 422.37 cv
844.069 420.605 844.623 418.869 845.757 417.516 cv
846.778 416.298 847.609 415.212 847.528 413.534 cv
847.438 411.67 846.415 410.005 846.285 408.146 cv
846.174 406.553 846.514 404.938 847.3 403.544 cv
848.182 401.979 849.569 400.801 850.71 399.436 cv
854.427 394.985 853.529 389.226 854.768 383.963 cv
854.668 389.145 857.014 394.661 853.914 397.751 cv
850.436 401.218 849.073 402.946 847.951 407.23 cv
846.556 412.559 852.449 414.786 849.073 417.166 cv
845.697 419.546 846.385 424.816 847.951 427.195 cv
849.518 429.575 846.061 433.052 843.315 440.614 cv
840.57 448.178 849.073 455.621 849.073 455.621 cv
849.073 455.621 862.883 462.93 884.576 470.068 cv
906.268 477.207 909.379 467.14 922.925 461.282 cv
936.471 455.424 924.368 451.887 931.711 437.606 cv
934.922 431.363 927.135 428.332 924.206 424.488 cv
.290196 .2 .2 rgb
f
849.073 451.066 mo
849.073 451.066 854.776 436.396 859.01 434.563 cv
863.243 432.729 881.507 429.669 892.546 429.365 cv
903.585 429.062 910.193 431.896 910.193 431.896 cv
910.193 431.896 915.92 442.013 916.587 448.123 cv
917.254 454.233 849.073 451.066 849.073 451.066 cv
cp
.917647 .686275 .294118 rgb
f
862.204 436.663 mo
862.204 436.663 871.3 477.547 881.9 474.939 cv
894.371 471.872 906.711 436.801 906.947 432.901 cv
906.969 432.552 897.691 430.273 897.384 428.756 cv
896.901 426.414 896.688 423.61 896.599 422.064 cv
896.559 421.341 896.548 420.894 896.548 420.894 cv
873.65 421.896 li
873.65 421.896 874.386 428.882 872.975 431.213 cv
871.564 433.543 862.204 436.663 862.204 436.663 cv
cp
.882353 .517647 .447059 rgb
f
873.817 426.979 mo
873.955 427.376 874.088 427.774 874.231 428.17 cv
875.124 430.634 875.954 432.904 877.849 434.804 cv
880.148 437.109 883.783 438.205 886.95 437.277 cv
889.602 436.5 891.667 434.375 893.19 432.156 cv
894.709 429.943 895.866 427.503 896.833 425.001 cv
896.715 423.858 896.642 422.813 896.599 422.064 cv
896.559 421.341 896.548 420.894 896.548 420.894 cv
873.65 421.896 li
873.65 421.896 873.916 424.446 873.817 426.979 cv
cp
.101961 .101961 .101961 rgb
f
905.084 393.878 mo
904.985 393.645 904.907 393.407 904.828 393.168 cv
904.249 392.874 903.688 392.545 903.156 392.234 cv
901.369 391.188 899.585 390.249 898.239 388.623 cv
897.199 387.367 896.457 385.942 896.04 384.39 cv
895.356 383.823 894.693 383.233 894.078 382.599 cv
892.995 381.482 889.629 377.198 888.429 377.225 cv
887.452 377.247 886.709 378.056 885.907 378.614 cv
884.143 379.843 881.83 379.929 879.693 379.695 cv
879.005 379.62 878.306 379.528 877.618 379.55 cv
877.502 380.515 877.271 381.466 877.043 382.267 cv
876.471 384.285 875.498 386.188 874.334 387.925 cv
873.674 388.91 873.651 388.601 872.249 389.794 cv
871.38 390.533 869.478 391.522 868.885 392.497 cv
868.056 393.863 868.879 396.387 867.718 397.427 cv
867.698 397.935 867.68 398.426 867.662 398.882 cv
867.492 403.237 867.984 422.571 877.17 426.668 cv
887.42 431.239 897.044 427.225 901.453 422.135 cv
905.208 417.799 906.333 405.935 906.805 397.819 cv
905.866 397.379 905.463 394.771 905.084 393.878 cv
.882353 .517647 .447059 rgb
f
906.434 397.903 mo
906.434 397.903 909.92 396.792 911.209 400.581 cv
912.498 404.369 908.882 412.328 905.149 412.182 cv
901.509 412.041 906.434 397.903 906.434 397.903 cv
f
883.079 409.884 mo
883.168 409.369 883.686 408.997 884.204 409.092 cv
884.714 409.186 885.225 409.279 885.734 409.372 cv
886.251 409.467 886.617 409.976 886.526 410.497 cv
886.438 411.013 885.921 411.384 885.402 411.289 cv
884.892 411.195 884.382 411.103 883.871 411.009 cv
883.354 410.914 882.989 410.405 883.079 409.884 cv
cp
.8 .458824 .372549 rgb
f
905.965 407.23 mo
905.965 407.23 906.158 402.277 906.777 402.277 cv
906.778 402.277 906.78 402.277 906.781 402.277 cv
907.403 402.302 907.666 404.346 907.642 404.968 cv
907.617 405.59 905.965 407.23 905.965 407.23 cv
.839216 .486274 .407843 rgb
f
851.671 557.231 mo
851.671 557.231 860.879 532.882 862.581 529.655 cv
864.283 526.43 852.028 472.93 849.645 467.169 cv
847.262 461.408 848.091 442.974 848.091 442.974 cv
848.091 442.974 859.833 438.046 862.204 436.663 cv
862.204 436.663 875.857 469.067 883.007 468.557 cv
890.155 468.046 906.666 432.813 906.666 432.813 cv
906.666 432.813 918.842 436.646 920.709 437.596 cv
922.576 438.544 928.248 486.77 929.542 504.131 cv
930.836 521.493 931.142 564.387 929.542 567.961 cv
927.942 571.535 851.671 557.231 851.671 557.231 cv
cp
.576471 .72549 .819608 rgb
f
788.354 723.84 mo
784.315 725.617 783.523 728.3 782.531 733.688 cv
782.137 735.827 782.907 737.862 785.628 738.241 cv
804.684 740.891 851.215 739.493 851.727 738.806 cv
853.295 736.698 849.573 716.06 847.977 706.911 cv
841.926 709.35 821.739 717.377 821.595 715.972 cv
821.425 714.318 827.042 709.285 825.51 707.753 cv
824.916 707.159 823.194 706.951 821.282 706.914 cv
819.484 709.233 792.393 722.063 788.354 723.84 cv
cp
.909804 .266667 .313726 rgb
f
851.727 738.806 mo
852.568 737.674 851.884 731.193 850.823 724.021 cv
849.322 724.413 847.529 724.824 845.6 725.148 cv
840.34 726.032 837.595 730.391 813.765 730.322 cv
797.689 730.276 788.206 729.327 783.731 728.714 cv
783.241 730.061 782.899 731.688 782.531 733.688 cv
782.137 735.827 782.907 737.862 785.628 738.241 cv
804.684 740.891 851.215 739.493 851.727 738.806 cv
cp
1 1 1 rgb
f
831.31 724.33 mo
827.169 728.192 823.061 732.09 819.009 736.044 cv
817.75 737.272 816.512 738.519 815.277 739.77 cv
833.439 739.929 851.409 739.231 851.727 738.806 cv
853.223 736.796 849.907 717.937 848.213 708.259 cv
842.699 713.739 836.993 719.029 831.31 724.33 cv
cp
.733333 .137255 .156863 rgb
f
845.6 725.148 mo
841.354 725.861 838.741 728.837 825.37 729.923 cv
823.236 731.95 821.212 733.81 819.105 735.865 cv
817.848 737.093 816.512 738.519 815.277 739.77 cv
833.439 739.929 851.409 739.231 851.727 738.806 cv
852.568 737.674 851.884 731.193 850.823 724.021 cv
849.322 724.413 847.529 724.824 845.6 725.148 cv
cp
.909804 .945098 .956863 rgb
f
830.869 731.394 mo
830.547 732.137 828.931 739.487 831.839 740.296 cv
834.747 741.104 898.252 741.265 897.606 737.663 cv
896.961 734.07 891.816 707.852 891.099 704.947 cv
887.188 707.548 876.817 714.354 876.403 713.663 cv
875.893 712.813 877.255 709.237 873.34 708.046 cv
870.869 707.294 865.864 707.491 862.507 707.739 cv
859.136 710.989 850.298 718.318 843.312 722.227 cv
831.516 728.826 831.466 730.018 830.869 731.394 cv
cp
.909804 .266667 .313726 rgb
f
873.34 708.046 mo
877.255 709.237 875.893 712.813 876.403 713.663 cv
876.817 714.354 887.188 707.548 891.099 704.947 cv
891.092 704.92 li
890.395 702.129 889.437 671.598 889.437 671.598 cv
858.663 669.604 li
858.663 669.604 864.157 705.23 863.897 706.186 cv
863.847 706.375 863.342 706.934 862.507 707.739 cv
865.864 707.491 870.869 707.294 873.34 708.046 cv
cp
.882353 .517647 .447059 rgb
f
831.839 740.296 mo
834.747 741.104 898.252 741.265 897.606 737.663 cv
897.327 736.11 896.208 730.33 894.969 724.033 cv
889.68 725.61 882.066 728.239 880.488 729.618 cv
878.786 731.104 876.573 731.535 862.956 731.563 cv
849.34 731.592 830.869 731.394 830.869 731.394 cv
830.547 732.137 828.931 739.487 831.839 740.296 cv
cp
1 1 1 rgb
f
821.595 715.972 mo
821.739 717.377 841.926 709.35 847.977 706.911 cv
847.679 705.203 847.454 703.895 847.353 703.183 cv
846.706 698.658 843.917 670.102 843.917 670.102 cv
813.465 672.323 li
813.465 672.323 823.063 704.6 821.285 706.911 cv
821.282 706.914 li
823.194 706.951 824.916 707.159 825.51 707.753 cv
827.042 709.285 821.425 714.318 821.595 715.972 cv
cp
.882353 .517647 .447059 rgb
f
837.521 541.519 mo
836.282 541.519 817.268 533.251 800.734 538.211 cv
784.2 543.172 786.455 572.653 790.701 599.453 cv
794.947 626.253 801.975 676.327 802.801 680.225 cv
803.628 684.121 828.588 678.507 835.812 677.026 cv
843.035 675.546 858.013 676.268 855.621 661.388 cv
853.229 646.507 837.521 541.519 837.521 541.519 cv
cp
.223529 .258824 .266667 rgb
f
851.476 673.082 mo
832.569 539.993 li
831.768 539.748 830.884 539.49 829.932 539.229 cv
829.89 539.238 816.998 542.156 820.188 568.349 cv
822.73 589.232 828.938 652.862 831.366 677.954 cv
833.165 677.58 834.699 677.254 835.812 677.026 cv
840.056 676.156 846.974 676.043 851.476 673.082 cv
cp
.137255 .164706 .168627 rgb
f
878.056 592.555 mo
879.748 602.694 882.686 614.214 884.964 631.953 cv
888.965 663.105 889.517 672.729 889.517 672.729 cv
889.517 672.729 868.365 679.562 855.621 682.209 cv
842.876 684.855 844.861 685.128 842.36 675.163 cv
839.86 665.198 821.476 562.017 825.445 549.617 cv
837.36 512.407 916.974 554.913 928.459 557.656 cv
939.943 560.399 930.19 592.561 930.19 592.561 cv
878.056 592.555 li
cp
.223529 .258824 .266667 rgb
f
926.472 580.067 mo
915.909 580.383 894.925 579.361 884.421 578.209 cv
883.782 578.14 883.787 579.14 884.421 579.209 cv
894.925 580.361 915.909 581.383 926.472 581.067 cv
927.113 581.048 927.116 580.048 926.472 580.067 cv
cp
.137255 .164706 .168627 rgb
f
872.154 621.107 mo
871.844 617.323 871.564 613.535 871.316 609.746 cv
871.099 606.423 871.118 602.989 870.384 599.727 cv
870.054 598.26 869.526 596.811 868.692 595.552 cv
867.871 594.313 866.668 593.261 866.119 591.855 cv
865.534 590.354 866.553 589.508 867.814 588.958 cv
868.935 588.47 870.106 588.001 870.622 586.799 cv
871.21 585.43 870.643 583.858 869.878 582.683 cv
868.97 581.285 867.554 580.27 866.785 578.773 cv
866.113 577.465 866.341 576.045 867.619 575.235 cv
868.624 574.598 870.027 574.443 870.96 575.292 cv
871.436 575.725 872.145 575.02 871.667 574.585 cv
869.976 573.046 867.19 573.677 865.945 575.482 cv
864.125 578.121 866.969 580.657 868.524 582.523 cv
869.401 583.575 870.455 585.435 869.513 586.756 cv
868.76 587.813 867.22 587.966 866.203 588.678 cv
865.12 589.436 864.684 590.691 865.097 591.957 cv
865.572 593.414 866.721 594.515 867.6 595.727 cv
869.562 598.433 869.833 601.91 870.03 605.139 cv
870.27 609.064 870.524 612.988 870.822 616.91 cv
871.417 624.73 872.146 632.54 873.011 640.335 cv
873.99 649.158 875.143 657.962 876.463 666.741 cv
876.559 667.376 877.522 667.106 877.428 666.476 cv
875.162 651.417 873.402 636.284 872.154 621.107 cv
cp
f
882.067 597.996 mo
880.748 591.882 879.199 585.82 877.426 579.823 cv
876.88 577.976 873.983 578.762 874.533 580.62 cv
876.307 586.618 877.854 592.68 879.175 598.793 cv
879.582 600.68 882.475 599.881 882.067 597.996 cv
cp
.988235 .980392 .980392 rgb
f
876.178 479.564 mo
876.178 479.564 884.361 442.558 883.777 433.79 cv
883.192 425.021 874.717 414.792 873.109 410.992 cv
871.502 407.192 870.549 400.904 868.957 399.81 cv
867.365 398.716 864.049 392.871 861.856 392.286 cv
859.664 391.702 860.721 395.572 860.224 395.854 cv
859.728 396.135 860.108 399.301 859.375 402.37 cv
858.642 405.438 858.934 412.12 860.979 418.278 cv
863.025 424.437 869.31 433.616 869.602 435.896 cv
869.895 438.174 860.108 464.625 859.375 466.232 cv
858.642 467.84 876.178 479.564 876.178 479.564 cv
cp
.882353 .517647 .447059 rgb
f
878.778 479.564 mo
877.059 475.206 865.288 466.832 860.493 464.429 cv
860.152 463.115 859.789 461.797 859.375 460.468 cv
854.506 444.843 859.01 434.563 859.01 434.563 cv
859.01 434.563 855.741 435.563 852.796 437.606 cv
849.851 439.65 845.681 444.714 845.681 444.714 cv
845.682 444.714 li
843.098 446.597 839.135 449.543 837.392 451.144 cv
834.699 453.615 826.877 467.688 827.083 470.778 cv
827.289 473.867 827.907 478.192 825.229 481.899 cv
822.552 485.606 825.848 486.431 828.525 489.726 cv
831.202 493.021 822.964 500.436 824.406 511.558 cv
825.848 522.679 834.703 534.213 845.619 527.828 cv
856.535 521.443 869.305 506.614 870.952 500.229 cv
872.6 493.845 880.838 484.783 878.778 479.564 cv
cp
.917647 .686275 .294118 rgb
f
853.947 474.643 mo
855.018 472.688 857.873 467.294 858.887 465.354 cv
859.482 464.215 857.757 463.202 857.16 464.345 cv
856.784 465.064 855.962 466.555 855.123 468.073 cv
851.97 458.865 848.898 448.497 851.067 439.003 cv
850.234 439.751 849.387 440.6 848.617 441.411 cv
847.405 451.064 850.673 461.351 853.824 470.43 cv
853.43 471.149 853.096 471.765 852.893 472.152 cv
852.2 473.478 851.588 474.935 850.698 476.144 cv
849.286 478.063 846.712 478.512 845.06 480.166 cv
844.207 481.02 843.864 482.033 843.463 483.141 cv
842.925 484.627 841.634 484.83 840.349 485.471 cv
838.237 486.523 836.229 488.251 835.876 490.703 cv
835.694 491.962 837.621 492.506 837.805 491.235 cv
838.187 488.586 840.69 487.521 842.858 486.538 cv
843.971 486.033 844.746 485.305 845.209 484.167 cv
845.733 482.88 845.975 481.835 847.177 481.006 cv
849.019 479.735 851.01 479.042 852.373 477.199 cv
858.168 480.161 863.21 484.486 866.924 489.842 cv
867.385 490.507 868.239 490.812 868.977 490.38 cv
869.635 489.995 869.979 488.997 869.515 488.328 cv
865.524 482.574 860.181 477.841 853.947 474.643 cv
cp
.827451 .588235 .223529 rgb
f
871.632 417.034 mo
870.754 413.511 869.818 409.992 868.403 406.64 cv
868.07 405.851 867.716 405.07 867.327 404.307 cv
866.907 403.483 866.374 402.688 866.066 401.813 cv
865.989 401.594 865.648 400.549 865.939 400.382 cv
865.992 400.352 866.596 400.59 866.695 400.634 cv
867.391 400.938 867.973 401.526 868.251 402.232 cv
868.719 403.416 870.653 402.9 870.18 401.701 cv
869.482 399.934 867.734 398.311 865.703 398.418 cv
863.04 398.56 863.954 402.158 864.69 403.614 cv
865.822 405.854 866.9 408.033 867.7 410.422 cv
868.486 412.769 869.982 414.668 870.581 417.067 cv
870.893 418.315 871.944 418.285 871.632 417.034 cv
cp
.8 .458824 .372549 rgb
f
866.676 419.661 mo
866.146 417.479 865.616 415.295 865.085 413.112 cv
864.868 412.22 864.666 411.319 864.369 410.449 cv
864.032 409.459 863.54 408.529 863.212 407.536 cv
862.007 403.877 862.786 399.928 861.197 396.34 cv
860.678 395.166 858.954 396.182 859.471 397.35 cv
861.02 400.847 860.099 404.881 861.419 408.453 cv
862.093 410.274 862.75 411.968 863.21 413.862 cv
863.723 415.973 864.877 416.906 865.39 419.017 cv
865.693 420.267 866.979 420.914 866.676 419.661 cv
cp
f
885.189 436.341 mo
885.081 432.246 884.321 428.135 882.538 424.426 cv
881.544 422.359 880.141 420.566 878.868 418.673 cv
877.713 416.952 876.761 415.119 875.922 413.226 cv
874.01 408.909 869.553 399.928 869.269 399.911 cv
867.805 398.205 866.898 396.101 865.635 394.254 cv
864.925 393.218 864.112 392.232 863.095 391.485 cv
861.932 390.63 860.971 390.493 860.446 392.024 cv
860.193 392.764 860.116 393.615 860.094 394.392 cv
860.078 394.952 860.026 395.875 859.496 396.248 cv
859.055 396.558 859.45 399.681 859.738 400.174 cv
859.994 400.611 859.948 398.063 860.393 397.751 cv
861.065 397.278 861.128 396.82 861.276 395.994 cv
861.425 395.168 861.306 394.325 861.459 393.497 cv
861.492 393.321 861.569 393.114 861.587 392.931 cv
861.694 392.962 li
861.927 393.1 li
862.476 393.465 862.943 394.01 863.357 394.517 cv
865.162 396.727 866.14 399.481 868.087 401.6 cv
868.247 401.773 868.711 402.914 868.89 402.946 cv
870.881 406.205 871.893 408.725 873.347 412.244 cv
874.105 414.08 874.904 415.903 875.878 417.638 cv
876.918 419.487 878.227 421.15 879.384 422.924 cv
884.365 430.561 883.463 439.979 882.142 448.551 cv
881.356 453.649 880.435 458.728 879.205 463.74 cv
878.898 464.989 880.401 465.638 880.709 464.387 cv
881.843 459.767 882.715 455.09 883.459 450.393 cv
884.188 445.788 885.313 441.017 885.189 436.341 cv
cp
f
869.527 433.71 mo
869.204 433.278 868.886 432.499 868.382 432.794 cv
867.956 433.043 868.108 433.546 868.434 433.98 cv
869.647 435.603 869.561 437.224 868.986 439.039 cv
868.307 441.187 866.363 445.536 865.588 447.651 cv
865.145 448.861 866.615 449.177 867.056 447.977 cv
867.905 445.658 869.847 441.872 870.492 439.486 cv
871.06 437.388 870.888 435.529 869.527 433.71 cv
cp
f
878.212 391.092 mo
877.947 390.682 877.289 390.395 876.844 390.733 cv
875.945 391.416 875.007 392.044 874.031 392.611 cv
873.551 392.889 873.063 393.153 872.565 393.401 cv
872.31 393.53 872.052 393.654 871.791 393.773 cv
871.661 393.833 871.53 393.893 871.399 393.95 cv
871.362 393.967 871.041 394.105 871.146 394.062 cv
870.665 394.264 870.266 394.732 870.446 395.292 cv
870.596 395.753 871.16 396.208 871.677 395.99 cv
873.877 395.065 875.95 393.905 877.854 392.46 cv
878.269 392.145 878.529 391.583 878.212 391.092 cv
cp
.290196 .2 .2 rgb
f
901.302 397.087 mo
899.108 394.458 897.218 391.586 895.638 388.549 cv
895.044 387.407 893.317 388.417 893.911 389.559 cv
895.571 392.75 897.584 395.739 899.888 398.501 cv
900.233 398.917 900.943 398.859 901.302 398.501 cv
901.712 398.091 901.648 397.503 901.302 397.087 cv
cp
f
895.408 399.371 mo
895.244 399.131 895.098 398.982 894.863 398.814 cv
894.624 398.695 li
894.478 398.633 894.397 398.612 894.24 398.591 cv
894.086 398.57 894.006 398.571 893.853 398.592 cv
893.648 398.619 893.565 398.646 893.361 398.743 cv
893.167 398.836 893.019 398.986 892.89 399.153 cv
892.744 399.366 li
892.689 399.481 892.63 399.605 892.6 399.731 cv
892.533 400.01 892.54 400.233 892.587 400.511 cv
892.618 400.698 892.698 400.886 892.813 401.037 cv
892.854 401.086 li
892.875 401.258 li
892.894 401.323 li
892.929 401.424 892.97 401.532 893.024 401.624 cv
893.201 401.92 893.48 402.136 893.81 402.236 cv
894.059 402.313 894.363 402.312 894.611 402.233 cv
894.71 402.202 894.808 402.157 894.901 402.113 cv
894.978 402.072 li
895.089 402.001 895.206 401.917 895.293 401.815 cv
895.477 401.601 895.624 401.36 895.687 401.081 cv
895.731 400.883 895.759 400.665 895.744 400.459 cv
895.717 400.08 895.626 399.69 895.408 399.371 cv
cp
.101961 .101961 .101961 rgb
f
877.303 399.013 mo
877.117 398.641 876.733 398.359 876.336 398.252 cv
875.849 398.12 875.331 398.234 874.96 398.579 cv
874.741 398.781 874.63 399.043 874.571 399.322 cv
874.502 399.458 li
874.404 399.784 874.315 400.135 874.343 400.478 cv
874.366 400.775 874.419 400.98 874.551 401.248 cv
874.632 401.412 874.755 401.568 874.895 401.687 cv
875.089 401.851 875.296 401.993 875.55 402.052 cv
875.807 402.11 876.084 402.12 876.336 402.032 cv
876.736 401.893 877.077 401.609 877.254 401.219 cv
877.325 401.061 877.395 400.9 877.435 400.73 cv
877.478 400.542 877.501 400.345 877.521 400.152 cv
877.562 399.758 877.48 399.366 877.303 399.013 cv
cp
f
889.658 417.577 mo
886.989 415.75 884.425 415.806 880.963 417.261 cv
880.465 417.47 879.954 418.189 880.207 418.621 cv
880.503 419.127 881.081 419.203 881.575 418.979 cv
883.852 417.949 886.583 418.276 888.646 419.689 cv
889.093 419.995 889.892 419.55 890.15 419.107 cv
890.439 418.612 890.104 417.883 889.658 417.577 cv
cp
.72549 .380392 .317647 rgb
f
880.828 592.555 mo
880.828 592.555 894.231 590.888 902.932 589.32 cv
911.632 587.753 923.081 589.045 923.439 589.32 cv
923.797 589.596 919.602 597.891 919.602 597.891 cv
880.828 592.555 li
cp
.988235 .980392 .980392 rgb
f
945.573 585.245 mo
941.354 543.494 936.858 448.123 936.858 448.123 cv
936.858 448.123 928.482 442.028 923.361 439 cv
920.633 436.102 910.193 431.896 910.193 431.896 cv
910.193 431.896 914.253 443.231 912.92 454.553 cv
911.586 465.875 911.278 481.928 911.278 481.928 cv
911.279 481.929 li
910.67 487.263 910.269 492.738 910.2 498.148 cv
909.834 527.457 923.439 540.971 912.957 590.222 cv
910.171 603.313 917.853 627.549 917.853 627.549 cv
917.853 627.549 949.439 628.102 953.554 627.549 cv
957.668 626.996 949.792 626.996 945.573 585.245 cv
cp
.917647 .686275 .294118 rgb
f
924.124 553.558 mo
924.079 553.418 li
924 553.213 923.923 553.001 923.79 552.824 cv
923.656 552.646 923.532 552.465 923.358 552.326 cv
923.186 552.188 923.019 552.042 922.816 551.952 cv
922.661 551.884 922.504 551.806 922.34 551.76 cv
922.171 551.713 921.991 551.7 921.819 551.682 cv
921.673 551.674 li
921.499 551.682 921.32 551.708 921.15 551.743 cv
921.041 551.765 920.941 551.815 920.84 551.858 cv
920.66 551.934 li
920.356 552.168 li
920.239 552.32 li
920.146 552.414 920.082 552.523 920.047 552.651 cv
920.002 552.757 919.972 552.82 919.95 552.921 cv
919.893 553.192 919.854 553.474 919.842 553.751 cv
919.85 553.938 li
919.691 554.18 919.59 554.458 919.603 554.751 cv
919.62 555.147 919.754 555.527 920.042 555.812 cv
920.188 555.956 920.354 556.092 920.537 556.187 cv
920.653 556.248 920.778 556.295 920.902 556.343 cv
920.995 556.395 921.095 556.438 921.203 556.464 cv
921.402 556.526 921.603 556.535 921.802 556.49 cv
921.97 556.461 li
922.066 556.448 922.164 556.439 922.26 556.424 cv
922.388 556.398 li
922.512 556.356 li
922.666 556.298 922.823 556.236 922.971 556.16 cv
923.082 556.093 li
923.216 556.001 923.348 555.899 923.472 555.792 cv
923.562 555.702 li
923.668 555.579 923.771 555.448 923.861 555.313 cv
923.924 555.202 li
923.993 555.054 924.067 554.899 924.113 554.741 cv
924.161 554.576 924.173 554.396 924.19 554.227 cv
924.195 554.079 li
924.184 553.906 924.162 553.727 924.124 553.558 cv
cp
.827451 .588235 .223529 rgb
f
919.307 592.53 mo
919.226 592.08 918.94 591.58 918.603 591.272 cv
918.322 591.018 918.07 590.873 917.717 590.742 cv
917.547 590.697 li
917.367 590.668 917.182 590.629 916.998 590.645 cv
916.632 590.674 916.333 590.739 916.01 590.929 cv
915.681 591.12 915.468 591.36 915.254 591.668 cv
914.992 592.044 914.878 592.536 914.862 592.988 cv
914.845 593.532 915.029 594.024 915.31 594.464 cv
915.349 594.624 915.4 594.783 915.477 594.938 cv
915.627 595.242 915.893 595.479 916.17 595.663 cv
916.466 595.859 916.787 595.923 917.133 595.951 cv
917.306 595.965 917.484 595.936 917.65 595.896 cv
917.719 595.874 li
917.849 595.826 917.999 595.771 918.119 595.699 cv
918.68 595.364 918.965 594.684 919.192 594.1 cv
919.389 593.596 919.402 593.056 919.307 592.53 cv
cp
f
923.275 438.915 mo
922.718 438.348 921.876 437.732 920.882 437.11 cv
921.944 441.462 922.054 446.045 921.788 450.519 cv
921.389 457.222 920.253 463.864 918.882 470.43 cv
916.201 483.26 912.517 495.894 910.687 508.891 cv
910.971 511.715 911.36 514.433 911.808 517.109 cv
913.273 495.125 922.042 473.865 923.699 451.827 cv
924.022 447.528 924.015 443.148 923.275 438.915 cv
cp
f
920.574 494.77 mo
920.574 494.77 923.941 509.456 923.739 513.087 cv
923.538 516.718 924.345 518.937 927.169 521.761 cv
929.992 524.585 927.37 527.813 927.169 532.653 cv
926.967 537.494 931.203 535.478 933.825 545.361 cv
936.447 555.245 939.181 563.97 939.729 565.122 cv
941.526 568.904 964.889 563.112 964.689 559.077 cv
964.489 555.043 963.479 547.209 961.781 540.521 cv
960.928 537.158 961.46 534.469 961.46 534.469 cv
961.46 534.469 962.468 528.216 963.073 525.594 cv
963.679 522.971 958.837 520.349 957.022 518.13 cv
955.207 515.911 958.03 511.877 959.241 507.163 cv
960.451 502.449 956.014 503.002 955.61 499.169 cv
955.207 495.336 954.803 488.479 952.383 478.393 cv
949.962 468.307 942.506 451.148 936.858 448.123 cv
936.858 448.123 921.39 480.492 920.574 494.77 cv
.917647 .686275 .294118 rgb
f
959.954 543.226 mo
952.383 542.277 944.512 544.371 938.409 548.949 cv
937.756 549.439 937.438 550.24 937.871 551.002 cv
938.236 551.645 939.276 552.025 939.923 551.54 cv
945.673 547.227 952.822 545.332 959.954 546.226 cv
960.765 546.327 961.446 545.463 961.454 544.726 cv
961.464 543.832 960.755 543.326 959.954 543.226 cv
cp
.827451 .588235 .223529 rgb
f
941 566.17 mo
941 566.17 939.886 562.52 944.915 560.555 cv
946.957 559.757 957.684 557.362 959.263 557.362 cv
959.263 557.362 959.407 585.867 959.598 587.254 cv
959.789 588.642 968.014 598.249 969.678 602.134 cv
971.343 606.019 969.115 610.048 966.808 615.479 cv
965.963 617.467 962.836 616.413 962.031 616.968 cv
961.228 617.522 959.882 618.772 957.976 618.772 cv
956.068 618.772 953.984 618.842 953.984 618.842 cv
953.984 618.842 958.786 611.137 958.915 610.305 cv
959.045 609.473 959.49 608.432 957.825 607.594 cv
956.16 606.755 954.67 609.71 954.67 609.71 cv
954.67 609.71 955.306 612.79 953.086 614.579 cv
950.866 616.368 945.343 604.419 944.141 601.367 cv
942.938 598.314 945.04 587.144 945.04 587.144 cv
941 566.17 li
cp
.882353 .517647 .447059 rgb
f
965.735 608.212 mo
965.192 608.063 964.675 608.395 964.506 608.91 cv
963.764 611.168 962.97 613.41 962.127 615.633 cv
961.936 616.138 962.339 616.729 962.825 616.862 cv
963.388 617.018 963.863 616.671 964.056 616.164 cv
964.898 613.941 965.691 611.7 966.435 609.441 cv
966.603 608.929 966.238 608.35 965.735 608.212 cv
cp
.8 .458824 .372549 rgb
f
956.252 610.683 mo
955.958 608.521 954.999 606.601 954.044 604.675 cv
954.478 603.773 954.929 602.615 954.836 601.833 cv
954.666 600.387 952.368 599.392 950.922 600.102 cv
950.765 600.179 950.674 600.295 950.621 600.431 cv
950.412 600.646 950.299 600.946 950.423 601.327 cv
951.52 604.701 953.837 607.645 954.323 611.214 cv
954.396 611.75 955.083 612.042 955.554 611.913 cv
956.132 611.754 956.325 611.22 956.252 610.683 cv
cp
f
959.263 557.362 mo
959.263 557.362 963.046 556.772 963.453 558.098 cv
963.861 559.422 959.263 561.358 959.263 561.358 cv
959.263 557.362 li
cp
0 0 0 rgb
f
938.349 561.803 mo
936.799 554.757 935.236 547.662 932.53 540.951 cv
931.937 539.48 931.298 538.026 930.593 536.605 cv
929.79 534.984 928.762 533.389 928.374 531.6 cv
927.749 528.716 930.423 525.672 928.963 522.904 cv
928.278 521.606 926.697 521.267 926.036 520.003 cv
925.165 518.343 925.146 516.021 924.848 514.2 cv
924.225 510.403 923.52 506.608 923.073 502.785 cv
922.615 498.873 922.535 494.957 923.124 491.055 cv
923.691 487.296 924.722 483.623 925.847 479.999 cv
928.376 471.849 931.172 463.775 934.112 455.765 cv
934.557 454.555 932.624 454.032 932.184 455.232 cv
929.488 462.577 926.942 469.976 924.562 477.428 cv
922.226 484.743 920.262 492.126 920.798 499.875 cv
921.063 503.707 921.732 507.5 922.354 511.286 cv
923.242 516.701 li
923.518 518.377 923.649 520.245 924.723 521.64 cv
925.569 522.74 927.31 523.113 927.372 524.674 cv
927.437 526.284 926.511 527.878 926.302 529.466 cv
925.854 532.869 928.085 535.897 929.451 538.833 cv
932.911 546.27 934.667 554.365 936.42 562.334 cv
936.696 563.591 938.625 563.059 938.349 561.803 cv
cp
.827451 .588235 .223529 rgb
f
983.965 732.451 mo
898.993 731.394 li
898.993 731.394 888.285 704.104 887.603 679.704 cv
886.92 655.303 896.853 632.387 898.993 629.663 cv
901.134 626.939 944.416 630.854 959.924 629.663 cv
975.432 628.472 982.674 657.828 983.965 676.644 cv
985.256 695.459 983.965 732.451 983.965 732.451 cv
cp
.360784 .403922 .501961 rgb
f
906.803 726.796 mo
906.803 726.796 899.523 723.916 898.485 719.048 cv
897.447 714.181 905.035 708.398 905.571 701.548 cv
906.106 694.697 909.787 689.354 911.086 686.83 cv
912.385 684.306 908.704 677.958 911.735 669.226 cv
914.766 660.493 915.314 659.179 915.906 657.455 cv
916.498 655.73 914.233 648.197 916.989 646.877 cv
919.745 645.556 927.687 651.681 929.209 651.935 cv
930.732 652.188 933.802 651.078 940.604 651.083 cv
947.405 651.088 949.131 651.712 950.934 650.681 cv
952.736 649.649 957.248 646.718 958.999 647.959 cv
960.75 649.199 960.269 652.629 960.269 654.693 cv
960.269 656.759 960.521 659.693 963.268 664.01 cv
966.014 668.325 965.98 670.807 965.98 670.807 cv
965.98 670.807 979.226 678.903 985.488 687 cv
991.751 695.096 993.782 710.537 993.189 714.156 cv
992.597 717.776 988.784 725.224 979.9 726.324 cv
971.017 727.424 966.192 727.255 966.192 727.255 cv
966.192 727.255 963.007 729.533 960.873 731.021 cv
958.738 732.509 944.756 729.279 944.98 725.939 cv
945.204 722.601 935.381 725.731 934.749 726.324 cv
934.118 726.916 906.803 726.796 906.803 726.796 cv
cp
.960784 .509804 .278431 rgb
f
932.052 678.171 mo
932.052 678.171 937.327 677.59 937.394 674.838 cv
937.539 668.858 941.121 669.185 942.431 670.148 cv
943.739 671.113 946.598 676.614 948.293 677.59 cv
949.988 678.566 953.762 677.467 954.578 681.841 cv
955.395 686.216 950.006 690.163 948.084 690.629 cv
946.163 691.095 945.232 695.572 940.577 696.03 cv
935.923 696.488 934.03 695.405 932.976 692.986 cv
931.92 690.567 925.985 688.04 926.249 684.292 cv
926.513 680.545 930.354 678.5 932.052 678.171 cv
cp
1 1 1 rgb
f
943.904 722.973 mo
943.904 722.973 941.734 727.091 943.57 730.373 cv
945.406 733.656 960.351 732.487 961.169 730.707 cv
961.988 728.927 961.098 724.476 958.538 722.306 cv
955.979 720.135 953.039 717.881 950.358 718.299 cv
947.679 718.717 943.904 722.973 943.904 722.973 cv
cp
f
932.998 722.639 mo
932.998 722.639 935.113 724.476 935.836 727.591 cv
936.56 730.707 935.947 732.654 930.717 732.599 cv
925.487 732.543 918.165 733.044 915.983 731.542 cv
913.802 730.039 912.968 728.815 909.128 727.98 cv
905.289 727.146 905.011 723.373 906.18 721.253 cv
907.348 719.134 920.591 718.539 920.591 718.539 cv
920.591 718.539 930.05 719.802 932.998 722.639 cv
cp
f
935.329 724.686 mo
932.937 720.844 928.986 719.386 924.812 718.525 cv
924.771 718.443 922.255 715.537 921.836 715.076 cv
920.999 714.155 920.13 713.264 919.234 712.4 cv
918.914 712.093 918.349 712.059 918.035 712.4 cv
917.729 712.733 917.693 713.271 918.035 713.6 cv
918.837 714.372 919.617 715.167 920.372 715.985 cv
920.738 716.383 921.099 716.786 921.453 717.193 cv
921.636 717.403 921.816 717.615 921.996 717.828 cv
922.123 717.979 li
922.181 718.048 li
920.4 717.756 918.629 717.504 916.967 717.157 cv
915.902 716.936 915.447 718.569 916.517 718.793 cv
919.994 719.518 923.591 719.711 926.996 720.772 cv
929.694 721.613 932.336 723.087 933.865 725.541 cv
934.44 726.466 935.908 725.615 935.329 724.686 cv
cp
.909804 .458824 .227451 rgb
f
959.367 715.584 mo
958.035 715.55 956.703 715.648 955.392 715.865 cv
955.526 715.627 li
955.775 715.171 955.976 714.68 956.103 714.175 cv
956.358 713.154 956.352 712.081 956.089 711.063 cv
955.979 710.633 955.477 710.331 955.046 710.471 cv
954.603 710.614 954.335 711.054 954.454 711.514 cv
954.483 711.63 954.512 711.746 954.534 711.863 cv
954.565 712.04 li
954.557 711.962 954.558 711.976 954.569 712.081 cv
954.59 712.29 954.602 712.498 954.599 712.708 cv
954.597 712.827 954.592 712.946 954.582 713.065 cv
954.565 713.239 li
954.558 713.285 li
954.521 713.492 954.479 713.696 954.421 713.897 cv
954.19 714.699 953.606 715.71 953.333 716.317 cv
951.725 716.75 950.164 717.36 948.697 718.159 cv
945.701 719.788 942.516 722.333 942.22 725.982 cv
942.132 727.07 943.828 727.064 943.916 725.982 cv
944.165 722.897 947.385 720.749 949.869 719.455 cv
952.791 717.932 956.077 717.195 959.367 717.279 cv
960.459 717.308 960.458 715.611 959.367 715.584 cv
cp
f
975.748 715.288 mo
975.454 708.396 974.261 701.491 971.457 695.157 cv
970.064 692.009 968.362 688.994 967.161 685.762 cv
966.885 685.018 966.643 684.276 966.693 683.473 cv
966.744 682.664 967.022 681.878 967.201 681.092 cv
967.563 679.502 967.711 677.858 967.654 676.229 cv
967.541 672.963 966.668 669.775 965.406 666.776 cv
964.759 665.238 964.013 663.744 963.185 662.296 cv
962.407 660.937 961.444 659.622 961.128 658.059 cv
960.809 656.475 961.122 654.813 961.218 653.222 cv
961.311 651.692 961.301 649.829 960.37 648.528 cv
959.437 647.224 957.834 647.101 956.384 647.45 cv
954.844 647.822 953.327 648.54 951.954 649.318 cv
951.258 649.712 950.588 650.149 949.94 650.62 cv
949.57 650.89 949.389 651.357 949.636 651.78 cv
949.85 652.146 950.424 652.355 950.796 652.085 cv
952.04 651.181 953.377 650.399 954.793 649.797 cv
955.81 649.364 957.442 648.57 958.548 649.115 cv
959.155 649.413 959.328 650.188 959.444 650.793 cv
959.585 651.528 959.571 652.292 959.533 653.036 cv
959.453 654.573 959.194 656.113 959.364 657.653 cv
959.539 659.241 960.208 660.602 961.017 661.957 cv
961.814 663.294 962.574 664.649 963.24 666.058 cv
964.548 668.82 965.556 671.809 965.865 674.862 cv
966.017 676.357 966.022 677.886 965.804 679.374 cv
965.578 680.916 964.892 682.465 964.997 684.04 cv
965.105 685.655 965.9 687.235 966.545 688.695 cv
967.208 690.2 967.939 691.674 968.655 693.153 cv
970.088 696.111 971.34 699.105 972.185 702.289 cv
973.021 705.448 973.531 708.685 973.822 711.937 cv
974.081 714.821 974.513 718.099 973.408 720.863 cv
972.398 723.391 969.921 724.753 967.509 725.688 cv
966.879 725.933 966.242 726.156 965.604 726.377 cv
964.578 726.731 965.02 728.37 966.055 728.012 cv
968.693 727.101 971.535 726.083 973.447 723.943 cv
975.577 721.56 975.878 718.352 975.748 715.288 cv
cp
f
928.385 696.133 mo
928.385 696.133 925.871 696.809 923.439 701.202 cv
921.008 705.596 921.145 708.891 922.793 707.519 cv
924.44 706.146 923.342 709.793 924.715 712.156 cv
926.088 714.521 927.872 713.728 928.834 713.712 cv
929.795 713.696 932.068 718.64 935.462 720.562 cv
938.856 722.483 945.543 715.481 945.838 714.932 cv
946.133 714.383 949.529 716.442 950.371 714.521 cv
951.213 712.598 952.148 708.348 952.148 708.348 cv
952.148 708.348 955.389 709.599 955.429 706.911 cv
955.469 704.223 951.913 702.284 953.554 702.018 cv
955.194 701.752 957.756 701.614 956.75 699.555 cv
955.744 697.495 950.371 694.708 950.371 694.708 cv
950.371 694.708 943.034 698.95 938.821 698.807 cv
934.247 698.651 928.385 696.133 928.385 696.133 cv
cp
1 1 1 rgb
f
960.662 689.664 mo
959.03 691.969 956.077 692.789 953.466 693.379 cv
951.936 693.724 950.389 694.02 948.9 694.527 cv
947.389 695.043 946.061 695.83 944.707 696.663 cv
943.376 697.483 942.037 698.131 940.466 698.328 cv
938.914 698.523 937.207 698.498 935.672 698.184 cv
934.921 698.029 934.221 697.78 933.563 697.385 cv
932.886 696.979 932.265 696.484 931.576 696.094 cv
930.405 695.43 929.1 695.036 927.788 694.761 cv
925.039 694.186 921.797 694.156 919.517 692.305 cv
919.162 692.017 918.665 691.957 918.318 692.305 cv
918.02 692.603 917.961 693.214 918.318 693.504 cv
920.554 695.319 923.346 695.688 926.093 696.162 cv
927.446 696.396 928.849 696.654 930.102 697.239 cv
931.581 697.931 932.762 699.079 934.338 699.589 cv
935.905 700.095 937.66 700.166 939.295 700.11 cv
941.026 700.052 942.688 699.695 944.232 698.895 cv
945.682 698.144 946.98 697.121 948.49 696.485 cv
950.018 695.842 951.66 695.511 953.271 695.157 cv
956.589 694.428 960.064 693.433 962.127 690.521 cv
962.758 689.628 961.288 688.779 960.662 689.664 cv
cp
.909804 .458824 .227451 rgb
f
958.394 651.496 mo
958.251 651.056 957.81 650.781 957.351 650.903 cv
955.73 651.336 954.243 652.149 952.985 653.255 cv
952.65 653.548 952.566 654.327 952.985 654.453 cv
955.587 655.241 957.117 657.074 957.485 656.977 cv
957.914 656.861 958.533 651.93 958.394 651.496 cv
cp
f
931.237 669.61 mo
930.717 669.208 929.978 669.063 929.346 669.278 cv
929.033 669.386 928.729 669.552 928.517 669.813 cv
928.216 670.181 928.069 670.619 928.093 671.098 cv
928.129 671.84 928.302 672.674 928.874 673.18 cv
929.086 673.56 929.447 673.887 929.879 673.982 cv
930.404 674.098 930.874 673.924 931.278 673.595 cv
931.86 673.12 932.117 672.307 932.119 671.578 cv
932.121 670.835 931.836 670.072 931.237 669.61 cv
cp
.101961 .101961 .101961 rgb
f
951.788 667.592 mo
951.141 667.436 950.519 667.649 950.027 668.078 cv
949.574 668.473 949.34 669.041 949.269 669.624 cv
949.252 669.761 949.249 669.897 949.254 670.035 cv
949.209 670.264 949.178 670.497 949.157 670.729 cv
949.128 671.073 949.238 671.406 949.461 671.656 cv
949.568 671.837 949.708 671.996 949.87 672.13 cv
949.892 672.167 li
950.182 672.599 950.659 672.812 951.173 672.698 cv
951.715 672.578 952.181 672.067 952.479 671.598 cv
952.761 671.251 952.984 670.847 953.127 670.431 cv
953.503 669.336 953.003 667.887 951.788 667.592 cv
cp
f
923.299 653.291 mo
923.299 653.291 918.993 650.442 918.071 650.863 cv
917.15 651.284 918.154 656.554 919.158 656.428 cv
920.162 656.303 924.243 653.889 923.299 653.291 cv
cp
.909804 .458824 .227451 rgb
f
941.57 687.673 mo
941.57 687.673 934.22 683.566 935.652 681.354 cv
937.085 679.143 945.231 679.372 946.679 680.564 cv
948.672 682.209 941.57 687.673 941.57 687.673 cv
cp
.101961 .101961 .101961 rgb
f
905.204 641.443 mo
904.928 641.443 904.704 641.22 904.704 640.943 cv
904.704 634.642 li
904.704 634.365 904.928 634.142 905.204 634.142 cv
905.48 634.142 905.704 634.365 905.704 634.642 cv
905.704 640.943 li
905.704 641.22 905.48 641.443 905.204 641.443 cv
cp
.470588 .65098 .772549 rgb
f
962.281 641.443 mo
962.005 641.443 961.781 641.22 961.781 640.943 cv
961.781 634.642 li
961.781 634.365 962.005 634.142 962.281 634.142 cv
962.558 634.142 962.781 634.365 962.781 634.642 cv
962.781 640.943 li
962.781 641.22 962.558 641.443 962.281 641.443 cv
cp
f
905.204 725.851 mo
904.928 725.851 904.704 725.627 904.704 725.351 cv
904.704 719.048 li
904.704 718.771 904.928 718.548 905.204 718.548 cv
905.48 718.548 905.704 718.771 905.704 719.048 cv
905.704 725.351 li
905.704 725.627 905.48 725.851 905.204 725.851 cv
cp
f
962.281 725.851 mo
962.005 725.851 961.781 725.627 961.781 725.351 cv
961.781 719.048 li
961.781 718.771 962.005 718.548 962.281 718.548 cv
962.558 718.548 962.781 718.771 962.781 719.048 cv
962.781 725.351 li
962.781 725.627 962.558 725.851 962.281 725.851 cv
cp
f
904.58 717.616 mo
963.848 717.616 li
965.117 713.563 971.423 692.471 970.137 677.677 cv
968.86 663.007 964.49 645.677 963.516 641.937 cv
904.569 641.461 li
903.378 645.098 897.897 662.796 898.152 679.974 cv
898.407 697.113 903.458 714.055 904.58 717.616 cv
cp
964.579 719.616 mo
903.852 719.616 li
903.423 719.616 903.041 719.343 902.904 718.936 cv
902.84 718.743 896.443 699.517 896.152 680.003 cv
895.862 660.47 902.838 640.326 902.908 640.125 cv
903.05 639.722 903.402 639.457 903.86 639.455 cv
964.296 639.943 li
964.744 639.946 965.136 640.249 965.253 640.682 cv
965.308 640.882 970.682 660.86 972.129 677.504 cv
973.586 694.264 965.858 717.931 965.528 718.93 cv
965.394 719.34 965.011 719.616 964.579 719.616 cv
cp
f
914.054 718.749 mo
913.784 718.749 913.563 718.534 913.555 718.263 cv
911.359 640.534 li
911.352 640.258 911.569 640.027 911.845 640.02 cv
912.111 640.021 912.352 640.229 912.359 640.506 cv
914.555 718.234 li
914.563 718.511 914.345 718.741 914.068 718.749 cv
914.054 718.749 li
cp
f
935.151 718.749 mo
934.882 718.749 934.66 718.534 934.652 718.263 cv
932.456 640.534 li
932.448 640.258 932.666 640.027 932.942 640.02 cv
933.214 640.021 933.448 640.229 933.456 640.506 cv
935.652 718.234 li
935.66 718.511 935.442 718.741 935.166 718.749 cv
935.151 718.749 li
cp
f
956.249 718.749 mo
955.979 718.749 955.757 718.534 955.749 718.263 cv
953.554 640.534 li
953.546 640.258 953.764 640.027 954.04 640.02 cv
954.316 640.021 954.546 640.229 954.554 640.506 cv
956.749 718.234 li
956.757 718.511 956.539 718.741 956.264 718.749 cv
956.249 718.749 li
cp
f
971.31 683.369 mo
897.152 683.369 li
896.876 683.369 896.652 683.146 896.652 682.869 cv
896.652 682.593 896.876 682.369 897.152 682.369 cv
971.31 682.369 li
971.586 682.369 971.81 682.593 971.81 682.869 cv
971.81 683.146 971.586 683.369 971.31 683.369 cv
cp
f
968.615 660.639 mo
899.493 660.639 li
899.217 660.639 898.993 660.415 898.993 660.139 cv
898.993 659.862 899.217 659.639 899.493 659.639 cv
968.615 659.639 li
968.892 659.639 969.115 659.862 969.115 660.139 cv
969.115 660.415 968.892 660.639 968.615 660.639 cv
cp
f
968.805 703.018 mo
899.804 703.018 li
899.527 703.018 899.304 702.794 899.304 702.518 cv
899.304 702.241 899.527 702.018 899.804 702.018 cv
968.805 702.018 li
969.081 702.018 969.305 702.241 969.305 702.518 cv
969.305 702.794 969.081 703.018 968.805 703.018 cv
cp
f
919.903 740.205 mo
919.903 735.902 li
916.274 735.902 li
911.836 735.902 li
908.206 735.902 li
908.206 740.205 li
908.206 740.205 907.668 741.102 911.434 741.281 cv
911.675 741.292 911.904 741.302 912.124 741.311 cv
912.438 741.336 913.038 741.366 914.055 741.358 cv
915.071 741.366 915.672 741.336 915.985 741.311 cv
916.205 741.302 916.435 741.292 916.677 741.281 cv
920.441 741.102 919.903 740.205 919.903 740.205 cv
cp
.576471 .72549 .819608 rgb
f
961.01 740.205 mo
961.01 735.902 li
957.381 735.902 li
952.942 735.902 li
949.313 735.902 li
949.313 740.205 li
949.313 740.205 948.774 741.102 952.54 741.281 cv
952.781 741.292 953.011 741.302 953.23 741.311 cv
953.544 741.336 954.145 741.366 955.161 741.358 cv
956.178 741.366 956.778 741.336 957.092 741.311 cv
957.312 741.302 957.541 741.292 957.783 741.281 cv
961.548 741.102 961.01 740.205 961.01 740.205 cv
cp
f
997.929 740.205 mo
997.929 735.902 li
994.299 735.902 li
989.86 735.902 li
986.231 735.902 li
986.231 740.205 li
986.231 740.205 985.693 741.102 989.458 741.281 cv
989.7 741.292 989.93 741.302 990.149 741.311 cv
990.463 741.336 991.063 741.366 992.08 741.358 cv
993.097 741.366 993.697 741.336 994.011 741.311 cv
994.23 741.302 994.46 741.292 994.701 741.281 cv
998.467 741.102 997.929 740.205 997.929 740.205 cv
cp
f
1021.69 691.663 mo
1021.69 691.663 1021.08 693.553 1019.53 694.137 cv
1019.53 694.137 1013.39 726.939 1011.52 729.663 cv
1009.64 732.387 1008.22 736.131 1002.55 736.813 cv
996.879 737.493 940.452 737.568 940.452 737.568 cv
967.772 728.642 li
983.749 683.876 li
985.475 679.622 li
1021.69 679.704 li
1021.69 691.663 li
cp
f
1017.69 670.663 mo
1017.69 670.663 1018.36 667.938 1015.77 666.551 cv
1015.77 666.551 1009.19 636.163 1004.19 630.163 cv
999.188 624.163 969.263 621.97 949.725 622.066 cv
930.188 622.163 968.188 632.163 968.188 632.163 cv
982.616 677.067 li
988.688 679.663 li
1017.69 679.695 li
1017.69 670.663 li
cp
.933333 .894118 .909804 rgb
f
977.688 689.663 mo
995.987 689.663 li
995.987 689.663 996.457 692.707 998.59 694.137 cv
998.882 694.334 998.753 694.788 998.4 694.798 cv
996.786 694.838 994.065 694.458 992.701 691.714 cv
977.688 691.663 li
977.688 691.663 976.688 691.663 976.688 690.663 cv
976.688 689.663 977.688 689.663 977.688 689.663 cv
cp
.470588 .65098 .772549 rgb
f
951.784 621.94 mo
951.784 621.94 959.329 611.688 959.262 609.417 cv
959.195 607.147 956.591 606.212 954.788 608.683 cv
952.985 611.153 945.573 621.94 945.573 621.94 cv
951.784 621.94 li
cp
0 0 0 rgb
f
988.422 672.663 mo
988.422 667.663 984.422 668.663 984.422 668.663 cv
984.422 668.663 980.422 651.663 977.422 640.663 cv
974.422 629.663 971.422 625.663 967.422 623.663 cv
963.422 621.663 937.688 621.663 937.688 621.663 cv
937.688 621.663 904.688 621.663 900.688 623.663 cv
896.688 625.663 893.688 629.663 890.688 640.663 cv
887.688 651.663 883.688 668.663 883.688 668.663 cv
883.688 668.663 879.688 667.663 879.688 672.663 cv
879.688 677.663 879.422 679.663 879.422 679.663 cv
891.688 679.663 li
892.688 679.704 li
892.709 666.688 898.689 639.661 900.688 637.663 cv
902.03 636.32 920.473 635.846 934.055 635.715 cv
947.637 635.846 966.078 636.32 967.422 637.663 cv
969.419 639.661 975.4 666.607 975.421 679.622 cv
976.422 679.663 li
988.688 679.663 li
988.688 679.663 988.422 677.663 988.422 672.663 cv
cp
.933333 .894118 .909804 rgb
f
879.688 686.663 mo
879.688 691.663 883.688 690.663 883.688 690.663 cv
883.688 690.663 887.688 707.663 890.688 718.663 cv
893.688 729.663 896.688 733.663 900.688 735.663 cv
904.688 737.663 930.422 737.663 930.422 737.663 cv
930.422 737.663 963.422 737.663 967.422 735.663 cv
971.422 733.663 974.422 729.663 977.422 718.663 cv
980.422 707.663 984.422 690.663 984.422 690.663 cv
984.422 690.663 988.422 691.663 988.422 686.663 cv
988.422 681.663 988.688 679.663 988.688 679.663 cv
976.422 679.663 li
975.421 679.622 li
975.4 692.638 969.419 719.665 967.422 721.663 cv
966.078 723.006 947.637 723.48 934.055 723.612 cv
920.473 723.48 902.03 723.006 900.688 721.663 cv
898.689 719.665 892.709 692.719 892.688 679.704 cv
891.688 679.663 li
879.422 679.663 li
879.422 679.663 879.688 681.663 879.688 686.663 cv
cp
.576471 .72549 .819608 rgb
f
987.019 668.963 mo
986.435 668.56 985.555 668.379 985.192 667.759 cv
984.727 666.962 984.679 665.74 984.488 664.841 cv
984.075 662.88 983.662 660.919 983.235 658.961 cv
981.568 651.299 979.712 643.65 976.975 636.291 cv
976.249 634.34 975.461 632.411 974.608 630.512 cv
973.794 628.697 972.945 626.881 971.419 625.551 cv
970.452 624.709 969.031 626.118 970.004 626.965 cv
971.724 628.463 972.56 630.74 973.438 632.787 cv
974.372 634.964 975.207 637.183 975.974 639.424 cv
977.542 644.008 978.806 648.689 979.927 653.401 cv
981.033 658.052 981.975 662.735 982.989 667.406 cv
983.183 668.3 983.43 669.055 984.169 669.636 cv
984.908 670.218 985.821 670.427 986.493 671.122 cv
988.234 672.924 988.144 675.698 988.112 678.022 cv
988.095 679.31 990.095 679.311 990.112 678.022 cv
990.156 674.778 989.957 670.997 987.019 668.963 cv
cp
.933333 .894118 .909804 rgb
f
1013.4 666.151 mo
1006.74 665.709 997.445 665.688 990.787 666.055 cv
989.771 666.111 989.774 667.698 990.797 667.643 cv
997.455 667.275 1006.75 667.297 1013.41 667.739 cv
1014.43 667.807 1014.41 666.219 1013.4 666.151 cv
cp
.862745 .780392 .815686 rgb
f
982.153 635.605 mo
981.792 634.371 979.885 634.975 980.247 636.213 cv
982.613 644.289 984.674 652.45 986.423 660.682 cv
986.69 661.938 988.596 661.326 988.329 660.075 cv
986.579 651.843 984.52 643.682 982.153 635.605 cv
cp
.470588 .65098 .772549 rgb
f
993.26 660.152 mo
991.354 651.608 989.342 644.091 987.211 635.602 cv
986.897 634.354 984.972 634.894 985.285 636.144 cv
987.416 644.634 989.429 652.151 991.334 660.694 cv
991.614 661.95 993.54 661.407 993.26 660.152 cv
cp
f
998.453 659.659 mo
996.551 652.733 994.582 643.808 992.68 636.881 cv
992.339 635.641 990.428 636.233 990.77 637.476 cv
992.672 644.402 994.641 653.328 996.543 660.254 cv
996.884 661.495 998.795 660.902 998.453 659.659 cv
cp
f
1006.94 660.047 mo
1005.45 653.539 1002.65 644.11 1000.67 637.735 cv
1000.29 636.509 998.365 637.069 998.75 638.303 cv
1000.73 644.678 1003.53 654.106 1005.02 660.614 cv
1005.31 661.868 1007.23 661.3 1006.94 660.047 cv
cp
f
1011.75 660.367 mo
1010.7 655.565 1006.83 643.235 1005.52 638.499 cv
1005.18 637.26 1003.25 637.786 1003.59 639.03 cv
1004.9 643.767 1008.77 656.097 1009.82 660.898 cv
1010.09 662.155 1012.02 661.624 1011.75 660.367 cv
cp
f
988.073 682.073 mo
987.727 683.698 987.887 685.313 987.766 686.953 cv
987.673 688.208 986.931 690.493 985.263 690.265 cv
984.769 690.197 984.135 690.377 984.032 690.964 cv
982.194 701.49 980.159 711.98 977.929 722.431 cv
977.66 723.686 979.588 724.223 979.857 722.962 cv
982.039 712.741 984.031 702.48 985.837 692.187 cv
987.241 691.999 988.377 691.079 989.072 689.727 cv
990.219 687.498 989.499 684.964 990.001 682.605 cv
990.269 681.35 988.342 680.813 988.073 682.073 cv
cp
f
1008.86 689.663 mo
1016.16 689.663 li
1016.16 689.663 1016.63 692.707 1018.76 694.137 cv
1019.05 694.334 1018.92 694.788 1018.57 694.798 cv
1016.96 694.838 1014.23 694.458 1012.87 691.714 cv
1008.86 691.663 li
1008.86 691.663 1007.86 691.663 1007.86 690.663 cv
1007.86 689.663 1008.86 689.663 1008.86 689.663 cv
cp
f
994.688 670.663 mo
994.688 670.663 1004.84 670.663 1006.26 670.663 cv
1007.69 670.663 1007.86 679.663 1007.86 679.663 cv
1007.86 679.663 1008.69 679.663 1008.69 681.663 cv
1008.69 683.663 1007.69 693.663 1002.69 694.663 cv
997.688 695.663 997.688 679.663 997.688 679.663 cv
994.688 670.663 li
cp
f
1006.09 679.988 mo
1004.43 680.02 1002.76 680.093 1001.1 680.207 cv
1000.58 680.243 1000.07 680.602 1000.08 681.179 cv
1000.08 681.677 1000.49 682.245 1001.05 682.207 cv
1002.71 682.092 1004.37 682.019 1006.04 681.988 cv
1006.56 681.979 1007.07 681.575 1007.06 681.017 cv
1007.05 680.495 1006.65 679.979 1006.09 679.988 cv
cp
1 1 1 rgb
f
1017.69 670.663 mo
1019.49 670.663 li
1019.49 670.663 1022.85 671.148 1022.85 679.663 cv
1023.17 679.663 li
1023.17 679.663 1023.69 679.772 1023.69 680.437 cv
1023.69 685.264 1023.58 690.714 1021.69 691.663 cv
1019.69 692.663 1019.69 678.663 1019.69 678.663 cv
1017.69 670.663 li
cp
.470588 .65098 .772549 rgb
f
1017.73 679.695 mo
1020.55 679.701 li
1020.55 679.701 1020.69 671.663 1017.69 670.663 cv
1017.73 679.695 li
cp
.423529 .588235 .721569 rgb
f
994.688 670.663 mo
994.688 670.663 995.688 670.663 996.688 672.663 cv
997.688 674.663 997.688 679.663 997.688 679.663 cv
994.286 679.663 li
994.688 670.663 li
cp
f
902.932 633.716 mo
907.632 633.302 li
907.632 633.302 907.355 630.121 905.281 630.19 cv
903.208 630.26 902.932 633.716 902.932 633.716 cv
cp
.470588 .65098 .772549 rgb
f
959.924 632.81 mo
964.606 633.396 li
964.606 633.396 965.305 629.663 962.648 629.663 cv
960.283 629.663 959.924 632.81 959.924 632.81 cv
cp
f
901.111 633.716 mo
901.561 633.604 912.306 631.179 935.333 631.161 cv
958.359 631.144 968.246 632.984 968.687 633.716 cv
969.127 634.448 969.127 636.047 967.208 635.728 cv
965.289 635.407 945.887 633.063 932.561 633.169 cv
919.235 633.275 902.711 634.556 901.111 634.929 cv
899.513 635.301 899.229 634.188 901.111 633.716 cv
cp
.862745 .780392 .815686 rgb
f
902.621 727.063 mo
907.321 727.478 li
907.321 727.478 907.045 730.657 904.972 730.588 cv
902.897 730.52 902.621 727.063 902.621 727.063 cv
cp
.470588 .65098 .772549 rgb
f
959.613 727.969 mo
964.296 727.383 li
964.296 727.383 964.994 731.116 962.338 731.115 cv
959.973 731.115 959.613 727.969 959.613 727.969 cv
cp
f
900.802 727.063 mo
901.25 727.175 911.995 729.601 935.022 729.618 cv
958.05 729.636 967.936 727.795 968.376 727.063 cv
968.816 726.331 968.816 724.731 966.897 725.052 cv
964.979 725.371 945.576 727.717 932.251 727.61 cv
918.925 727.504 902.4 726.223 900.802 725.851 cv
899.202 725.478 898.918 726.591 900.802 727.063 cv
cp
f
602.963 742.608 mo
603.236 748.815 472.219 746.979 376.414 747.082 cv
372.354 747.087 381.16 759.298 377.032 759.696 cv
307.393 766.423 304.764 747.101 299.052 747.097 cv
182.182 747.006 150.46 745.956 150.46 742.608 cv
150.46 739.096 251.701 739.564 376.657 739.564 cv
501.612 739.564 602.765 738.118 602.963 742.608 cv
cp
.501961 .47451 .556863 rgb
f
544.424 546.752 mo
544.424 617.985 li
551.541 617.985 li
551.541 546.752 li
544.424 546.752 li
cp
.631373 .392157 .309804 rgb
f
208.487 546.752 mo
208.487 617.985 li
215.604 617.985 li
215.604 546.752 li
208.487 546.752 li
cp
f
165.173 554.416 mo
212.046 557.453 335.041 558.018 580.485 553.635 cv
587.886 553.503 588.276 551.152 588.679 549.803 cv
590.706 543.015 595.159 510.985 591.594 471.813 cv
591.491 470.681 590.241 468.471 587.996 468.306 cv
556.332 465.966 356.78 465.66 167.488 468.534 cv
166.17 468.555 165.127 469.655 165.012 470.968 cv
164.272 479.386 161.901 510.457 162.993 552.275 cv
163.024 553.461 163.989 554.339 165.173 554.416 cv
cp
.988235 .980392 .980392 rgb
f
576.324 718.198 mo
576.324 718.198 578.7 737.746 578.524 740.755 cv
578.349 743.765 571.758 743.758 571.292 742.14 cv
570.825 740.521 562.108 720.41 563.742 719.244 cv
565.375 718.077 576.324 718.198 576.324 718.198 cv
cp
.631373 .392157 .309804 rgb
f
550.111 718.198 mo
550.111 718.198 552.487 737.746 552.312 740.755 cv
552.137 743.765 545.545 743.758 545.079 742.14 cv
544.612 740.521 535.896 720.41 537.529 719.244 cv
539.162 718.077 550.111 718.198 550.111 718.198 cv
cp
.498039 .254902 .2 rgb
f
178.253 718.198 mo
178.253 718.198 177.445 737.746 177.62 740.755 cv
177.795 743.765 184.386 743.758 184.853 742.14 cv
185.32 740.521 192.468 720.41 190.835 719.244 cv
189.202 718.077 178.253 718.198 178.253 718.198 cv
cp
.631373 .392157 .309804 rgb
f
216.998 718.198 mo
216.998 718.198 216.19 737.746 216.366 740.755 cv
216.541 743.765 223.132 743.758 223.598 742.14 cv
224.065 740.521 231.213 720.41 229.58 719.244 cv
227.947 718.077 216.998 718.198 216.998 718.198 cv
cp
.498039 .254902 .2 rgb
f
164.268 595.918 mo
592.308 595.918 li
592.308 595.918 596.439 595.909 596.494 617.937 cv
596.56 644.818 592.974 644.58 592.974 644.58 cv
592.974 644.58 593.899 715.201 592.308 721.521 cv
590.716 727.843 166.679 726.247 164.649 723.331 cv
162.618 720.416 162.71 643.786 162.71 643.786 cv
162.71 643.786 159.252 638.418 160.147 617.985 cv
161.069 596.928 164.268 595.918 164.268 595.918 cv
cp
.988235 .980392 .980392 rgb
f
166.991 641.948 mo
588.483 641.948 li
588.483 641.948 590.195 641.558 590.292 643.366 cv
590.39 645.175 589.753 646.396 588.483 646.494 cv
587.213 646.593 362.507 647.067 332.209 647.237 cv
301.912 647.407 170.136 645.161 167.887 644.575 cv
165.638 643.988 165.105 641.948 166.991 641.948 cv
cp
.878431 .815686 .772549 rgb
f
586.781 476.411 mo
586.781 476.411 585.368 528.131 581.059 544.411 cv
581.059 544.411 169.104 549.692 168.761 549.699 cv
166.942 549.73 166.429 550.081 166.429 550.476 cv
166.429 551.129 168.072 551.152 168.072 551.152 cv
168.072 551.152 578.587 550.159 583.905 549.435 cv
586.226 549.118 588.319 526.082 588.178 527.766 cv
589.185 515.778 590.133 494.391 588.595 477.012 cv
588.095 471.363 586.686 471.74 586.781 476.411 cv
cp
f
179.716 552.667 mo
179.716 552.667 174.185 561.729 172.241 573.057 cv
170.297 584.385 175.177 590.377 179.716 597.083 cv
184.254 603.789 238.146 561.211 238.146 561.211 cv
179.716 552.667 li
cp
.423529 .305882 .305882 rgb
f
304.39 500.297 mo
304.39 500.297 312.979 503.17 314.512 508.499 cv
316.043 513.828 312.979 524.345 311.448 525.342 cv
309.916 526.339 307.034 520.9 304.39 517.747 cv
301.746 514.594 304.39 500.297 304.39 500.297 cv
cp
.247059 .262745 .266667 rgb
f
305.183 518.749 mo
306.102 519.959 307.031 521.331 307.905 522.522 cv
309.136 520.585 310.644 515.187 309.072 514.258 cv
307.727 513.462 306.028 516.814 305.183 518.749 cv
cp
.101961 .101961 .101961 rgb
f
311.136 517.025 mo
311.136 517.025 311.889 518.295 312.542 518.69 cv
313.196 519.086 313.296 517.578 312.693 516.121 cv
312.09 514.663 310.733 515.065 311.136 517.025 cv
cp
f
310.583 519.588 mo
310.583 519.588 309.16 520.694 309.746 522.252 cv
310.332 523.81 311.085 523.731 311.286 523.243 cv
311.487 522.754 311.333 518.632 310.583 519.588 cv
cp
f
267.109 444.565 mo
266.585 442.131 265.668 439.805 264.802 437.478 cv
263.876 434.989 263.015 432.479 262.23 429.942 cv
261.444 427.399 260.586 424.781 260.501 422.1 cv
260.42 419.541 261.288 417.161 261.963 414.732 cv
263.187 410.329 263.529 405.703 262.971 401.168 cv
262.352 396.13 260.679 391.284 258.02 386.958 cv
257.347 385.864 255.616 386.867 256.293 387.968 cv
260.879 395.428 262.415 404.628 260.311 413.151 cv
259.764 415.365 258.942 417.51 258.635 419.779 cv
258.314 422.144 258.655 424.497 259.239 426.795 cv
260.438 431.519 262.209 436.058 263.847 440.638 cv
265.488 445.225 266.894 451.017 263.444 455.172 cv
262.628 456.155 264.035 457.577 264.859 456.586 cv
267.67 453.2 268.008 448.736 267.109 444.565 cv
cp
.223529 .0901961 .0823529 rgb
f
258.052 388.995 mo
258.056 388.883 li
258.063 388.646 li
258.052 388.624 li
258.132 383.756 254.494 380.315 249.553 376.775 cv
246.195 372.602 242.481 363.651 220.966 367.47 cv
214.043 368.699 215.654 371.309 213.321 373.15 cv
213.319 373.15 li
213.319 373.15 201.617 371.963 201.276 389.541 cv
201.022 402.605 199.527 405.697 195.511 409.11 cv
184.17 418.751 190.592 426.943 182.62 433.826 cv
177.743 438.036 171.999 450.598 183.744 460.13 cv
189.517 464.815 211.023 465.917 224.021 464.556 cv
224.785 464.476 257.502 462.821 263.29 451.347 cv
266.362 445.255 256.91 431.327 256.576 422.966 cv
256.256 414.986 259.29 413.182 259.968 405.075 cv
260.638 397.065 257.345 393.931 257.882 390.357 cv
257.914 390.188 257.93 390.025 257.953 389.859 cv
258 389.515 258.036 389.212 258.052 388.995 cv
cp
f
293.296 564.387 mo
293.32 564.382 li
293.318 564.378 li
293.296 564.387 li
cp
1 1 1 rgb
f
306.444 478.098 mo
306.444 478.098 281.074 488.279 280.308 487.68 cv
279.542 487.079 264.469 456.893 258.069 453.573 cv
251.67 450.254 235.942 443.281 235.942 443.281 cv
199.22 438.944 li
199.22 438.944 184.81 444.382 180.338 448.211 cv
175.867 452.041 166.937 455.36 161.32 467.36 cv
155.703 479.36 149.831 485.488 139.363 497.851 cv
128.895 510.214 125.831 526.339 133.49 533.998 cv
141.15 541.658 173.605 543.163 173.605 543.163 cv
173.605 543.163 174.065 536.457 175.726 536.282 cv
178.009 536.042 181.934 540.113 181.49 543.956 cv
180.725 550.594 178.032 555.793 178.032 555.793 cv
178.032 555.793 182.203 568.1 241.235 566.935 cv
247.161 566.817 254.667 559.938 259.719 559.949 cv
256.727 552.679 254.805 547.93 254.805 547.93 cv
254.805 547.93 253.347 536.828 256.743 530.533 cv
258.507 527.263 264.488 525.871 266.826 517 cv
269.164 508.129 267.718 506.601 271.774 519.445 cv
275.831 532.289 281.831 540.586 281.831 540.586 cv
290.001 542.322 305.831 534.765 306.608 525.342 cv
307.386 515.919 306.444 478.098 306.444 478.098 cv
cp
.909804 .266667 .313726 rgb
f
233.887 418.111 mo
232.669 423.195 226.971 432.001 228.22 435.063 cv
228.291 435.186 li
228.624 435.745 229.81 437.575 231.417 439.381 cv
231.848 439.866 235.459 442.826 235.942 443.281 cv
237.821 449.43 236.802 458.104 234.258 463.257 cv
232.35 467.125 227.288 466.234 222.838 461.388 cv
215.065 452.922 206.588 444.132 202.958 441.386 cv
201.679 440.42 200.415 439.577 199.22 438.944 cv
201.759 436.522 204.185 433.883 205.184 431.928 cv
208.21 426.003 210.251 413.357 211.325 405.075 cv
218.858 408.805 226.78 411.641 234.637 414.615 cv
234.45 415.628 234.206 416.784 233.887 418.111 cv
cp
.603922 .294118 .156863 rgb
f
228.221 435.062 mo
228.288 435.187 li
208.575 430.024 215.078 407.364 215.078 407.364 cv
233.993 417.379 li
232.775 422.461 226.974 432.002 228.221 435.062 cv
cp
.101961 .101961 .101961 rgb
f
252.059 391.977 mo
247.854 395.508 240.083 383.804 234.473 393.438 cv
233.885 394.188 233.258 394.906 232.546 395.534 cv
230.662 397.197 226.537 399.174 224.021 398.98 cv
220.662 404.237 216.787 402.082 216.787 402.082 cv
216.787 402.082 216.189 399.127 214.654 396.891 cv
212.795 394.185 208.272 395.129 206.511 399.225 cv
202.916 407.588 210.737 409.515 210.737 409.515 cv
211.479 413.005 211.096 413.759 212.141 416.702 cv
215.276 425.531 224.789 432.719 232.524 432.75 cv
248.068 432.813 251.144 407.311 252.188 403.918 cv
253.561 399.455 252.059 391.977 252.059 391.977 cv
cp
.603922 .294118 .156863 rgb
f
235.396 423.217 mo
235.396 423.217 238.622 422.302 241.318 423.969 cv
241.75 424.235 239.79 427.359 237.459 426.896 cv
235.13 426.433 235.396 423.217 235.396 423.217 cv
cp
1 1 1 rgb
f
234.195 406.187 mo
233.956 405.842 233.632 405.64 233.222 405.657 cv
233.086 405.646 li
233.038 405.638 li
232.99 405.646 li
231.579 405.684 230.783 407.635 231.214 408.79 cv
231.243 409.063 231.325 409.313 231.519 409.483 cv
231.709 409.651 231.967 409.736 232.239 409.743 cv
232.304 409.779 li
232.921 409.958 233.451 409.605 233.818 409.047 cv
234.577 408.287 234.759 406.994 234.195 406.187 cv
cp
.101961 .101961 .101961 rgb
f
251.363 408.887 mo
250.961 408.048 249.892 407.832 249.036 408.44 cv
248.823 408.623 li
248.598 408.833 248.437 409.108 248.383 409.42 cv
248.365 409.527 li
248.36 409.561 li
248.325 410.105 248.302 410.659 248.516 411.137 cv
248.929 412.058 250.15 411.999 250.91 411.256 cv
251.57 410.608 251.707 409.604 251.363 408.887 cv
cp
f
242.999 416.755 mo
243.03 416.258 242.646 415.86 242.157 415.905 cv
241.677 415.949 241.197 415.993 240.717 416.038 cv
240.23 416.082 239.79 416.533 239.757 417.035 cv
239.726 417.531 240.11 417.929 240.599 417.884 cv
241.079 417.84 241.559 417.796 242.039 417.752 cv
242.525 417.707 242.966 417.256 242.999 416.755 cv
cp
.541176 .235294 .113725 rgb
f
238.283 399.001 mo
236.982 399.25 235.682 399.306 234.384 399.622 cv
233.067 399.943 231.773 400.417 230.464 400.786 cv
229.283 401.117 229.462 402.857 230.653 402.523 cv
231.961 402.155 233.257 401.676 234.573 401.359 cv
235.871 401.048 237.171 400.988 238.472 400.739 cv
239.67 400.51 239.481 398.772 238.283 399.001 cv
cp
.223529 .0901961 .0823529 rgb
f
253.315 404.236 mo
252.802 403.268 252.025 402.822 251.105 402.365 cv
250.138 401.884 249.129 403.563 250.105 404.049 cv
250.714 404.353 251.372 404.589 251.715 405.237 cv
252.242 406.231 253.844 405.234 253.315 404.236 cv
cp
f
301.49 484.467 mo
301.49 484.467 306.189 480.651 306.444 478.098 cv
306.699 475.545 298.426 479.104 298.426 479.104 cv
301.49 484.467 li
cp
.101961 .101961 .101961 rgb
f
167.706 511.724 mo
163.889 511.591 160.08 511.337 156.282 510.97 cv
153.251 508.374 150.167 505.844 147.021 503.389 cv
146.52 502.997 145.808 503.7 146.314 504.096 cv
149.095 506.267 151.821 508.505 154.513 510.785 cv
149.173 510.216 143.859 509.423 138.584 508.388 cv
137.326 508.141 136.788 510.068 138.052 510.316 cv
147.831 512.234 157.747 513.378 167.706 513.724 cv
168.993 513.769 168.991 511.769 167.706 511.724 cv
cp
.733333 .137255 .156863 rgb
f
192.25 461.601 mo
193.633 464.257 194.741 467.049 195.52 469.941 cv
195.687 470.563 196.617 470.194 196.451 469.578 cv
194.072 460.745 188.654 453.276 182.406 446.731 cv
182.116 446.913 181.844 447.094 181.584 447.272 cv
185.739 451.591 189.48 456.279 192.25 461.601 cv
cp
f
316.783 400.773 mo
316.783 400.773 329.349 391.907 333.15 393.063 cv
335.888 393.895 325.157 409.826 325.157 409.826 cv
316.783 400.773 li
cp
.247059 .262745 .266667 rgb
f
215.275 543.956 mo
216.344 544.617 241.736 552.667 248.654 552.667 cv
251.742 552.667 256.554 547.275 254.038 545.207 cv
249.395 541.391 238.346 538.426 237.121 535.617 cv
236.771 534.813 230.014 519.012 230.014 519.012 cv
230.014 519.012 212.903 542.489 215.275 543.956 cv
cp
.101961 .101961 .101961 rgb
f
292.416 485.707 mo
296.071 482.508 304.692 470.723 308.483 464.765 cv
312.275 458.808 318.774 442.018 320.038 437.685 cv
321.302 433.352 324.732 429.921 326.356 427.97 cv
327.981 426.019 329.426 420.172 330.313 415.902 cv
331.199 411.632 329.512 408.765 329.512 408.765 cv
329.512 408.765 325.379 406.284 324.475 404.787 cv
323.57 403.29 322.682 400.594 319.937 399.19 cv
317.192 397.786 315.21 400.53 313.169 399.892 cv
311.128 399.254 304.171 395.679 299.639 396.573 cv
295.107 397.467 291.405 400.722 291.405 400.722 cv
291.405 400.722 274.086 393.403 271.277 395.53 cv
268.469 397.658 270.767 404.043 274.086 409.957 cv
277.405 415.871 278.001 416.5 277.235 417.888 cv
276.469 419.275 268.128 427.275 256.724 430.509 cv
245.32 433.743 225.281 441.051 213.303 444.637 cv
213.303 444.637 184.214 455.275 174.512 486.169 cv
164.81 517.063 171.003 542.059 183.788 551.828 cv
190.991 557.332 212.369 562.85 226.036 563.615 cv
239.703 564.382 264.214 563.104 265.235 560.297 cv
266.256 557.488 252.724 551.104 245.32 550.339 cv
237.916 549.573 216.092 537.852 217.992 531.979 cv
219.892 526.106 233.993 525.462 244.81 512.552 cv
250.102 506.234 276.703 499.459 292.416 485.707 cv
cp
.247059 .262745 .266667 rgb
f
226.036 514.258 mo
226.036 514.258 228 503.871 224.021 493.658 cv
220.043 483.445 226.036 489.319 227.958 501.573 cv
229.257 509.853 227.177 521.836 226.036 514.258 cv
cp
.101961 .101961 .101961 rgb
f
242.36 558.051 mo
241.924 556.585 240.947 555.217 240 554.036 cv
237.935 551.461 235.231 549.481 232.513 547.649 cv
229.238 545.442 225.783 543.355 223.145 540.365 cv
220.634 537.519 218.892 533.613 219.724 529.774 cv
219.86 529.146 216.821 528.879 216.685 529.508 cv
216.007 532.634 217.086 535.684 218.475 538.513 cv
227.085 556.053 213.831 545.44 211.33 544.314 cv
205.8 541.823 198.39 541.157 194.325 536.437 cv
193.905 535.947 193.2 536.657 193.618 537.144 cv
201.145 545.887 214.68 546.019 221.734 555.296 cv
222.686 556.548 223.572 557.883 224.842 558.843 cv
226.191 559.863 227.831 560.21 229.475 560.43 cv
231.467 560.697 233.47 560.896 235.475 561.045 cv
236.365 561.111 237.255 561.166 238.146 561.211 cv
238.957 561.251 239.785 561.326 240.588 561.171 cv
242.139 560.872 242.799 559.524 242.36 558.051 cv
cp
f
313.396 431.901 mo
311.288 431.996 309.223 432.032 307.221 431.268 cv
305.243 430.511 303.428 429.307 301.604 428.247 cv
299.426 426.983 297.248 425.72 295.07 424.455 cv
294.966 424.395 294.867 424.386 294.773 424.397 cv
294.008 423.996 293.223 423.752 292.379 424.134 cv
292.005 424.303 292.108 424.803 292.379 424.997 cv
294.573 426.566 296.787 428.108 299.031 429.604 cv
301.051 430.95 303.139 432.24 305.442 433.047 cv
307.861 433.895 310.333 433.912 312.862 433.739 cv
315.559 433.555 318.255 433.356 320.952 433.165 cv
321.368 433.136 321.806 433.122 322.248 433.102 cv
323.01 431.948 323.831 430.922 324.59 430.026 cv
320.973 431.193 317.191 431.729 313.396 431.901 cv
cp
f
284.128 497.851 mo
284.128 497.851 300.128 486.721 301.49 484.467 cv
301.49 484.467 298.682 463.275 296.639 458.169 cv
294.597 453.063 273.916 441.317 271.618 440.807 cv
269.32 440.297 253.031 443.104 249.941 443.871 cv
246.852 444.637 245.32 448.211 244.299 449.488 cv
243.277 450.765 246.708 451.313 247.775 451.059 cv
248.843 450.803 244.51 455.615 243 457.402 cv
241.49 459.19 243.533 459.956 245.831 459.956 cv
248.128 459.956 246.658 462.859 250.957 462.859 cv
255.255 462.859 262.426 460.467 264.214 459.7 cv
266.001 458.935 254.959 464.091 256.554 467.104 cv
257.31 468.532 262.682 467.048 267.788 465.672 cv
272.895 464.297 273.916 468.428 279.533 469.298 cv
285.15 470.169 284.128 497.851 284.128 497.851 cv
cp
.603922 .294118 .156863 rgb
f
272.056 456.904 mo
271.9 456.599 271.526 456.213 271.485 455.869 cv
271.444 455.524 271.705 455.042 271.764 454.697 cv
271.907 453.869 271.879 453.023 271.675 452.208 cv
271.477 451.419 271.077 450.763 270.66 450.076 cv
270.15 449.236 270.622 448.617 270.852 447.752 cv
271.301 446.062 271.261 444.295 270.811 442.61 cv
270.479 441.368 268.55 441.895 268.883 443.142 cv
269.32 444.781 269.234 446.388 268.681 447.988 cv
268.422 448.738 268.244 449.407 268.493 450.192 cv
268.719 450.908 269.255 451.462 269.548 452.144 cv
269.862 452.875 269.94 453.685 269.778 454.463 cv
269.625 455.195 269.373 455.779 269.604 456.532 cv
269.822 457.242 270.348 457.793 270.552 458.516 cv
270.783 459.339 270.697 460.142 270.42 460.939 cv
269.997 462.157 271.928 462.681 272.349 461.471 cv
272.87 459.973 272.775 458.324 272.056 456.904 cv
cp
.541176 .235294 .113725 rgb
f
168.58 534.176 mo
168.58 534.176 171.409 542.979 173.605 543.163 cv
175.802 543.346 175.902 531.979 175.902 531.979 cv
168.58 534.176 li
cp
.101961 .101961 .101961 rgb
f
170.41 514.039 mo
170.41 514.039 189.449 513.123 190.913 511.476 cv
192.378 509.828 196.829 503.299 200.788 502.384 cv
204.747 501.469 207.938 498.661 209.402 497.93 cv
210.867 497.197 211.25 502.001 210.448 504.015 cv
209.646 506.028 206.84 506.899 206.657 508.181 cv
206.474 509.462 210.094 512.574 214.05 512.392 cv
218.006 512.208 232.862 512.025 234.496 512.208 cv
236.13 512.392 238.751 514.839 230.704 518.615 cv
227.232 520.244 228.99 523.558 226.61 525.022 cv
224.23 526.487 227.657 529.416 224.021 530.881 cv
220.386 532.345 222.217 533.261 217.274 535.091 cv
212.332 536.922 195.673 533.443 189.998 532.711 cv
184.323 531.979 168.58 534.176 168.58 534.176 cv
168.58 534.176 160.174 514.751 170.41 514.039 cv
cp
.603922 .294118 .156863 rgb
f
214.769 517.886 mo
214.258 517.58 213.725 517.816 213.4 518.244 cv
212.651 519.23 212.251 520.469 212.244 521.706 cv
212.241 522.318 212.334 522.957 212.534 523.536 cv
212.763 524.201 213.105 524.596 212.692 525.248 cv
211.981 526.374 211.449 527.406 211.347 528.763 cv
211.249 530.054 211.591 531.367 212.269 532.465 cv
212.944 533.558 214.675 532.555 213.996 531.455 cv
213.454 530.579 213.214 529.552 213.372 528.524 cv
213.557 527.319 214.441 526.567 214.811 525.458 cv
215.214 524.246 214.395 523.328 214.264 522.169 cv
214.143 521.103 214.487 520.097 215.127 519.254 cv
215.457 518.82 215.192 518.14 214.769 517.886 cv
cp
.541176 .235294 .113725 rgb
f
230.014 519.012 mo
229.202 519.34 228.421 519.572 227.66 519.668 cv
226.02 519.875 224.353 519.854 222.757 520.339 cv
221.529 520.712 222.053 522.643 223.289 522.267 cv
224.923 521.771 226.648 521.829 228.326 521.579 cv
228.573 520.646 228.964 519.727 230.014 519.012 cv
cp
f
322.61 416.895 mo
322.61 416.895 314.069 412.019 313.215 409.957 cv
312.361 407.896 323.634 406.412 328.929 408.093 cv
334.224 409.773 322.61 416.895 322.61 416.895 cv
cp
.101961 .101961 .101961 rgb
f
328.047 422.601 mo
326.885 421.401 325.342 420.121 323.573 420.795 cv
323.136 420.961 322.725 421.247 322.258 421.327 cv
321.662 421.431 321.054 421.215 320.468 421.126 cv
319.466 420.975 318.454 421.08 317.479 421.345 cv
315.643 421.843 311.338 423.948 310.292 424.028 cv
309.694 424.074 309.106 423.982 308.579 423.688 cv
308.055 423.395 307.682 422.89 307.128 422.644 cv
306.616 422.417 305.91 422.426 305.53 422.938 cv
304.982 423.677 306.068 424.518 306.103 424.535 cv
307.475 425.443 308.952 425.518 310.433 425.196 cv
310.647 425.185 312.992 424.439 313.068 424.302 cv
314.052 423.873 315.009 423.39 315.904 422.985 cv
316.938 422.52 318.052 422.119 319.194 422.06 cv
320.241 422.004 321.259 422.458 322.297 422.324 cv
323.265 422.2 324.033 421.402 325.051 421.658 cv
325.967 421.89 326.706 422.652 327.34 423.308 cv
327.789 423.771 328.496 423.063 328.047 422.601 cv
cp
f
307.125 405.542 mo
306.861 405.099 306.377 404.786 305.943 404.528 cv
305.699 404.384 305.441 404.26 305.178 404.149 cv
304.941 404.018 304.69 403.922 304.423 403.866 cv
304.279 403.798 304.141 403.72 303.987 403.665 cv
303.84 403.611 303.684 403.651 303.546 403.727 cv
303.388 403.725 303.23 403.735 303.081 403.785 cv
302.404 404.009 302.212 404.748 302.541 405.341 cv
302.596 405.44 302.666 405.532 302.739 405.622 cv
302.8 405.773 li
303.007 406.181 303.341 406.554 303.699 406.834 cv
304.524 407.479 305.784 407.767 306.716 407.15 cv
307.262 406.789 307.471 406.123 307.125 405.542 cv
cp
f
324.671 404.453 mo
324.509 404.244 li
324.408 404.015 324.274 403.798 324.093 403.632 cv
323.776 403.341 323.397 403.179 322.971 403.135 cv
322.827 403.164 li
322.819 403.165 li
322.658 403.259 li
322.596 403.295 li
322.467 403.515 li
322.467 403.604 li
322.329 403.774 322.276 404.007 322.333 404.241 cv
322.377 404.424 322.482 404.61 322.584 404.768 cv
322.802 405.101 323.094 405.404 323.439 405.606 cv
323.7 405.707 li
323.803 405.789 323.911 405.861 324.042 405.911 cv
324.28 406.001 324.587 405.96 324.767 405.768 cv
325.111 405.4 324.897 404.828 324.671 404.453 cv
cp
f
282.085 472.38 mo
282.085 472.38 292.554 495.956 299.448 506.169 cv
306.341 516.382 307.618 530.597 307.618 535.617 cv
307.618 540.637 304.56 549.573 302.259 551.615 cv
299.958 553.658 293.575 540.382 293.065 537.573 cv
292.554 534.765 296.128 530.68 296.128 529.147 cv
296.128 527.615 292.043 519.19 288.214 514.084 cv
284.384 508.978 272.128 498.509 266.256 491.36 cv
260.384 484.211 260.895 477.145 264.214 472.38 cv
267.533 467.615 282.085 472.38 282.085 472.38 cv
cp
.247059 .262745 .266667 rgb
f
271.774 497.358 mo
271.774 497.358 263.182 490.972 260.519 482.357 cv
257.856 473.743 256.447 471.409 255.116 471.551 cv
253.367 471.736 259.419 486.941 262.708 490.856 cv
265.998 494.772 271.44 498.187 271.774 497.358 cv
cp
.101961 .101961 .101961 rgb
f
287.55 405.638 mo
287.55 405.638 275.592 399.465 273.545 400.004 cv
271.499 400.542 274.407 401.309 277.101 403.134 cv
279.793 404.959 281.732 410.063 282.81 411.066 cv
283.887 412.069 287.55 405.638 287.55 405.638 cv
cp
f
376.414 747.519 mo
365.885 740.854 365.919 740.876 323.8 714.258 cv
323.8 714.258 320.657 720.964 320.248 731.079 cv
319.992 737.398 320.479 750.323 321.625 752.5 cv
322.526 754.211 325.239 755.354 329.054 756.466 cv
330.223 756.349 336.405 756.676 339.785 758.672 cv
339.981 758.796 li
347.692 759.969 359.543 760.893 364.561 760.628 cv
380.474 759.788 382.609 758.451 382.55 753.104 cv
381.61 751.319 379.39 749.402 376.414 747.519 cv
cp
.423529 .305882 .305882 rgb
f
364.572 761.142 mo
373.776 760.656 379.444 759.595 381.838 757.816 cv
383.425 756.638 382.609 755.141 382.53 753.068 cv
379.973 754.178 375.938 755.377 370.35 755.601 cv
362.67 755.907 343.625 754.525 341.781 753.757 cv
339.938 752.989 337.02 748.842 331.337 744.695 cv
327.383 741.81 322.689 738.629 320.196 736.959 cv
320.285 743.327 320.773 750.882 321.625 752.499 cv
322.526 754.211 325.24 755.354 329.054 756.466 cv
332.331 757.317 336.406 756.676 339.785 758.672 cv
339.981 758.796 li
347.692 759.969 359.556 761.406 364.572 761.142 cv
cp
.101961 .101961 .101961 rgb
f
367.275 743.517 mo
366.662 741.158 341.406 729.363 337.857 707.338 cv
335.401 692.094 333.143 673.086 331.164 653.856 cv
320.481 657.055 309.817 660.313 299.052 663.222 cv
306.848 682.99 318.094 710.716 319.194 716.029 cv
320.607 722.849 327.85 732.716 333.711 737.991 cv
337.182 741.114 349.984 747.331 355.787 745.391 cv
366.039 741.964 367.649 744.957 367.275 743.517 cv
cp
.603922 .294118 .156863 rgb
f
244.402 605.358 mo
244.402 605.358 252.937 604.844 260.928 605.91 cv
268.919 606.976 274.779 606.442 276.377 608.041 cv
277.976 609.639 284.368 628.817 287.565 644.268 cv
290.761 659.717 293.425 697.542 294.491 698.607 cv
299.818 703.935 334.564 686.978 334.979 685.821 cv
335.395 684.666 333.333 638.714 333.333 638.714 cv
333.333 638.714 330.723 600.008 320.278 588.028 cv
309.833 576.048 298.775 576.969 298.775 576.969 cv
255.333 596.587 li
244.402 605.358 li
cp
.423529 .305882 .305882 rgb
f
190.072 569.15 mo
190.072 569.15 283.835 532.924 307.276 537.718 cv
330.717 542.513 363.842 620.749 372.585 637.569 cv
372.585 637.569 351.481 677.654 342.971 678.363 cv
341.264 678.506 336.609 672.636 334.934 670.242 cv
332.909 656.88 333.308 631.831 329.309 613.757 cv
325.231 595.325 315.243 582.02 303.214 578.854 cv
303.214 578.854 296.514 577.776 284.968 583.699 cv
264.705 594.093 246.112 613.513 210.05 614.7 cv
180.591 615.67 173.605 585.52 173.605 585.52 cv
190.072 569.15 li
cp
f
333.191 640.582 mo
332.57 630.018 331.682 619.384 329.031 609.105 cv
327.721 604.026 325.98 599.033 323.663 594.322 cv
321.501 589.927 318.864 585.591 315.26 582.224 cv
311.486 578.698 306.77 576.636 301.558 576.781 cv
295.848 576.941 290.568 579.334 285.677 582.097 cv
280.623 584.952 275.654 587.978 270.706 591.012 cv
265.766 594.042 260.829 597.119 256.212 600.631 cv
255.106 601.473 251.225 603.891 250.134 604.752 cv
249.725 605.074 252.132 605.333 252.566 605.056 cv
262.1 598.978 272.805 592.187 282.643 586.623 cv
287.383 583.942 292.177 581.093 297.572 579.979 cv
302.481 578.966 307.402 579.776 311.442 582.813 cv
315.069 585.538 317.657 589.457 319.773 593.405 cv
322.153 597.846 323.983 602.551 325.382 607.387 cv
328.229 617.231 329.366 627.483 330.159 637.67 cv
331.044 649.045 331.653 660.44 332.557 671.814 cv
332.672 673.26 332.759 674.706 332.853 676.152 cv
332.943 677.543 335.111 677.558 335.033 676.152 cv
334.368 664.299 333.887 652.435 333.191 640.582 cv
cp
.290196 .2 .2 rgb
f
352.639 656.32 mo
348.552 662.415 339.979 675.903 342.438 678.363 cv
344.809 680.734 352.996 671.259 358.644 664.044 cv
356.67 661.452 354.662 658.874 352.639 656.32 cv
cp
.101961 .101961 .101961 rgb
f
296.674 578.652 mo
296.688 578.652 li
297.169 578.649 297.504 578.161 297.327 577.714 cv
296.709 576.16 295.205 574.952 293.182 574.57 cv
292.363 574.416 291.682 574.625 290.879 574.65 cv
290.035 574.677 289.297 573.996 289.329 573.152 cv
289.351 572.552 289.583 571.97 289.712 571.388 cv
290.033 569.942 289.769 568.595 288.509 567.7 cv
285.165 565.324 281.247 568.91 278.545 570.645 cv
274.529 573.222 270.392 575.609 266.152 577.799 cv
257.287 582.375 247.963 585.826 238.586 589.185 cv
229.235 592.532 219.706 595.023 209.693 594.824 cv
199.551 594.622 188.936 591.129 183.004 582.407 cv
182.701 581.961 181.974 582.376 182.274 582.833 cv
192.182 597.893 213.387 597.605 228.893 593.433 cv
233.586 592.169 238.149 590.47 242.715 588.816 cv
247.14 587.215 251.558 585.587 255.895 583.76 cv
264.409 580.173 272.596 575.818 280.323 570.754 cv
282.252 569.489 284.709 567.297 287.186 568.193 cv
290.158 569.269 287.782 572.09 288.379 574.197 cv
288.939 576.174 290.513 575.623 292.061 575.55 cv
293.977 575.459 295.454 576.644 296.031 578.208 cv
296.13 578.477 296.388 578.654 296.674 578.652 cv
cp
.290196 .2 .2 rgb
f
256.775 544.689 mo
241.542 550.085 208.94 561.559 193.269 565.421 cv
192.127 565.702 191.67 567.147 192.798 566.939 cv
208.575 564.029 242.214 552.011 257.329 546.696 cv
258.584 546.255 258.042 544.241 256.775 544.689 cv
cp
f
246.906 605.078 mo
233.198 602.921 207.892 593.682 177.866 595.918 cv
178.366 600.226 178.369 608.189 179.394 612.396 cv
182.492 613.849 186.108 614.646 188.986 615.387 cv
196.528 617.325 204.228 618.547 212.024 618.42 cv
219.246 618.302 226.716 617.765 233.491 615.074 cv
235.99 614.082 238.401 612.886 240.838 611.749 cv
243.668 609.729 246.448 607.646 249.075 605.364 cv
248.308 605.279 247.581 605.185 246.906 605.078 cv
cp
.988235 .980392 .980392 rgb
f
424.392 678.936 mo
419.473 679.466 388.344 673.825 378.933 654.304 cv
375.841 647.889 373.677 643.12 370.987 637.202 cv
368.809 639.738 361.396 643.631 352.51 656.162 cv
357.763 662.788 362.916 669.584 367.636 676.317 cv
370.546 680.468 372.739 684.698 374.364 688.444 cv
374.364 688.441 li
378.643 689.259 384.906 693.201 389.322 692.869 cv
400.365 692.039 409.264 689.508 410.266 689.386 cv
428.304 687.188 423.052 679.83 424.392 678.936 cv
cp
.603922 .294118 .156863 rgb
f
386.42 718.653 mo
389.419 719.908 397.621 716.355 397.806 714.941 cv
397.991 713.527 389.975 703.755 390.86 703.583 cv
397.969 702.204 418.91 700.483 427.534 698.81 cv
437.272 696.92 452.435 680.933 453.289 680.032 cv
453.776 679.515 452.797 677.215 451.077 675.238 cv
449.788 673.752 448.078 672.444 446.259 672.209 cv
442.851 671.764 429.066 678.301 421.812 678.79 cv
422.151 690.951 389.343 691.305 374.364 688.441 cv
374.364 688.441 375.093 696.046 377.032 702.841 cv
378.715 708.771 385.021 718.07 386.42 718.653 cv
cp
.423529 .305882 .305882 rgb
f
386.487 720.166 mo
388.63 721.203 399.011 716.412 399.196 714.998 cv
399.381 713.584 419.109 702.741 428.848 700.852 cv
438.587 698.962 452.692 682.261 453.546 681.36 cv
454.034 680.843 453.216 677.29 451.077 675.238 cv
447.612 678.686 439.935 688.36 429.602 692.896 cv
417.136 698.37 401.738 693.334 377.032 702.841 cv
378.715 708.771 385.123 719.506 386.487 720.166 cv
cp
.101961 .101961 .101961 rgb
f
466.734 445.396 mo
464.488 434.104 li
464.488 434.104 464.891 432.976 468.236 432.705 cv
471.581 432.435 481.274 434.3 486.016 435.571 cv
490.758 436.842 494.902 440.376 494.902 440.376 cv
494.902 440.376 495.926 451.48 495.711 456.285 cv
495.495 461.089 490.54 472.721 478.691 467.174 cv
466.841 461.627 466.734 445.396 466.734 445.396 cv
cp
.141176 .364706 .501961 rgb
f
523.932 382.988 mo
520.931 379.489 516.059 377.825 511.545 378.588 cv
511.317 374.11 510.178 368.857 506.375 366.565 cv
503.207 364.656 499.861 364.738 497.101 365.436 cv
495.185 363.836 493.01 362.405 490.56 361.349 cv
481.366 357.383 475.465 362.654 473.286 365.208 cv
472.748 364.676 472.162 364.193 471.499 363.794 cv
469.195 362.411 466.39 362.117 463.762 362.387 cv
463.225 362.442 462.762 362.808 462.762 363.387 cv
462.762 363.885 463.222 364.443 463.762 364.387 cv
466.05 364.152 468.474 364.311 470.489 365.521 cv
470.872 365.752 471.219 366.023 471.549 366.313 cv
468.855 365.891 459.887 365.029 454.489 371.051 cv
449.846 376.232 451.116 381.814 452.167 384.495 cv
449.573 385.021 447.071 386.519 445.097 388.076 cv
442.177 390.38 439.976 393.473 438.672 396.948 cv
438.219 398.154 440.151 398.675 440.6 397.479 cv
441.727 394.479 443.669 391.837 446.133 389.796 cv
447.641 388.547 449.657 387.234 451.747 386.628 cv
449.297 387.825 443.72 391.35 441.829 399.322 cv
439.379 409.646 455.747 416.485 455.747 416.485 cv
455.747 416.485 452.117 425.889 461.053 430.394 cv
469.989 434.897 483.572 426.802 483.572 426.802 cv
502.396 428.583 li
502.396 428.583 512.616 425.11 518.136 415.825 cv
523.657 406.54 518.488 401.689 518.488 401.689 cv
518.488 401.689 524.246 393.888 521.948 386.229 cv
520.859 382.599 517.65 381.061 514.576 380.447 cv
517.593 380.663 520.501 382.051 522.518 384.402 cv
523.357 385.381 524.766 383.961 523.932 382.988 cv
cp
.156863 .184314 .286275 rgb
f
467.962 444.845 mo
462.641 438.683 li
462.641 438.683 466.817 437.549 467.805 433.244 cv
468.793 428.938 469.319 415.954 469.319 415.954 cv
469.319 415.954 487.085 426.314 487.791 426.879 cv
487.791 426.879 487.288 441.357 495.28 444.607 cv
496.22 448.229 498.312 462.49 495.418 463.901 cv
492.524 465.313 473.044 455.785 467.962 444.845 cv
cp
.901961 .568627 .419608 rgb
f
470.45 416.613 mo
470.494 418.903 470.485 421.189 470.807 423.484 cv
471.563 428.871 473.834 434.422 478.228 437.845 cv
480.391 439.528 483.096 440.558 485.822 440.776 cv
487.487 440.91 489.012 440.619 490.56 440.146 cv
487.523 434.709 487.791 426.879 487.791 426.879 cv
487.193 426.4 474.369 418.902 470.45 416.613 cv
cp
.101961 .101961 .101961 rgb
f
431.429 596.128 mo
431.429 596.128 424.501 594.663 421.405 587.136 cv
418.309 579.608 424.205 560.518 426.417 551.487 cv
428.628 542.458 422.551 540.395 425.977 536.008 cv
429.402 531.622 432.699 529.301 430.277 524.398 cv
427.855 519.497 435.078 518.207 435.336 514.079 cv
435.594 509.951 426.229 501.359 421.923 477.676 cv
419.334 463.438 428.821 447.922 443.044 443.375 cv
449.168 441.417 454.652 440.054 459.105 438.344 cv
461.845 437.291 464.488 434.104 464.488 434.104 cv
464.488 434.104 469.923 442.013 476.693 449.419 cv
481.29 454.446 487.322 459.369 489.513 460.934 cv
494.931 464.804 494.902 440.376 494.902 440.376 cv
494.902 440.376 496.737 443.391 497.769 444.681 cv
498.801 445.971 514.104 453.745 517.523 459.642 cv
527.521 471.956 531.557 507.074 532.846 511.976 cv
533.711 515.263 525.837 520.538 518.488 516.491 cv
514.878 514.503 509.315 503.306 508.466 505.005 cv
505.886 510.165 506.024 526.463 506.024 528.526 cv
506.024 530.591 431.429 596.128 431.429 596.128 cv
cp
.372549 .478431 .682353 rgb
f
487.288 538.861 mo
434.557 505.508 li
434.557 505.508 436.831 520.669 451.486 538.861 cv
466.142 557.055 487.288 538.861 487.288 538.861 cv
cp
.101961 .101961 .101961 rgb
f
437.255 445.961 mo
447.588 452.139 453.462 466.703 453.524 466.858 cv
453.602 467.055 453.791 467.174 453.989 467.174 cv
454.173 467.139 li
454.43 467.037 454.556 466.746 454.454 466.489 cv
454.201 465.85 448.551 451.851 438.243 445.396 cv
437.905 445.578 437.577 445.768 437.255 445.961 cv
cp
.215686 .419608 .545098 rgb
f
503.98 465.459 mo
503.982 465.734 504.206 465.955 504.48 465.955 cv
504.484 465.955 li
504.76 465.953 504.982 465.728 504.98 465.451 cv
504.979 465.348 504.855 455.722 501.363 447.262 cv
500.801 446.882 500.276 446.531 499.811 446.219 cv
503.84 454.785 503.979 465.352 503.98 465.459 cv
cp
f
497.964 444.871 mo
497.8 448.856 497.404 451.998 496.606 456.238 cv
495.835 460.332 494.633 465.178 492.158 466.311 cv
491.096 466.799 489.849 466.61 488.348 465.739 cv
477.488 459.435 466.287 444.1 461.457 436.976 cv
461.324 437.075 461.19 437.174 461.053 437.271 cv
465.912 444.434 477.163 459.823 488.097 466.171 cv
489.127 466.77 490.081 467.069 490.947 467.069 cv
491.45 467.069 491.924 466.968 492.366 466.766 cv
494.489 465.794 495.903 462.673 497.097 456.33 cv
497.876 452.194 498.274 449.104 498.448 445.269 cv
498.246 445.117 498.089 444.986 497.964 444.871 cv
cp
f
510.447 395.728 mo
507.134 387.226 499.951 387.952 493.304 391.133 cv
491.121 392.975 489.007 395.065 488.314 396.737 cv
486.703 400.622 481.697 400.527 480.504 402.043 cv
479.312 403.559 476.091 409.769 474.764 405.951 cv
474.753 405.901 li
474.671 405.518 474.047 402.798 472.606 400.699 cv
470.727 397.961 466.15 398.917 464.37 403.061 cv
460.732 411.521 468.644 413.47 468.644 413.47 cv
469.395 417 469.007 417.763 470.064 420.74 cv
473.236 429.673 482.86 436.944 490.685 436.976 cv
506.41 437.039 509.522 411.239 510.577 407.808 cv
511.966 403.293 510.447 395.728 510.447 395.728 cv
cp
.901961 .568627 .419608 rgb
f
511.624 396.052 mo
511.299 392.433 509.163 389.083 505.943 387.363 cv
505.427 387.087 504.947 387.304 504.672 387.668 cv
503.638 386.876 502.379 386.354 501.057 386.507 cv
500.521 386.569 500.057 386.922 500.057 387.507 cv
500.057 388 500.517 388.57 501.057 388.507 cv
503.316 388.245 505.012 390.619 505.99 392.354 cv
506.835 393.854 507.287 396.277 505.508 397.33 cv
504.401 397.985 505.407 399.715 506.518 399.057 cv
509.143 397.503 509.141 394.108 507.89 391.668 cv
507.859 391.613 li
508.68 392.708 509.257 393.987 509.524 395.361 cv
509.768 396.617 509.761 398.084 509.212 399.263 cv
508.725 400.312 507.485 401.236 506.341 400.549 cv
505.235 399.885 504.228 401.614 505.332 402.276 cv
506.91 403.224 508.985 402.738 510.182 401.395 cv
511.453 399.967 511.791 397.902 511.624 396.052 cv
cp
.156863 .184314 .286275 rgb
f
499.811 428.161 mo
491.333 424.781 li
491.333 424.781 491.42 430.51 493.637 431.398 cv
495.855 432.288 499.811 428.161 499.811 428.161 cv
cp
1 1 1 rgb
f
509.638 416.538 mo
509.665 416.279 li
509.658 416.105 509.611 415.942 509.522 415.793 cv
509.31 415.355 508.933 415.001 508.522 414.752 cv
508.109 414.502 507.172 414.064 506.699 413.981 cv
506.097 413.875 505.672 414.09 505.458 414.338 cv
505.295 414.525 505.21 414.848 505.229 415.1 cv
505.247 415.354 505.266 415.709 505.776 415.942 cv
506.021 416.054 507.251 416.342 508.077 417.106 cv
508.18 417.197 508.299 417.255 508.436 417.282 cv
508.67 417.338 508.977 417.301 509.181 417.165 cv
509.399 417.021 509.588 416.804 509.638 416.538 cv
cp
.101961 .101961 .101961 rgb
f
494.626 412.01 mo
494.456 411.789 494.254 411.688 493.991 411.604 cv
492.427 411.102 490.732 411.369 489.314 412.151 cv
489.108 412.265 488.948 412.567 488.908 412.787 cv
488.863 413.031 488.92 413.347 489.075 413.546 cv
489.231 413.747 489.452 413.916 489.711 413.952 cv
489.99 413.99 491.552 413.433 493.629 413.571 cv
493.869 413.588 494.203 413.535 494.388 413.404 cv
494.585 413.265 494.761 413.011 494.794 412.769 cv
494.83 412.508 494.792 412.223 494.626 412.01 cv
cp
f
501.281 420.794 mo
501.314 420.291 500.924 419.89 500.43 419.935 cv
499.944 419.979 499.459 420.023 498.973 420.068 cv
498.481 420.113 498.035 420.569 498.002 421.077 cv
497.97 421.579 498.359 421.981 498.853 421.937 cv
499.339 421.892 499.825 421.848 500.311 421.803 cv
500.803 421.758 501.248 421.301 501.281 420.794 cv
cp
.792157 .364706 .298039 rgb
f
514.662 434.97 mo
514.662 434.97 514.593 430.592 516.03 430.523 cv
517.466 430.455 519.145 433.101 518.032 434.72 cv
516.919 436.338 514.662 434.97 514.662 434.97 cv
cp
.909804 .266667 .313726 rgb
f
509.666 443.852 mo
509.666 443.852 502.316 439.237 501.793 435.836 cv
501.27 432.436 505.063 435.052 508.202 434.79 cv
511.341 434.528 512.91 434.201 514.349 434.104 cv
515.788 434.005 516.834 434.79 516.834 434.79 cv
516.834 434.79 521.412 430.081 528.475 427.204 cv
535.538 424.326 543.778 423.934 546.263 429.819 cv
548.748 435.705 549.141 442.507 534.361 447.738 cv
519.581 452.971 512.7 447.98 509.666 443.852 cv
cp
.247059 .262745 .266667 rgb
f
502.431 436.161 mo
501.744 436.209 501.271 434.624 501.744 434.104 cv
502.217 433.583 503.17 433.903 503.933 434.239 cv
504.308 434.405 503.178 436.109 502.431 436.161 cv
cp
.909804 .266667 .313726 rgb
f
514.346 439.772 mo
514.077 439.604 514.005 439.25 514.184 438.987 cv
514.816 438.059 516.331 436.108 517.845 436.213 cv
519.829 436.351 520.513 438.744 519.418 440.66 cv
518.542 442.193 515.518 440.507 514.346 439.772 cv
cp
f
512.542 436.774 mo
512.543 436.766 li
512.544 436.695 li
512.511 436.494 li
512.463 436.361 512.407 436.261 512.31 436.156 cv
512.16 436.034 li
512.088 435.991 li
511.907 435.917 li
511.705 435.886 li
511.625 435.884 li
511.418 435.915 li
511.163 435.987 510.94 436.185 510.875 436.447 cv
510.852 436.604 li
510.849 436.638 li
510.873 436.837 li
510.892 436.903 li
510.975 437.085 li
511.052 437.209 511.137 437.29 511.256 437.373 cv
511.314 437.399 li
511.542 437.52 li
511.736 437.551 li
511.772 437.552 li
511.937 437.53 li
512.046 437.487 li
512.229 437.456 li
512.45 437.327 li
512.553 437.167 li
512.596 436.974 li
512.542 436.774 li
cp
.101961 .101961 .101961 rgb
f
521.959 465.994 mo
521.959 465.994 519.162 471.21 518.488 476.938 cv
517.813 482.668 518.131 490.331 519.263 491.606 cv
520.395 492.882 519.134 497.016 518.488 500.136 cv
517.841 503.256 519.203 505.668 520.735 507.785 cv
522.267 509.902 536.254 504.967 543.218 502.243 cv
550.182 499.52 547.118 491.272 545.246 478.631 cv
543.373 465.988 538.071 458.805 534.182 458.328 cv
525.839 457.306 521.959 465.994 521.959 465.994 cv
cp
.372549 .478431 .682353 rgb
f
523.027 468.149 mo
523.027 468.149 520.517 477.439 525.621 478.46 cv
529.594 479.255 533.138 477.254 535.366 472.706 cv
537.593 468.159 537.231 462.405 535.93 460.949 cv
535.459 460.422 523.027 468.149 523.027 468.149 cv
cp
.101961 .101961 .101961 rgb
f
524.29 454.409 mo
524.29 454.409 522.842 467.097 522.978 470.497 cv
523.112 473.897 528.083 475.205 530.96 473.112 cv
533.837 471.02 536.061 462.519 535.93 460.949 cv
535.799 459.379 534.753 452.447 534.753 452.447 cv
534.753 452.447 546.132 445.776 547.048 444.861 cv
547.963 443.945 549.533 439.871 550.317 438.9 cv
551.103 437.929 551.495 435.313 551.495 432.959 cv
551.495 430.604 550.579 427.073 550.187 426.026 cv
549.794 424.98 547.963 426.288 547.702 428.904 cv
547.702 428.904 545.55 425.635 544.271 426.55 cv
542.993 427.466 543.442 429.559 543.218 431.259 cv
542.993 432.959 541.031 431.521 540.247 432.566 cv
539.461 433.613 539.069 441.199 538.938 442.245 cv
538.808 443.292 525.336 450.616 524.29 454.409 cv
cp
.901961 .568627 .419608 rgb
f
547.702 428.904 mo
547.702 428.904 550.463 432.681 549.838 439.667 cv
549.132 447.566 548.417 459.989 550.866 463.014 cv
553.756 466.584 557.605 463.532 558.021 463.014 cv
558.021 463.014 552.564 464.29 551.695 460.836 cv
550.94 457.837 550.708 450.26 551.513 443.002 cv
552.317 435.743 551.907 435.588 551.492 432.681 cv
551.077 429.773 548.407 425.978 546.169 427.147 cv
546.169 427.147 546.739 427.393 547.702 428.904 cv
cp
.909804 .266667 .313726 rgb
f
521.407 466.383 mo
520.323 468.998 515.825 480.774 515.823 483.607 cv
515.822 484.921 515.951 486.235 516.184 487.527 cv
516.436 488.928 516.992 490.227 517.296 491.606 cv
517.619 493.073 516.812 494.313 516.339 495.647 cv
515.9 496.889 515.658 498.2 515.58 499.514 cv
515.423 502.163 516.059 504.787 517.294 507.123 cv
517.896 508.262 519.624 507.252 519.021 506.114 cv
517.801 503.807 517.298 501.152 517.672 498.559 cv
518.019 496.153 519.737 493.945 519.307 491.47 cv
519.091 490.235 518.559 489.067 518.283 487.842 cv
517.986 486.521 517.838 485.177 517.825 483.824 cv
517.799 481.081 520.66 470.675 521.709 468.146 cv
522.201 466.957 521.894 465.209 521.407 466.383 cv
cp
.215686 .419608 .545098 rgb
f
494.159 462.7 mo
494.159 462.7 490.979 462.953 487.985 467.188 cv
484.99 471.422 474.214 487.101 467.628 492.371 cv
467.628 492.371 453.841 477.47 449.075 468.495 cv
444.309 459.52 446.713 456.962 443.139 452.707 cv
439.564 448.452 425.754 445.123 425.414 471.382 cv
425.073 497.641 428.787 503.334 439.34 515.589 cv
439.861 516.194 440.403 516.816 440.962 517.452 cv
442.21 518.869 443.548 520.353 444.95 521.854 cv
446.654 523.679 448.452 525.53 450.294 527.323 cv
460.026 536.787 471.015 544.593 476.113 538.078 cv
483.328 528.859 508.309 492.563 511.373 483.19 cv
514.437 473.817 513.385 472.193 509.06 468.495 cv
504.735 464.796 494.159 462.7 494.159 462.7 cv
cp
.372549 .478431 .682353 rgb
f
508.162 475.146 mo
508.162 475.146 511.111 476.047 511.962 474.563 cv
512.814 473.077 509.38 469.087 507.153 468.53 cv
504.926 467.974 506.386 474.153 508.162 475.146 cv
cp
.101961 .101961 .101961 rgb
f
494.159 462.7 mo
494.159 462.7 499.605 453.698 500.382 450.143 cv
501.161 446.586 502.828 446.586 505.717 444.363 cv
508.606 442.141 509.495 439.362 511.496 439.585 cv
513.496 439.807 514.385 441.252 513.496 443.585 cv
512.607 445.919 511.829 447.697 513.051 447.253 cv
514.274 446.808 528.054 440.74 531.61 439.852 cv
535.167 438.962 536.021 440.39 536.021 440.39 cv
536.021 440.39 540.63 439.036 542.297 439.604 cv
543.964 440.173 542.955 441.413 542.461 442.317 cv
541.555 443.979 539.42 444.537 538.68 446.263 cv
538.343 447.049 533.37 449.377 528.25 452.035 cv
522.966 454.777 517.302 457.732 515.497 459.144 cv
511.94 461.922 508.162 475.146 508.162 475.146 cv
508.162 475.146 490.937 468.396 494.159 462.7 cv
cp
.901961 .568627 .419608 rgb
f
542.645 439.349 mo
542.054 438.86 541.218 438.728 540.565 439.167 cv
540.034 439.524 540.534 440.392 541.07 440.031 cv
541.446 439.777 541.891 439.925 542.16 440.273 cv
542.494 440.706 542.366 441.311 542.139 441.764 cv
541.7 442.642 540.822 443.191 540.129 443.85 cv
539.434 444.512 538.905 445.313 538.29 446.044 cv
537.597 446.868 536.775 447.455 535.833 447.97 cv
531.672 450.242 527.428 452.375 523.228 454.574 cv
522.657 454.872 523.162 455.736 523.732 455.438 cv
527.712 453.354 531.694 451.273 535.672 449.187 cv
536.504 448.75 537.329 448.305 538.056 447.703 cv
538.773 447.109 539.31 446.351 539.884 445.626 cv
540.469 444.887 541.148 444.298 541.845 443.669 cv
542.468 443.107 543.039 442.442 543.264 441.614 cv
543.486 440.795 543.316 439.904 542.645 439.349 cv
cp
.858824 .501961 .360784 rgb
f
489.114 465.517 mo
482.918 474.824 475.772 483.461 467.825 491.306 cv
457.692 480.811 453.482 475.333 446.794 461.992 cv
446.217 460.841 444.491 461.853 445.067 463.001 cv
451.822 476.476 456.362 482.418 466.38 492.692 cv
464.335 494.664 462.253 496.599 460.105 498.464 cv
459.132 499.309 460.551 500.719 461.52 499.878 cv
472.741 490.134 482.605 478.896 490.841 466.526 cv
491.556 465.452 489.824 464.449 489.114 465.517 cv
cp
.215686 .419608 .545098 rgb
f
511.515 477.039 mo
505.575 493.889 494.796 509.991 484.26 524.248 cv
481.24 528.334 478.357 532.651 474.692 536.195 cv
473.765 537.092 475.18 538.505 476.106 537.609 cv
479.37 534.454 481.97 530.675 484.665 527.043 cv
487.359 523.412 490.037 519.769 492.642 516.073 cv
497.874 508.652 502.829 501.007 506.953 492.907 cv
509.263 488.37 511.181 482.478 512.874 477.676 cv
513.302 476.459 511.94 475.831 511.515 477.039 cv
cp
f
527.197 689.754 mo
527.197 689.754 526.367 683.682 526.485 681.457 cv
526.859 674.414 548.792 677.461 553.203 678.107 cv
557.613 678.754 557.244 699.247 559.252 704.278 cv
564.007 716.19 563.919 718.028 577.827 724.576 cv
590.643 730.611 593.355 728.772 596.495 732.491 cv
599.634 736.21 599.658 740.218 598.635 742.065 cv
597.612 743.914 586.157 743.855 576.678 743.598 cv
559.374 743.128 556.938 741.985 544.125 742.321 cv
539.907 742.432 526.338 743.998 525.692 740.784 cv
525.045 737.57 527.362 712.477 527.597 709.184 cv
527.831 705.892 527.197 689.754 527.197 689.754 cv
cp
.901961 .568627 .419608 rgb
f
577.986 723.507 mo
568.335 718.963 563.994 713.273 560.996 707.461 cv
558.765 707.124 555.946 706.9 554.372 707.913 cv
551.989 709.445 554.031 715.743 552.329 716.764 cv
550.883 717.632 533.25 712.652 527.689 709.253 cv
527.418 712.782 523.938 738.063 524.58 741.258 cv
525.227 744.472 540.246 743.598 544.463 743.487 cv
557.277 743.151 559.503 744.069 576.807 744.539 cv
586.286 744.797 598.046 744.484 599.07 742.637 cv
600.093 740.788 600.677 735.769 597.538 732.05 cv
594.398 728.331 590.803 729.542 577.986 723.507 cv
cp
.372549 .478431 .682353 rgb
f
594.7 741.445 mo
589.819 741.61 574.967 742.296 564.414 741.104 cv
553.861 739.913 549.095 736.509 539.223 736.849 cv
532.59 737.078 527.392 736.615 524.687 736.287 cv
524.5 738.721 524.437 740.543 524.58 741.258 cv
525.227 744.472 540.246 743.598 544.463 743.487 cv
557.277 743.151 559.503 744.069 576.807 744.539 cv
586.286 744.797 598.046 744.484 599.07 742.637 cv
599.317 742.188 599.538 741.552 599.688 740.795 cv
598.381 741.096 596.739 741.376 594.7 741.445 cv
cp
1 1 1 rgb
f
560.714 728.151 mo
558.258 724.19 555.803 720.229 553.347 716.267 cv
552.67 715.175 550.939 716.178 551.62 717.276 cv
554.076 721.237 556.532 725.199 558.987 729.161 cv
559.664 730.253 561.395 729.25 560.714 728.151 cv
cp
.215686 .419608 .545098 rgb
f
431.429 596.128 mo
510.893 596.128 li
510.893 596.128 515.614 660.797 519.391 667.848 cv
523.168 674.897 523.168 676.156 523.42 680.941 cv
523.671 685.726 524.49 689.114 527.197 689.754 cv
531.216 690.703 551.928 689.886 556.461 687.62 cv
560.993 685.354 556.658 672.883 559.428 669.609 cv
562.197 666.336 564.716 659.604 563.708 651.891 cv
562.701 644.178 561.946 588.833 561.946 588.833 cv
561.946 588.833 575.449 609.091 579.226 611.86 cv
583.003 614.63 585.026 614.565 589.792 621.374 cv
592.838 625.726 596.761 625.348 596.761 625.348 cv
596.761 625.348 603.236 625.392 613.027 619.378 cv
619.843 615.191 621.879 608.549 621.89 607.017 cv
621.908 604.545 621.063 600.242 617.538 594.954 cv
614.013 589.666 615.396 585.872 613.976 580.637 cv
610.21 566.756 591.659 552.573 583.349 535.199 cv
575.04 517.824 564.055 498.811 554.392 497.68 cv
528.163 494.612 462.483 534.947 445.36 549.804 cv
428.238 564.66 424.154 585.854 431.429 596.128 cv
cp
.941176 .537255 .501961 rgb
f
508.012 583.344 mo
508.013 586.616 508.723 593.151 509.119 596.128 cv
510.893 596.128 li
510.893 596.128 510.044 588.497 509.436 583.06 cv
509.319 582.013 508.012 582.297 508.012 583.344 cv
cp
.862745 .439216 .403922 rgb
f
569.548 598.927 mo
562.806 590.284 556.942 580.958 552.067 571.141 cv
549.626 566.225 547.568 561.128 545.104 556.224 cv
542.811 551.661 540.042 547.389 536.663 543.553 cv
533.029 539.428 528.776 535.873 524.105 532.978 cv
523.008 532.298 522.003 534.027 523.096 534.705 cv
526.69 536.933 529.94 539.573 532.867 542.525 cv
526.5 541.984 520.2 540.89 514.02 539.249 cv
512.775 538.919 512.244 540.848 513.488 541.178 cv
517.33 542.197 521.221 543.002 525.145 543.606 cv
504.978 553.19 503.22 578.837 492.653 596.128 cv
495.049 596.128 li
502.291 583.484 505.129 567.572 513.776 555.888 cv
517.22 551.234 521.657 547.178 527.038 544.908 cv
527.468 544.727 528.078 544.392 528.833 544.113 cv
531.121 544.412 532.278 544.505 534.583 544.664 cv
534.69 544.672 534.775 544.646 534.864 544.627 cv
538.076 548.229 540.825 552.249 543.06 556.609 cv
545.567 561.499 547.617 566.608 550.039 571.539 cv
552.408 576.361 555.015 581.065 557.847 585.63 cv
561.004 590.72 564.451 595.62 568.134 600.342 cv
568.925 601.355 570.332 599.931 569.548 598.927 cv
cp
f
553.47 674.952 mo
553.74 674.893 553.911 674.626 553.851 674.356 cv
553.792 674.087 553.523 673.917 553.255 673.976 cv
553.084 674.014 538.615 677.128 522.808 675.559 cv
522.896 675.905 522.974 676.245 523.035 676.584 cv
526.129 676.878 529.168 676.998 532.058 676.998 cv
543.968 676.998 553.333 674.982 553.47 674.952 cv
cp
f
615.604 590.912 mo
611.638 590.578 607.697 590.834 600.798 593.884 cv
595.349 596.293 591.132 600.598 588.264 606.678 cv
588.174 606.868 588.11 607.01 588.064 607.094 cv
587.987 607.188 li
587.837 607.419 587.904 607.729 588.136 607.878 cv
588.218 607.931 588.317 607.959 588.415 607.959 cv
588.553 607.939 li
588.809 607.867 588.878 607.72 589.168 607.105 cv
591.931 601.248 595.98 597.107 601.202 594.798 cv
608.092 591.752 611.941 591.581 615.902 591.945 cv
615.783 591.597 615.687 591.253 615.604 590.912 cv
cp
f
597.706 623.515 mo
597.706 623.515 592.756 624.785 592.627 620.271 cv
592.498 615.756 596.255 610.21 604.244 605.437 cv
612.233 600.664 618.619 603.539 619.572 604.699 cv
621.217 606.701 620.523 608.724 619.157 611.045 cv
617.791 613.367 597.706 623.515 597.706 623.515 cv
cp
.101961 .101961 .101961 rgb
f
595.603 623.443 mo
595.603 623.443 592.747 620.187 596.928 614.507 cv
602.034 607.572 611.351 603.706 616.206 604.699 cv
620.573 605.593 624.304 617.483 627.271 622.016 cv
634.296 632.747 640.201 637.813 653.624 644.957 cv
666.13 651.612 672.286 647.555 676.101 650.576 cv
679.916 653.598 679.663 657.985 679.027 660 cv
678.392 662.015 673.104 664.226 656.785 665.736 cv
640.465 667.247 630.843 667.696 626.815 668.956 cv
622.789 670.215 606.781 669.812 605.509 666.79 cv
604.238 663.769 604.003 641.617 603.579 638.344 cv
603.155 635.07 595.603 623.443 595.603 623.443 cv
cp
.901961 .568627 .419608 rgb
f
680.146 660.054 mo
680.782 658.039 680.358 653.003 676.543 649.981 cv
672.729 646.96 666.789 649.879 653.86 644.087 cv
645.565 640.371 637.53 632.101 633.18 627.899 cv
628.468 624.177 615.949 629.84 615.653 630.729 cv
615.181 632.148 623.46 639.363 620.858 639.955 cv
618.256 640.547 616.204 640.587 609.816 639.167 cv
606.972 638.535 604.788 638.35 603.236 638.337 cv
603.656 641.726 603.66 664.497 604.928 667.509 cv
606.2 670.53 622.943 671.034 626.97 669.775 cv
630.997 668.517 640.534 668.265 656.854 666.754 cv
673.174 665.243 679.511 662.067 680.146 660.054 cv
cp
.372549 .478431 .682353 rgb
f
660.688 658.754 mo
654.301 659.436 641.991 659.513 637.496 659.158 cv
633.001 658.803 622 657.146 610.881 660.459 cv
607.997 661.318 605.85 662.145 604.244 662.898 cv
604.421 665.14 604.642 666.83 604.928 667.509 cv
606.2 670.53 622.943 671.034 626.97 669.775 cv
630.997 668.517 640.534 668.265 656.854 666.754 cv
673.174 665.243 679.511 662.067 680.146 660.054 cv
680.391 659.279 680.476 658.058 680.274 656.677 cv
675.52 655.421 666.528 658.132 660.688 658.754 cv
cp
1 1 1 rgb
f
659.164 661.313 mo
650.475 662.571 632.877 664.104 629.063 664.104 cv
625.247 664.104 618.068 663.984 610.015 665.747 cv
607.508 666.295 605.947 666.955 604.984 667.604 cv
606.565 670.54 622.986 671.021 626.97 669.775 cv
630.997 668.517 640.534 668.265 656.854 666.754 cv
672.298 665.324 678.662 662.414 679.979 660.389 cv
680.035 660.276 680.106 660.148 680.146 660.054 cv
680.175 659.964 680.198 659.861 680.222 659.761 cv
680.473 657.242 667.551 660.098 659.164 661.313 cv
cp
.101961 .101961 .101961 rgb
f
630.396 650.231 mo
627.652 646.598 624.813 643.037 621.877 639.558 cv
621.528 639.145 620.822 639.198 620.463 639.558 cv
620.054 639.967 620.113 640.558 620.463 640.972 cv
623.29 644.321 626.028 647.743 628.669 651.241 cv
628.994 651.672 629.532 651.896 630.037 651.601 cv
630.461 651.352 630.724 650.665 630.396 650.231 cv
cp
.215686 .419608 .545098 rgb
f
384.414 569.531 mo
386.324 569.531 li
419.492 569.531 li
424.542 569.531 li
457.71 569.531 li
459.62 569.531 li
459.62 569.531 459.72 564.869 459.021 563.271 cv
458.724 562.593 458.065 562.258 457.406 562.096 cv
456.724 554.815 454.585 544.581 447.978 542.935 cv
424.542 542.935 li
419.492 542.935 li
396.056 542.935 li
389.449 544.581 387.31 554.815 386.627 562.096 cv
385.969 562.258 385.31 562.593 385.013 563.271 cv
384.314 564.869 384.414 569.531 384.414 569.531 cv
cp
1 1 1 rgb
f
459.62 569.531 mo
457.71 569.531 li
447.563 569.531 li
447.563 568.407 li
447.563 567.808 447.077 567.322 446.478 567.322 cv
437.641 567.322 li
437.042 567.322 436.556 567.808 436.556 568.407 cv
436.556 569.531 li
424.542 569.531 li
419.492 569.531 li
407.478 569.531 li
407.478 568.407 li
407.478 567.808 406.992 567.322 406.392 567.322 cv
397.556 567.322 li
396.957 567.322 396.471 567.808 396.471 568.407 cv
396.471 569.531 li
386.324 569.531 li
384.414 569.531 li
384.414 569.531 384.314 574.193 385.013 575.79 cv
385.31 576.47 385.969 576.805 386.627 576.967 cv
387.31 584.247 389.449 594.481 396.056 596.128 cv
419.492 596.128 li
424.542 596.128 li
447.978 596.128 li
454.585 594.481 456.724 584.247 457.406 576.967 cv
458.065 576.805 458.724 576.47 459.021 575.79 cv
459.72 574.193 459.62 569.531 459.62 569.531 cv
cp
.745098 .690196 .419608 rgb
f
457.406 576.967 mo
395.752 577.08 li
395.752 577.08 395.022 577.101 395.022 577.699 cv
395.022 578.397 395.609 578.458 395.777 578.46 cv
457.248 578.46 li
457.307 577.952 457.36 577.452 457.406 576.967 cv
cp
.635294 .560784 .258824 rgb
f
453.955 561.478 mo
390.125 561.478 li
390.125 561.478 389.801 561.486 389.784 561.153 cv
389.766 560.82 389.941 560.751 390.555 560.751 cv
391.168 560.751 453.955 560.751 453.955 560.751 cv
453.955 560.751 454.269 560.791 454.351 561.114 cv
454.433 561.437 454.12 561.478 453.955 561.478 cv
cp
.85098 .921569 1 rgb
f
451.817 555.701 mo
451.148 552.931 450.48 550.16 449.812 547.39 cv
449.51 546.14 447.581 546.669 447.883 547.922 cv
448.551 550.692 449.22 553.463 449.888 556.233 cv
450.19 557.483 452.119 556.954 451.817 555.701 cv
cp
.635294 .560784 .258824 rgb
f
445.794 555.701 mo
445.126 552.931 444.458 550.16 443.789 547.39 cv
443.487 546.14 441.558 546.669 441.86 547.922 cv
442.529 550.692 443.197 553.463 443.866 556.233 cv
444.168 557.483 446.097 556.954 445.794 555.701 cv
cp
f
439.772 555.701 mo
439.104 552.931 438.435 550.16 437.767 547.39 cv
437.465 546.14 435.536 546.669 435.838 547.922 cv
436.506 550.692 437.175 553.463 437.844 556.233 cv
438.146 557.483 440.074 556.954 439.772 555.701 cv
cp
f
433.373 555.701 mo
432.705 552.931 432.036 550.16 431.368 547.39 cv
431.066 546.14 429.137 546.669 429.439 547.922 cv
430.108 550.692 430.776 553.463 431.445 556.233 cv
431.747 557.483 433.675 556.954 433.373 555.701 cv
cp
f
394.117 555.701 mo
394.786 552.931 395.454 550.16 396.123 547.39 cv
396.424 546.14 398.354 546.669 398.051 547.922 cv
397.382 550.692 396.714 553.463 396.045 556.233 cv
395.744 557.483 393.815 556.954 394.117 555.701 cv
cp
f
400.139 555.701 mo
400.808 552.931 401.477 550.16 402.145 547.39 cv
402.447 546.14 404.376 546.669 404.073 547.922 cv
403.405 550.692 402.736 553.463 402.068 556.233 cv
401.766 557.483 399.837 556.954 400.139 555.701 cv
cp
f
406.162 555.701 mo
406.83 552.931 407.499 550.16 408.167 547.39 cv
408.469 546.14 410.398 546.669 410.096 547.922 cv
409.427 550.692 408.759 553.463 408.09 556.233 cv
407.789 557.483 405.859 556.954 406.162 555.701 cv
cp
f
412.561 555.701 mo
413.229 552.931 413.897 550.16 414.566 547.39 cv
414.868 546.14 416.797 546.669 416.495 547.922 cv
415.826 550.692 415.158 553.463 414.489 556.233 cv
414.188 557.483 412.258 556.954 412.561 555.701 cv
cp
f
407.56 543.688 mo
407.56 543.688 406.79 540.144 408.98 540.144 cv
411.168 540.144 412.528 540.563 412.978 541.232 cv
413.427 541.9 413.553 543.688 413.553 543.688 cv
407.56 543.688 li
cp
1 1 1 rgb
f
410.192 541.232 mo
410.192 541.232 411.316 541.167 411.427 539.782 cv
411.703 536.32 411.837 531.853 413.151 531.347 cv
414.788 530.718 424.179 530.659 428.642 531.099 cv
429.404 531.174 429.628 532.63 429.754 533.737 cv
429.88 534.845 430.706 542.363 430.706 542.363 cv
430.706 542.363 428.795 543.055 428.586 540.726 cv
428.377 538.396 428.064 533.891 428.001 533.576 cv
427.939 533.262 414.805 533.167 413.827 533.865 cv
413.553 534.062 413.277 537.453 413.151 539.53 cv
413.051 541.176 413.214 542.301 412.018 542.741 cv
410.822 543.182 409.441 542.178 410.192 541.232 cv
cp
.745098 .690196 .419608 rgb
f
429.287 543.688 mo
429.287 543.688 428.517 540.144 430.706 540.144 cv
432.896 540.144 434.254 540.563 434.704 541.232 cv
435.154 541.9 435.279 543.688 435.279 543.688 cv
429.287 543.688 li
cp
1 1 1 rgb
f
494.497 403.723 mo
494.188 403.243 493.63 403.112 493.129 403.363 cv
492.727 403.564 490.985 404.301 490.759 404.382 cv
489.897 404.691 489.018 404.947 488.127 405.155 cv
487.617 405.274 487.267 405.886 487.428 406.386 cv
487.601 406.918 488.112 407.211 488.659 407.084 cv
490.557 406.642 492.396 405.963 494.138 405.091 cv
494.607 404.855 494.776 404.156 494.497 403.723 cv
cp
.156863 .184314 .286275 rgb
f
511.575 410.666 mo
510.745 409.541 510.034 408.333 509.453 407.061 cv
509.355 406.847 509.074 406.661 508.855 406.602 cv
508.616 406.535 508.297 406.565 508.085 406.702 cv
507.592 407.02 507.493 407.56 507.726 408.07 cv
508.307 409.343 509.018 410.551 509.848 411.676 cv
510.008 411.892 510.176 412.061 510.446 412.135 cv
510.685 412.201 511.004 412.171 511.216 412.034 cv
511.632 411.767 511.907 411.116 511.575 410.666 cv
cp
f
447.978 596.128 mo
447.978 596.128 457.084 593.019 473.136 592.65 cv
489.189 592.282 510.893 596.128 510.893 596.128 cv
510.893 596.128 513.807 609.292 489.728 607.214 cv
465.649 605.135 447.978 596.128 447.978 596.128 cv
cp
.988235 .980392 .980392 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 24.3.0%%For: (Pavel Sivak) ()%%Title: (mono_11_veterinary_clinic_4-temp_01.eps)%%CreationDate: 22/11/2021 11:36%%Canvassize: 16383%AI9_DataStream%Gb",Kks?',oCdM5gd;-p+;/:4G&YVk&7lMo?SE`++sDeGcM?^[s0]W7<:scH)sG[8K0k`imcj#jX1EX55G+sa.YUd^/62Z+>&;0:%Xn[V_1R2[nN1'M;Vko#TUUQ)B0^-QagFZFB[2a(TWTIEO`Cb3d?Hj9*NHDR5XZ+g?l#4+)CaXEr=)tRT`H&NcD_+o6jY(6.P?Z=P%[T"kkX7aY@1Zg"m^oV&6qQ`D8W&riDGcQu\[gL*&l<GlV?..g=/pPG7rik$k&t1YO8]VlfVRl;"M])G2nbpKS\shDpAWXf=/Q^7U%9@XAlVk3O!OY4X/`RA(mgm$2rSQ>Bk\J1f#/B@I!!&V3L9=HhTT:u;,-duu9_LE\KGI+@=n6X)8R*EP8mq4>-P3]7_ZQ6WWFF/)M%r>1#1BQd@fXHdkO,'2'fgk6>FYml=l\j,De`!UC[9I!u6*aSFI2eEt_dN8Qq>'="Rr23NlG:iNqQn&m:_U2o-H!'o<XOGU+#;MAV%\TZ=L([E_)V'aU7"XjpGlr4A31364J+^<6CQ//g`?esWg=$J2n8N<d4(:^U").C!s\XiUuK]FR"@'<V4**$?#Sh$+rYT*nBB%aU7%1D@\gdjKrc=D`LI6-QdKfVi_J)rW^6rB63$ZqmF*="g,0.Vk&[,WsCS_uNG5$/7:!OjD9uWR)5Q:W7_WA*OYbKF7>jf+Ffmrlo&[%U.Jgoj7H+0%`GZD6b2m;H0b$sOt2*.b)c@AbU92a7D^F9CZYof=GA%!r%FB4eqCn*Ik;%X>o/!C!.WJ^&8G?m[4GRj/6oS6\XLd;%\+F]HZuTH"Ea?%m?*nY.Cc8q=&>2`/TM7[9kT'e>'a/3(GPI(skqlS?e**2pj%;@l2VBXaB!\XuhUsH_B=$#V0G]$>*uRqYU1\`,%Z=`7h(TfA=r'`-[.@dAB_i4($D(m44`OnQ1870RIJ+3h$_I)(ikTkAlN:7YT`[d^L'?1`$b4oY(H/UF1A@$f?quPqHA"fVn$%JeL%bZq@gg]]VS*LMUE$<tR^>%)mTM`V4MA_(lr3/1MA_Yc_1$WWuUk(g_HK\6\3nQ.CL"Fnf+o>=qoU.C-f<Q<(8TaUqm:jta&$%>3`%ZkBs(FHMt!p:sr&P&]U/+hsgApk(Jl>pu,.*I>o1jXTDJ^M"qaNVNlTUbD_A%;%OT+%g^T4$kqF6)6T,iD<QAB`mKA.3].n?A(EU%\dN[JFW"9E#0]GpKQ@g^d4-,AmOnJ"])2irU7!4M_K2E1g`aj*,/5.8QTd4sTsf,$/#6*6p-lP[\aRT]H?WmJeFX6;6Rm<T!/s6:%U3DA2+g*!&iOEo8l"QRjs56nYU8`X,Ot3))q6=f4gj,0WR<cgb8EX!%4AS.b?KK6%jg4E2A,H*MR?T4m=8>FajE'KaIV.^u)1cm9%j_&'j5'L>pa(YL/4U:HF=848;_b]hqo2BhdG-[Mekh5RZ8nG>taOtZ5hY4`>B*M]$hi)(2ch*_!nX??,[!j<Xm"8R+'tpeWBoeUc%m4Ndhr3e>pdI/r=B<64M5-9=PH/Iu_BD*\=lu)0=ik0b5ml!oY[=R0nPEc)>f#GB9f"ZoR5G<9jq:VAkCVRG>c,'Cu<;XeN773?'%p]%(crX(6NRD>GU\&^qMc)B6F1nXOQ=2l;Z*@BKpdRNgL/rN:qJYB93lOCQ`d@GOKEFTFU(!O!%F6pPrK-'GOpM@Uef\MX*`piW$%4g%#oqoTqUT>l;p>ro_;]>G/#A%[iK09:cn)11SN0:o$KeoN35o20^Fs%;(q%;YQ^Uoqdt7a=('%&p)gVK1k/[i`#a`$uZ84rMWk%EZWYOPXWl0-_gn3=LO^A"6FT;mp69/;Y8PfBdd7S,e\j+E6@lOZ!Ye/DMW\+Oi+,N\NJef+m.TD40NK=k:t`c9+I3X!I3%?dN'D%%92^hP?'0-Hg"2b`AB[f5Nj1t9n%8=%D<]V+m[_UGm]!CKe^AD;1\54)4J+r#m`JAI!ejUsApYpj5UXo?XaA7$7M,9*hRF548KSa<%`@W+a[B]%hGu?bD>J>Hl@&TrU1;gdmcEa%"r>BmIU&#eTBelm-<j=fjcMus#!E7\nmM>j4jh-L]INQ&)_u7H.LeD?B*>eBj95](l%D1)[9S6jHHC0lab](k$BH>W-)GO0:Xa0&,NATdTUke,XcZ-A2cO_X3@(\7G15KPC_kFOE<$=NX].6Cr(N1%e"7nHh(iN2aHU#$,>%3dN=mYi!aua"<ukZR5KRGl+1)kl)Uca84nHO=fqF45Jpa[09.mkdJj1rq?2Ill^YXnH.6HD(jRoom3:X+&%c!N:7(#n[VK9$n[OK%87o'$%eRR8pC?YfWRB<IP]aauIo#>;3#5,IT6Ib$AD:*7YnZ\;mE^6:(KY04oEK14@#)!r]74i0rVPs,\1G)CpP-9,Oo15&*uGge%hlW7--E*fT9WqG7J#AuD19"@%\Ud!Ic'<J5e'XPCN-AM![Pqm?F^b1HIXU`.he-PMGi!C.C(M8<@u\]A]0/P0[dT90\4SW/^3t4l%Ngt2RgT+gI;:@d*NQ^0KE2jp1Fa8hjXsLL:GK!Rq1,dc?LA^JFK^pbZ[YpjJ@@>DaqN$GQ]D-HtQR"^I,@br^8.SKWIN\:B?H,jb%;nf#i?Etq#]:qmR+Kfpu,LY#b+4$cFHV&9`hApY"lF`=6QSRbW#2c1O7s\Nb"q@[iQ#AY[9/C)15RZ27Irr!Kr[T#!QVj?F_EVUV%mK=NYgq"EO4":UKD=bE'=(8%XY?4qi3>i%MeaHV;/,D*=CM;%60/oB/ghc/VU]&N3GnWo.96SISGE1,!TgTrNO*nED4]j&j&pRrb%dMCZT(OJA?5C6`ln%i(]<3GC0NO0%U^rpf&hR/DS"8*"F,&ScB:.`d:M//mgi0oFD+uR_CA@'K-@,NAkJ9<!A&sGah_gWV;Vii<L%,j,C"%F%M+N\<2#9(]E%hHB',kI=[mg*oQJ3"J2`IE*=>H`.b6e:@088.l,eg6g7]O4"[;#7Th!`2g6KC,p$ND`tEJ083br*FHA8%'`E)eL)JFk%G5Q;8n-k^R[DA=%bX#jD1S]t5<5Y+pF;A+WOdL&-k,P(T:I056BL/t8mXBaH7<aa8Z^8PN?$M':MkVK_Cqn`%(8:6%!IS>u8f!fjD$8Q?:!U):8<a&$fI$B(Vb",Bi78/R_VT^072h=dVOPQ+*)gJ/Qu#dqm+OYqMG,CGDo8i9ZOV5F1a+q+^FEsklgEgp%#(0f1P,@`,lkNALaEm+MHhRHe]RhY52ZkR!nN"j*"1&$c7*dtcHste,oXnX6.dJ>p>=F^n9Nn89Q%;=34aq2-CR>L<E=W,V@O0D<%c-1:faiq,a%L1a_91*9.h0NN6<a^hDJQF\+%K(fn+`I5/9.76aXRs^V$X-:]Zb/-_2`Mle[<gnL1<>Wla?me-VRPO=/E_\,g)o0M%gPtV^$N3[ZWAHFge19*%IP3b&R<4<2&W::aPZQ9^_[/H2*PNQFOno"G?p<OXJ:f]1%H$\6dQVUXV"2mk-=aqmCJ,BkKe&a^-)fuA%hN]@BnU\X:+(;=O9>?&#ih(/T]K<Kcn:/1!/5:Bd[a6S-+QilIV:*uU3P+F=8uLI[l;/gTQ.Q-+!XjFD:4]9>d%Q`;3ls';Oh&f^%1T^_ub(l45<k]T'jsiW7eVg]t84u5'K2f^/5q9i4)iiP`"4qX%agsR;YY9XO7m?I(/-4a11EG&I\9E-mr4j7V]r191db+kbSYU1V%_D3?48&ju]&^"f(bu8>^,F[b24l@,N6l!Wp)cp0+%Hb#gVpJOp")&RJO+49T%Nj,(M**+Za<oB+56IKp='YTr,I_MoZEOMJ+gBT'%AAo=G:Tt_.@L:nAD[<C>+k;h8Bn=_%,Mg,=NGU97P$!iIMR\g#Z^R1s4F?ASD$i&kJ>;$]1QT;4Mj0]'K-HCkU1Yh&8$Z/7,QStU%9:BMrg&Wj?M11fXdW%fq&BZPC'[+X@%(^0*j[3Tc@?a$P&B-=6_M"eS$7o!rBhAds=OrSM6*A"QRUnOU+9$Cr)-Xb'=mN_DbI+,7%&"0*Am1"A;+uM.e5G[C$#UB1hA=r4`^"XbdHGq,9?Wg_e"c_POG5,WEY:Z$RT28R'pK\COEh`N%m&Y@&N[h6g/(d6][L;)W6ed<B%\#fmQLE9l_gh1idr`C;d^>;;;k/#bZ7ed4h..adoaFh&eCcD=3,@CE2#ho^?Pm*_^)8j+:BT9tuKGKu^.`+jE:dB=O0sWgL]%,3s%mWj-s`)e+k#5rk9%UKbmGHZFK4R7:[n?O(d^uBOd]Q]B;pudJEU:AN[5ANi-O5hX4@"c_0ld(\ToAEo(m8)Z;r8KM[JQ+]ZhF7F/%P#mSmS0H2-+APO)a\9?"^$gB79G61h2?U.eoU9]8.6qu9kRND2bU_?upbnXT_GeB\@I9ZSmc'QG<>Y8ld5e7oL]#o8CS@rE)Z*I!%BsJFjFJ8uJ0P(,j`JJ?R44n"KYqq-q-La1c=JcbfZ_d:K4u.[!f=JN6)7-c?@9&3]G^=3Z`&'K1HU589(M[e(7tdqBFN*pg2.(B)%Q4fP_'?`am^](n,$KjAQ_lSsQ^d@^-)T?Be_&Ve1Jn$TIc%q!l*V#@A2&3;V;JTb`Ye<DA)PiQuii=,8G=<j,Sg^BCl=#9M=;MVm%4t&<%Nb,O[oS'A-LuOO+%-ne^OX[#F3a*`Z@)J*3E%N?gn)=*uMlZKq8;.Wo+nTBk5YR8Ve(J2+Pa$GdSUg0?5l1@f@ZDkBl)m-4%>]gkr<F(aR!OB_UKueAVbNR0gc<fbQPVaP93c58_j9?0\;l$-tZL0[pr8f$Gng#SL[F&JFO]9c4[t4PRkM*\T5d*,WZ::+m3p'gc%jZ,U^Pa:a'h0Uuq\0l-I3/%*gPN3/+mp7[9]gFm)CZeaF%k"$"$GVCCa@6?#+[qne2qF[>UDZ+`=a0$8K-N"R:bjf335j"r'H`E>%Qu0#>ar\fiZG&RZ5Oafo.F$Z_YOjg.?Y[;p+.'9N(O(M.bVK3pDm)qN=^rJoG3R'P>'9`IkS6q0'Z_1KUg8[/E[T=fV=4>f7\rJ!%d:Jdi7tK[-3K?rNC]WUS.FR'qd%1,X9,['!fnm57*ejA,oL1=Hf$rgO`<0=BC$\r4fG9Td*g(`e<lW_)=Cd'\V:]E)l9JnddK/^6%G>I@k(;9Eg.2YMnCgBFQ*+UBACRj2e?,]8U1'C>+g<HpXH#\NpPOr8MO`=4a@%e'm%)C>r(*^L6S'[WDF_ppDgd'U^a+d[CdO=o=%CA^a=/Sj<+3N.fP[Cb]Zm-\^NQaLh9\hTc`]S?]SDc47=:(lN^!L$2<]R*b?eWn,#^?YTBP^Om<%c1>1\Hb+Lg!:qOR4c[^I7'C`%8Q89'6uC=I$<7M.\`A+nhEB],91"#YLIuYJ!jL$N9+-/>DCr!,=l#!Q)+c7>pI(8\^S[MHF$<,!3oV?s(4()4ga.4h*kbONR>Xd.%Y0JmM>Ji6[e]3ZXV1Z`A[H0-\S4N/"Rb>uknW2QP%e6CT"e?!3&_T63Ju&+gD)uh.bqM:^EWK:^hY]dmrMAY433hAuo`&Z!.5`L]%=sE:**[4jo#S'@VB)cdQ<r;B$bH"`Ub_!EBLa7.M&ZGe<]qWY2LV#Z[#/166LELC<_cM\^7/$l9Hem/_^i5X9JhK_#]#rt&)D%[^%Kd.''Q$*+;\=_/EVg.>CqYJ3^hi(ATc+E=F>(YV`T_fOHaQb_u2F1f*n2L!sK761IF"O(ckU/EhXk5C?1>5XMDc@''i%+9EeOpn&%DM1N0pZp@Moh;Nrht*,N@^B'uj37GsGdg;I9,3sJT%W3UrpbHJ7@,pueQ-OfEa##:9GXWU`Rq5#^0.S)^)%0^]ot,A@4AY+8+0qX%oj")+5bHeJ'"LnWC#nZej]oJ9PDdqS5DHB%HY856ebWjT]0J;)rtNZ,>1[Vfh>$jfI_._AQ:m4\p:\$\qmh$ZPV3g`^GVJ!8a_nb%na1WR<Gsb?@n5'a\T?Ms95QdKR%\18NA:.;6Y3GfDpATIU`8rePcQg?:IN6<pDGdt?+_b!UiYX<l)^JWSX8o"L)FsD4^Rljl`d?j%Dq%>$9E0ZK(?7:n2@XTOF_P<1Li!huA5\/@26tKc^U[tUI(OLKQtS<c<4Q*[1tm/?Nua*p'A`e[i-scm-!0P&GFN<0,BMVM.2itk%DarOp\=Jp8"k)VP<iK6gYd\p]_rFm/LZc3OOmQ-#o!!O0kErnI\"-l/)=7Dt6S9Cng<>l*7,OE_p=n6Rbj([gmG2NN88f;?)7UAb%4`&P0c=2_3].@%Ig'[gYEgMI.rL(K's2gO1I+aI\D@o0\/iLJpptBJg?I+&c+1/PGCGd$,>U<BfrJJGC44j)eV/i89XRPmV.?CBf%jQc[\K!?Q*>!/mplM9G:B]"okD'[Y-6aEa)Bhl?`dV9O:BLWe1d_:&HKlPR$):!b>NI@KBqg,Np.Q;:l$po>gB@1B.1<"`8r:H\&%F0VJpO^=:@O(s$V:U0Xh:E.8m4Sp][?2/S9W"2;b?dfo^7gZ=:Tu-hI$fV,0IJ[.f-1A=]K$#(kMX/5JZ<TK;7:SM%H[6,'PV#t;%j1+eelqaDPX]ujdMGmotP344LS_tB4lS/E?CQtJN^TAB1La\1Qc?8f6V\Y70gf.Q'1kcl_#j30:c9e8'-0&9:KZJY,J@ffm.ocOC%7q`N:e=]tqeoT*0ppI"TPZPVE"s&*k9^gT6+6p:0Lf(pQV95#t:Krh<G3SA+ajoW_>c#N+)U2N`al>n==;K(:_BaE'CICMm\e+;k%FmaV@ZIM&Z2\4AXU+qcg^=P7BA]W:R(&feNJ##87>9q1&*ThG'@pLl/<9V0.Q^q])GZI;Q*:<S"HTjQhqSdO@8%c#LeZ,8(o#6HQ%'G5cZ7JT`ZNf5n7"n@0VRD98qVFXEjE+l(F9NNb2ol#]_\q9U_,-8[c1#FJDlI-;[)IiYB+]^G^n6\Rce"C4iPl0-!a^dTKTq051%.jF7:A-#`+H-73)<O<!,CZBoPC8Eo+Zm+M&Y2]C=<NdXF1KTkAmje?,NZg?aqoXqp>@$`XZuTL^>Bt(,+<hR:M"Xa?@[KrLRaVA5%f+"Nn`D4((Z0E8CiDDQ,#J#/[H%&n47YM.5jql1:-L^Pc`a!EJ'I$P$dgi'A0<Ep&(Y7*&h%F'1("@0[bG&QjDW8[1&kG^P=9Jfm%`bm>J=k\j?=]BM'\uokI=?lZtDJ[+ep_ZF)3o6)kG8o+-\:8l$&1n8L!VLqaN.1aH[H]-AEj:dg,Qm-<@s5iCF89FN]NZsV-'N'#%nHP89aOu158Y"i[`GE6_[70XAp:sYELr`1n+4e,(WjFDQ8::D&leA[4dZ&8(U//,Fbb#uBb2XjJW?-*?BM>B1nXBZeA$+DN3-nH)%eou/aB\]#caP,Xs;:sb5.i^E<]'8e_-B6n"Z!AOd\K)nLhXJMnrGU&p2C'1S%B";"c2U]`GS',tAMUrU?:m,(E5:jiE55(6_VgnG%3?WY%E0DXTX@,GWY!,0[17PWed:1M\Gec:JERis\5mu*D`B`&sNVV@S'dK_^If570[m-CBSljf*T'`+@6r''IGX-$k+qdiQ5Y0(I%&6kZclFBOIoJ\mE0AEMf&#-"pP>n!>\W`uei'E&D7dnkqjUDr_87B%6kNb93M'QeV.S7BZOqM*FLdbi$59rn$W@\!k=Yaoj=o''N%^<,EN2\]h69D++bjDV+@7#q`)!lAMC(,)E"P92pJ'sYY/f<$)fpClE1YXD3EJ(AMGlROhK1Kc>#K+8PU]'E#.fS<`X[uR4LJu]Cd%P-5XG=Xc5KL8%]I2OY>o$%X"kWY*okdPHO4ao,En9^jSJa-_q-9Jj>oEu;ZpBgr:+.gqj,<s0b#qirJDoATmK4,T-hK_US7DQB2b%Bl#qQ?So&eXk1kgrE8064ec9_(@8UMn"c\0qMh+h>UYkY;0e,KO!R.*@E%1&Vk,E'>2qOL-DIfgV9ut_mW6P\;FCZO7c/>&&_*^j%-n;=nHd0p>hJO3rc$hVIU8DUsIO"G%Oo>#5rh?oYi.%M%Om+%7W#Qn:MAZ<MfhE\@mcu6kh2KEuZ/J23-SVb:iQ,"$qtD-nN=&I!%j>8Wg7]i3((\-&H41SN/4i_EJ[hEHIYXcS.G)`(iqBLUlOT!+]4=`N<1M@2G8GLj1ri"JA!REk(Q9NVp.`LseZ!>LK:q]Ch@jY:)%mTWi*k-Tm1YQ!(Q9EV/7%9G941-lUPMhi4N)nEP9'P21Kl6:i[O$#n*o;I>pQ+(AOgM"h(2EXR)Hgk::F?-u6s*LfD@u7JS%$R;j%>rHP*n[T>Rj`d_7GNLKC99is=,2\j;_7<?.91*p"Fk+?d`U=D<JdK0)F(dMdAW0,TAqFN@^N`A!kkE?(:ae1os,<LL]u[a*6tXq<%\o0A"I-\'q@TBY5/lRVL>e4nB;k87-EpU)91aXBE?3rHW\bc(Q)!-6gh]cNfgF2gAUfkAWj]3MX<s11JN=WCULlbsgqs0;*74$[$%;5Op;ft27$&J=qj_BJkk9]U,?lBEA"o)E:U+S$,,qO<qGW8Knr"qcuBr+<@ZW//h3DhFE@_tlTccAudpa@BghCUt*%E]j/E2aTpa%i_H/o;-DS`C![P+r-r*!6q">7Rr3n8MZ&r\KU?Y1Lj4esq_pi0`SB=keO?=AH;dl]&c@.D7L4(H&L*)ED+$eZ7VX!,ZGDON4<jPr%=!=He_n)9+Lkl'2D;V6/Q0$3(NUDpTnA:7T=89m!*[Z//g@RsNs4Nokpdo1^H!8f/T9NqX"ofN(.F!\Tl8O,f>%D;rRidl<qcD@<%&c5n\6)Cd"HYkef-2d#Z.h>[PBM@N+Ht[mQTBb5c8:Sc\j!RrFN/feino4:%-sMR"?#?#_%1%6=W._fB9:)B)rUlANW*k)'>U_F[%1X22^#EXG!kY2R1;ilE1*I7k^[N.W),cRB,5lT.Kr=p]AM<)W\1GdmRPq%LIBrNjMj8A"AEuXX5CG<SmC*P38[emP+W\tJr1hIln%Wdep;3B\DUl`pKKdnp]3%+E*kdG"pk4WG1sT)=SUo;L%8Y:c24n8#%Q?ep+@cfi-F'm(8;DdVbup2AZGTW6nnBqGfH_6)Go*t]Ui%QTg6R,0*f'oH9aH.)An@/rX(qM[JFHXN!tHJZ:9mE!>oD+[Qt;7VTg5&BbNQBiHD:D`_29faV%JT"t8q'PNp<rHE=O-:&6K(QgN+%Is2Od7UmWlBbD,Bk6q6:8Pi@l5>?a,8^K:#]#B&a-:'jR$&V8Jp+OL;Y((mE1.R(;Ghh)5b*hW9*&ioemPd9r@7<V0DY"a'SSGi]%?7f7)`X2Ol=oS.W:l=r)5taU(U"".;;JWAKZD'(1&D>sI!@8pXOMG@@RAQ;7#:rfI1u`2je25uBdhK'@U"a4NVU+Lp5,W&W<.<7M%M25,qVpFTFX?=mtb27Hp+?J#ESi2DUlMGK]D."Bb84?M,6?Dn.U@Z$_l%=;2&*D=Goh:RG5Q3qG2:JCX*01%jfht3J+\]5=X4)o#%]`'j%97Knaq@?,dU8&140jffo[@S^<;3#q"ajN"KRO1[i$9.t<A18]4CRQe[REIEiRO1\VV56C,8")%^F],&lChf?78l:UnVlA*$%<Vl#ZV<JcS#Xob`bi+834MThKmLYBa&T6q.i2L:FOCe90%PL4<.t=m>RN>f1+mX6^^V.cHL2"c5IaH6^^V6^F_\ZED@iEh"Y6n>_%=;ML&esh0ZI/7gNS(RA6X+'YFL447[,;Ri4Rk\ti))9U6^IF02fBGH3Y1&),1o;*bUjij6:]"b,5Nds,:5W]E,Q"FL:Q=_Kes<0D%XS`6)ebC7L6I4o.Z6o,94`3&"?WHh&O5%>/9?,?kVE]:HGf&qL$3b.I26:X?e9g0Yn;%h;`\2o#,/q85[KifG.Rf!X5dZl`(W0#9%6k4A2Wp&>(-,++p0?39q7*\h=W1/*d>eSWL^FV:<@XW]sB8?h/IaBr?.YkMXAJ`6*ZP5D'Z**??VN7%W6&6LHot/J01d6p,%>Sa+%**u$O:W"nr:.0\u/t</@jq$2'GhZ7KV\QsR'$^E(27&)YJ,)aPU*_)6s80O)-7X]KiNK2:`]S-\53f@QbdYa*qDPcfdgU]99AQe;%.a@>e2Q?]llg]Cn&?I:4I\ItchtuM[Jo?U(%e_jVc3PdQaT(_lA8aU37&td*b81]\\am6eHSH^WZ?fC9O,(H/T1<$gTp:#5>ck4.%HQJUR)B/Q=a[&_bjVm2&,#e=Z&o)2(QEF7,c!4iXBr>W<jso);VmZ'0>.%7u?s4/IKidgDF&qPFCODrMj_nLWNtaDL\.t;o7B*1X%n'PBdO6!1%.iaqZ^#(H7:bFX"F/>She8914O`G<f-27GP:3OgIgnRn$rS,'*3EfJPG40U1fR_rG5:5U&J'YBW$N;u_=[r\jRm&;M%1;\*Z*u-Uqo)<\GDJt!b*=(GB&ICn'8)C.6hPWm#J+\qJhXQFin&eand-f6E1&%:89TQaagc8&h\OV5\dpqg\?'YHdA+#c5l"R1q%r(S.1DKuTM7)YZm;kQ?*"mXnD(QD!\o:W/5q/c,"DoHb-qX=8`]i_A;PD:cn;[uYcX02J$Wg8Rfom3mI?ENB?6^PH_$.:XrqR[E:%9SrL^7eRB\YtQB9'%FK).=uXbgh3:pQS)JU/9(CsR7J:ST7&[a&t"O$#"3!k71[DO>b*;,l#TtSQrH<4IJMrrFb8XsT6;&Y?n"W5%*0CQ_Yf7<T8IR5XBG>C<BoOWFhkjnLdq[(5g+oe=$t.5bg+oe=r5rc4Y,t7&7@.>jkVB9K9WKbs%^)\ZQ3[[Odq['E1X;P+bOmX*%nd&Cp/U?7"/J_Wq^-XG#)Pm.R`>*Gt?2;#tq?,',5Sb?-F)+#)GnL^oIm<m_&lDMq^]&csO]%Y46R<qrOQhBD,-'FJoReG6;O@EA%+"S!=iL)l36>)EX3b!MIV\#gB`#CjA+t@nYh$6SHIG+)[APkbl#/2Wl<bM8VU^53*kI@dQYiUW]O;+ZND>K?is1j]oOUp]5#h*_b%;gO2OLYoh,Du-"me*eRYR5Q_`a0Yg<0>dOg$s5o20m5j/WYYWF>27-8k5U]M7"c>>Wl9@+b;>5<.YY<W!9=-#]N_N)dmSGA_hrtC%fFZS]@:m!'/&#9A0=U06*d^eZ8"k6,N2>gA`d)AJ=37"qmd8O4Uhlg0`T1Jh="]ibU^4,-*`]9&<VkImT+AHE\eIdC15(&d.R/2N%6SKb7LS72(ba>C)^L?VMf>!r8G9BtMp#[F3';R@hqRf`)\&'40a7"lT3D*F=P+Z7p0?!.[FBL+1_^7ihD^NEIjF;)g"?;c'&tU+g%b)@2Ef*fg<ju3L\kY5HP[c?UiDiup?X$;!,&'sIa(BXP.PE5+LhL@@k"TlG!R,J&Q1TR$LO@XPOAq8!IAhoYlqmgaPfdnoPq^:"2%GO[hY!uSfK5(iScqt[9<=?Li,*%/2:IoH+mm3\_<hnu*K(t@I$hH']!467CEldCitnA\>67B`;d/DHjWVI9\33T,n:dKPddE-1oI%ql)L@65!QoL:0a7B"-]'@1>0*M6N01iCes`/l/KYgueWZRA=0IOIL#j1Y$m=Z<1gQEm<C`r:+OsRH,6X]'Uhmmb%4.j2JQ\DEGkR%cQA3&mISB7#ie[tL??/kK?I^[=!5G2*.^u'^^()Bajj%p'/BU-Z&-m^6/oB6n11Il`7\K4gS+$TQgS4Ob??+q]+1,$`Jg@49"c(:%:LidaZ%t"b<#WfqWlFnFBP[Tl<4qlGYb<k.Wsmr[P>*[eC,DuX;4V%>Vr?W[6RaEbo+sbQq0(/"P%-GcSj4Im"8"<L-T.FPi"rda%.<-5?Co-gVc`_[2s.pE76Wp."#ppoqn(\k[_]Brihg<..\Wm+=g`K<[[Sh*F2j/7I7<t':itE3N<!h/s@]KaQ>WFS!hL8RUs/a4'%0Rs(H`M\AK>-n#_d".7K8^sX-^Hp>9kXkXBa3eBhkE5W>;`^m9.:1^\Si6?.V=>oA=d;q9C36=rFTN.pY2kLY\SqFl%d#,^hc4XZ%Yo0N]YulM^]]p':pYo&X2Y>](FJJ/:gHTM?X!bIK6*\uj2frb]rn)?5GS"IjE[ut-lHPN-Y$QqSBssBHX+s!B&S_ZAeT/',4k;%O%+nPEP\sf!u/=^#4U-c,([FL5,eZ5h+aJPe''rTVmP^7E/4!Bb7S_5Jsq88]%Y,:@.B"bL/lcjaYd\u8`dJ7];NDb>irdE3<q&''`%D;4+m46NcYp5<4G\<jbG73B2^[AoNO0:ZFD<_<Y=E^O97jU1s6c]q.,G&?&t:oUq#3Ookt[[Pb!6*ATdf%\^=(![M_[r1I&gC<k7%F_lfL1Di$,_T+4K)uj\s.u5O-WK%L'*bg][Hpl&sHU4.4Dfs#MFtAguV+X.dKL*rWYZQ@CCM'SlJedTUR0IlM@cS;'eO!?eF+7Xq%pCQ*0I'/DjX*]rr#"L(@@6RaMbD;^P3mk<+=\/YaFI-+9pqHh]h6*'S9!]3VDW`jg(R:Pq'&@ms/s9Gl<k01c='lQIM3rC-1)(YO%HM+#b-VP*BX>Im503X#po36%CpeS0MkH!jU?L4mrX4<,f7dN"HIQb.6:U+6,QU1nG4n`HZ)A_Z='OsWiq:J01eBFJJE-pEn[=#$7%7Q@GjY4>AkES-Rf1[)oP)/C%S.1:%D@b\H9=Y"\sN9s\^>rGHR&Q@G"2/?_(6g\9^)*970]kd9Xcq]Xm@cMi0q[Q+#iKS0mT',!i%FgCZ@NiHAFV^nf-_cUhDY`]I\fm$j$2O_&LEiDO*$$F8fOV'[MHT/*@D0Lar:Mf,7;Go8_jHstQI"+i@f;07'Yo<2Em7W:Pq.dT>%/6n`OCj!5@m("*.gbtjfe7NhR1Oq/\]7uMPmC;c<r+.(jXP,cip3D_5Q@s@b>=_9?/V!T`@VP&1[76m,K&X?'a@9hE4m<`f_<i^H%Y,!dacCe5<X!PjQoST:ZMJV2;^pXRZ4*""-Xkn5%-eIR#HCcW$l_2_qSAFF^a:[<G:oepB,_iZNP)uIs3u2lK_`I2'XGq*hC,0hN%C+Wd5f`9$[D0%d")BqV:D8/&PW'Y8nK>s1689^8DTh](7($aa5:\SR:9DpLPFgX+oDYT6c_M9m$@dmX!&k4[8mpiV`97tt3%R$fe%'dRAG<[Bu-#pi#N&p7ThfJqMW`O7\QXr4b;MFs7'L1cdSSsIOt+]2%1H6E=$<mK5.rsVC"c'm_)6KX?BfD,[U4M/6sS00@%7;-Qb%>je#si7g,n%QpU_%i%SCqPAMd/2c1k9.4GGD*ZQ:nJ%*S=7'_ckkTOIKF2a`)EI@dj`H/"E\k3cdeVYus#lane^Mu8R3L$u(a?%E%ajio9cBAm2eAUCu4!g's=uSee=[P;I-Rs1mhX*("^M&Ruo4b%h.$SN?dq[X2%r9a0SMZcK&)6HV2+'k#(s**Pf1WtHA>p9hEoAh8%a?[[u(^)UL>mAD.e\JGh;<a5hZ$T_/(t2ON8&LH7SK_WZPg1c=`&<[Gr[V?34K_h26#OWcHF.bGXnkN"C&u_>oC:d7#IEIknO-IV%LIjeD@<JqoCU_JE:.idSg^":N0A!g`mpH13m7)FJR.*SZ<mH164]4?U4t5[c,GIW6%Drn&S3rGJ%_$!<>e(\t,399OZ!&eXc7i:b%\E-k<]<T86Yi07`[_?okXacsN`:J-aCuClZ+DZ0P4+n4A8u!D>XKE%o1rsd*Mk!'!?<mpUXK`f+3;Af!Am%O*=RR\C?bmEc$aM]a%[i]BA](L6bkd:Hp\ib:`geSGFeuj-uJoNTG'o'm5DUfbW%\J?[lFtq"QAfo*]oKDK-rT'K[B7HeNhjulO)r=)fQ=AjrHZY6]Dd@E%Q-$7'XA^\hPOFO=RCR?`1fAIR''bHcPrJ>qC^If&:FdIBW,Y\7OdW7TN&.SEX].NYFED!qHX.*$brE@[@h=?d<DU%ODX=+diqo9U%U"$[?.c#4$%[8_YafSF:RdOnr[nWXIP1HIqK>(5V=$[?#=]FsT"1(G9H=QuZ;`G_8'-;'f=7)$Ze)8&:%_E*q]d8+KlH5[1:5N3C%,k\=j=&Kf+%4_h.rJ"81C>4:fRXLrlU4pe")*lU>//AX`n@4qrdWcBc**.*ffB3jWlr="YToNp!k'@")qqErbB.3<[D3h0arp?!d%\U79PFsq,h7FZaL[9>:d+,(;u*I.68rQ*>+aGoXi3s<#dg[=2q]:uhh$$<7INa5AE6E?A69Q+eD:51<$!?9_Tj72n6/(f?;3f^t'%oZ51VmQD$1Zaoo._pmZ0cJ5k9^)N-b?Q8M=qrtq\[Cms4TTn:.nD2uKgH*Y5Ci7k=J,^RN07D-aj7hue`oE!'AnU7SB7".WHfp/R%M5r#s(L&6"\PpPhUSRYSXA!Qp?dPEJIl$bn\B4LsSE%3PjOM;S9D%B7?2hA(3PY4q+4p<ub4=.+j5Z^f5'iQ&_oFlh9_pED)SK:D%`P!?=rV\CIoPWn:4s%tmDr+26n'h/\BJb(?3Ie;LdC]:fke3*223(`-OV)^kM1_&t]id)cC,TA!J&THpppdX"q9de_]ZJQn^e(Ns%P<+3S\HISRlWeV9B@Eb#++AFk\[D$gP9XQqq]O?[-EQUTpT2m0b'rpFCL]Q?Oh.HHer(V/:@>3sc^`j?3hL]SZ9C"bR$cIK4;33)%3>Xn]R4W2EAa[3<1HrQ/&&*O#W84F;ESY9(1\YSEm5q]f?V.Ak?TqX'q(X[d^W^.@n)^N\hS"hk!pmLEVbX%URg#@LNu:L%$2faZ%H2%+^!ah2/[^0c-cJC9]ffJ>)l`mgm?5u0&XUi#MF#3L_h*LV)n9?+aYrZM"T>eb%f2'SX7i)[p(92<@D5KM,T2QPAL&4Z[^+H1m%7&b7Z4d%VV[qkhoKo<.VbN`4\q]NMYkIT"2YL98&:Y1mkG.,XC?Q\IEjc/ZoY%uj-jhH:P]m065^AOp4pG@RRcdn87pRbF5V6`L0%B&:/tn0jDJ2BI2amnU3g-Yp>$/lnU:0&,7EHh1ej2EU5/NMh+B-cZ*co(h%N;rZl)jjZolidGF>Y]Y/%5#m&0[Sg[Lrl"D/)lH`B%T&2;i07o6]O4b>qB]SPqnurin?VYI:e'4[k?Whi@^3c%8<t_j-e!1GE-FL2OW1Tp'bO7""hrAcNk":#=21HL9/NitEO(VeR,d[/c%4T>+Y'6qf;?7k"13#c5YIIf=FD_8K>1<t9D(0Y2a5N:-sG-U<Ohqcm7jlIkLV)'3[<Zp/eL%t#Oa0k]trQK0WN`nW'c[2J!$P2tO%P5W".`b'VgEVY$1C#cE9^\<+=&RTuARu6*Qp$#J(jho*)GiE7F.DC+/H5JRnpKtk`L0'=<F3QddX7ao#3suRj`SLE4TAlGf>`\bX%G-#qM[@bIj?H,4KfCLuh'7[O]g5A1AoP?2[psm9gplgTG*)E]mbJ_lukDnRA$hZUOm/GTanYbud&+Qd8g0FRO8h1e:cHRHOG98Ik%`V12(Xn[g<A1;u;[:@6a)K/s%?a[Vl`nsbaDoCNR5<Pi@5.l1*`BV$aIu&S<EpgtD?6($*$ZBd(ihqK#g[XlMXr4uV0V69;fA:t9%=8*>snZVc??fTE.lKN,4/(^5\X/0uO(K,;^Z]"!b?Ht1$*uhO:NVUo,`_LE"ehVG%BBEit05JmGrS>)DZg2Cl&$q>bjrV`1WPABm%Rm'%rSBZM/DU33Kga^WfIsAO`]3!XiB+N-<.^LdtYE!5P)K_S^an"fbnR;??p>hB+5$d&DZ_a"1K?LgZa4]1\^I=nSn%No,Ae43O%jqd=(kAs:mPLjk+L[NVOdsC?+3=FF/S:?rBbWYa6IQI5ai6/aCbjMgN\Yk3PG&I3M`P]7b%km:[UG!-Zk2+B8h4=E[e7RlaqmlQ.%na,acmYcDjAS-CoEf`JWCFgaWm`b)^5.u%3IerEVnu'b(43%-g06`r]bKDu`LZ>R^*^-^Gn"_c%h)eE7jN=$ajk%eKKDUX`G?uZJ%2Xc#qIC4PP[l4![cKWXGo/db\)m)30k%8'd^>=/q1I&YDAp8TN\TRYa]XaN4be)-\o)+-rKh(_`j7I;>oDHT'r6Fnh9CmpFilV,Q%g#ee":Z[M<o7\hDGQ,eUkPb51C&W,r?HCe-G:s:V((q"A[0><S?!g^g2r?8N.4#dCjqfr3=3h\+hHX"qNY_%I>^6!Po40"WPjF+1%U@Wi-P'NU#BWWi!^:Va:]lJ=n\GG?jrT[nPmeVk7%sLsuX7kAO]u._Cr==r1hgJd6XPNj)3o@JplFpQ<Hb$h4I(+Ckj>#?&]8n#Q%(DE^_Rmf8Tf+oHWnXGFUg%@:^4(K'BO",nmM]Y.Dnr&37[I(qRb&A/dWTUT\G>lKYdV=)RJ'$I%I^JbB;^8QSq)-W'g.trfQJO_s%^L$bANB^c"4Z]<7QG/Z5kMCUKlgha-_Y^ljm`3Q'H]OfQ(\aM)GDc-$/6$]bhH#Q,mSWQEiSI#fj842JlLFc5V5:MZbK@"00<[U2%4^$'X2GTT_mq9edYBSjQQZKKmq;j7kIU]iJHf3/mhd8L;9AN\&Xkijb<iYWWD`"brqg8.Yh#4](pT=>gcdp,7bEIk9/$kM9Mj9S'%8'<F>g.HB3\bl'mb4G1<Flen[_-6[4iUtL=7H36QV02LW81^[qmj-\BPB,[)H&Y9b4Fad63q6t^_4=!^q9,[mo!:r6FnV6r@!1Sh%i+1@kbW2`gf$dEqHYZ>kp"df(T2nMpS^jq@T2(?a`T.-=H9$1X4EbaJj&pGQc?OJtH#9(aYT0E)j-oRDMq^&ZVRa=GC-Fab3]FNg%`fBl#l7)>C9NTK]e,<?_rbEs^eAJoAl;;]!XIc=S]iB"=,rSbsGj)-1gN.S@V9EAeEp]^L<ndBIdb=Fnc`E2DSL<!Tm5*XkID':;%bhK2CoWnGbJ[]#OHb2CU^U\QdBc#[`C"Nm\:;^5K\CYhSfA<U8R82'i03@n6SG^NtiI&=gcZAR290IHHoCGm>Rp%ssNt)Y\h37D=%g&2i%?1@91Y[&na.V-YnD16g1`d@AL?$M'Loq'b`^pi[s^%NO1I9Q67Vc1&(ma:m6?[D_49/*jL6j9UcHp:.R]W),g2U3BIT8Rna%hu*fSfC"p\^0"U_cGmt<4l0Fj><K*kQ&ZntB'._64>0dfmIY"64d3G2=?jrUgg2YHIWfqKR58/60G`iA#>`cT8e:XAo32`GreI<T%?VfR-I^ntDD>N4dH\J;O]=IP2_rFgBSj0;>F0%n+2kS\D4j9FDI'ieKhU\I^G<<bA8$u63iUP&_qVq%?h>514HaW8>a1:R8bi="$%(HbjVgK]/ioW5Z#%N"<g:C<F)[:K3aa,?aYHXBB_'],E-?_>"q9n'XB4&=[\E:G4h]P(TJT%ApIl;MG=/let8QY5I0M;<MZ3iTP0%V%9'?BBdm/bu^;pDd%jR\$t,54PNLS1*9kq-Sr0V4,4cU$]dn!.KA8Q`len_j@8CjjkK.Xf3]HLp!rXV]3DpmR6B5=2E'T29+NtP%(&ubFf$Z11ZMAK(^U*`YH)^em#bIrdB(kO,:Z%[\4F2=!YC*d$s609RXlRpYQ`ZVCoBEA1_.NZ!;G6C@HW6M>IWfsXrpe\;X5]o;%MgOn3cQBmuo]l6<0c,qb/2amQrVG:9LW:l%1V\?_2gK?=r71Zt4%j2`e]spf._ToqZD;ZXUt4S<bMLqJDUR?c^\c`QgYKPjn0,-)%fZC;bANguHn,7(grnc7dMnAlO4?'aap%Umis1%m(q',h.[.V;^<bGe+"cMt.o.Nk*h5,bCeU?K9Z1Z'tGic+m5.KBrq<W(.\FB'.%F7nJPnC-5lm3k0q@JRu/HMl]7Ir02okcB&Uo($,de_J?tqr_`Jh]4n+nZmVNIdtSVo[%unF8fk9e`jrjQe+m06[NGEFn4nkjm.-i%r9WbGl(a4smaI5(hWugIY.m!/fZCm6rd;b5S,)jMjR("^b't5RPtp5=SSp`AGBA>:qX/B6C&>Shg:6nV\TRW1IGrYsUCU!.oC3@U%q9lkc+&6R35/of6(1u\nY4&NaI!kbLE;O/<W9er<F7.h]^%f4g:F5JdbN$OaQQ*tLMl(]gIri@%H-+oXI83kfMpJ$P2tORA>:1M5%O.X(2SU:*As"N'Yg4++JI^$S:nuD1os.k,4j<3p[2IF_Qk78NoqgA)4<j(B;5Pn?'OZ2QZb?+/!MY8jD.IKEJQR\<MlNa?=e$&Sr%^"71+V\c7,X><LP>A&;<$cclrNGACHH;Rg0hd='EF^De\f1YgmV=i8pQYZ%_Q/-;75/4W)q5l<*+-nRpeBYKD?3CYt_SrQLd^s1?%WTD852I?1?[k4q23W%t0dH-PsLR4@"<;'JVmUC.EZ>nLo:s#mZ&$,H<7'laVWV*iKIe)\g9c8;![Je#'caE%Yr7T<l=9%k:kNhH9%gh],k-&V@CM3"k*a7m6k`mXd!n:-MQAY9)"C5.djp6?nT=Jaa)`"FS#Git$7VIE?UrdAV(T_h@u63"Zk>-8JjcAa:A/\^*lQWq+W%=fo`U:4uuL[XFuUL)S'\-@:,>04""=j>js=IdX;Ie\0me[3QYK%JRV4g,([aGT&J(.%YQ)4/`K'[S5ur29G]n'sAZ(%Q\1p`M<$6%UDV2)Mm;Di0rE.LYsu!TZcnE]^ZWR.XH>ku,aPLL^n2q0CnR37;O)%URQQ:S#&3Ou9uL?rpqHC0_;0ETqlSS0e]QCJ>)=!aD-&Ou%OH=g\j[]qU(%)k'P)K2l)ReJ:6IUcKX"jV9Y#pOW2]""-\D&t/o$,^"j\fDCX>TJe"N#>_P2SjMcFman)3&=],)iS#*Ge?-=K?In%-Pdt^La2O$"K!.$l_W>!brd..ZFNHrFn+NmWVGq,7a"!^;HRiYe[08hi@#CbdqWXYl@(_#UH6dXgaFmfGaiE?QQRW?a6iShdu_34%n;#7nV3%a=*ksM/FD%A:hRk9Xm1C@_Wg.>u]O&9&G4g;jWou1&)ROH"G2B=`^1Bi%jEU83Q>Vj5eUL%&o%Wk-n$#IIld_2(F$',u%=<F[@9"M9)hl>a/3=+%2.LGs\8Pit"%EEUuKZhqDCc/@P2%$r?Qf9@FFusZ2W\)N/#+m3UOHKFL>/*$8[:a+<7cV=s$&?m)IuinD%5'FlBe%[+j6T,TQ]Gl(EaH4)D!e3A]Fuq,6\Dmj;K^*lq#_'I\%`YXEp.AT$=t/t+pf;qkYB3qT=7IW!\`*F:7gh\f:A8g?/9M/#%OYI5#"8tW7,J'u,FQo8N<2_.rYW^Qn%[(=K,fQDY__''9?$#s1g?Z"*!J\\8GcOCGRN`3<8%6;Sld`mJ])rQ*%dJ'Wg[W"#g0[W;%-?G&Jbcm;.hZ\stE+MND8:AuO%l^<%W3[>91n`/AFTcBR+i?"EB(>)tFa6m,Q-'bnlWQB1\dh/g%q[4FAKi+:m9UfMmkCA?F(Z!<%d2fY[Cn6*OeOoE5Jhrf,+/j-gU49b$p[OB^qohS+W9]h)0NRFqa>YAf:ZlJ5N2>%=SpcSHU0E-Qm])oWg]f(@1lrQuF?<Wq-kRK$%fbAb!)pJN)pS[\f_^.u8b?%nVr#P4JfW&2pnDL7t^uJ;7kfVLMs!sBagHI4O#AeF"7Q'PDj'hAJiXVf+-/rpMGG@^l(efl1s'1B%%_qec]^D:UWYIX?MUTP`;]m4!)i>7JLetX?XSur?hF0ufu6NN\P\<lur^0\K_nW&Il%`P!YO(=9EBsLu-/4..hS7hf#9Q_BsfDACK%Gs#"6o^$lN).rq*VLHUU4RPq_]HDrA][7+YED1kj:M(C<'E\Y*G$AicB)'/KF206jQWk>jFD61Tbsa1CA*WP=4E*\j*mYZX4=K[C%^P"nY2XJ8,P<MJiHn5Cb:#U,)`CLj<A(h":mK2<F]6V^-h=Pf$]CX*'VGY['go`rNr->H:,Bb6TRXf//c,Wbb7K8<)j_/h'Eom+A%[c?irjh!/-CF"KsR>u_AT0+pU[k6)"Y"*!B8D%gQ@On$e-To^/M9p^5TRhrCY3RBu8T$Xe#u<!bj`ksc2B>$UcV39F44B7mfY3bm%nL-p]@0ORhbHV[<+[lt%JaZ^G($-+M,uB'12!or`hK$SW'ts-:/8u6E,'1"%":<h,]pNBa#pTGgZP&::"OrE;&sfMqTC!tQch1e!%lR0>q:g'L^/0f+IEgB.]gE,/j3*:hS%;5kI[5"JO^4C'p--aXla\Ak`*"k/(P$is=ZAF)gKTk=a'`q[)W:&.-(!#j$,Lk(>KV'-4%5R-3*&e<F68bf0"JS6NA)ns?['5;i'$>)UqGT`4/&.&f-(F1pA,2'FkHmk3*^1?n^;j_Q7MbC<6Y?=-7/ci4_A`3BCatT(]!E%"7%!CT1(:U/:AL(u+!GEIu[*sd\kX+X99&\!S#`)U9YCD'-#2sA&c]3qLKOphIW!BZhW!^"(kLT!`#kJ^\?D2g)QPIs6.QcfHE?2CID%Gb1rNf@HOVPq<g<_[h7*m;pS_f@JC#3dLW*ZIQ(sg7#!.2OC:Q\8"R,f)taApGGML\t#1*<W8]M[a9eW=5sD]+Edn4CMR\5DM%^B%48"VFBqM=%EF7J&8dX\M..>2/e,D]'84$M3Bm`;/NLP(>4SE2UaAr^8Y_Z!8btV;K?>&PL%Z64!Dqi/4mV,b^lGGfR%Uu@KR(r"r%1&;jJa_h'D)AA$BpB7UfF>DQ9CS0bWP7tTF%)1HW#OcBq8+GTh\A<B+ZDD)r=-VYiS:E`B,m.H1o)raZoF<!!q1+R7[lootj@5B>%"lqc3LPQTM2[BDi'!CX!1#GH[_6jDV"9sFYJ4pjY$2Gpg1#W]E1YFjX!T@JA!Au+IqCqO%M8;+hdj!E.>MPM5p;kCOX-<%#1=$*!%6/h-Wp2pT;+ZW[l_'+ma5NLQ#Z3Y+2$9,qYR"0o%HnDY1!V\DaJKg$<X+8ufTg<!MdnA#[)*'&9oR4:U!RXXk7a;6Z'Ku6P]cH[,%!7BVMH:NT#OA*;?5b!k0G&G1&&VCB\=U[%opo^3k%^CXl0tC;),8es+-njMj3=3n#E&T<+)5*Hp,E]ET:NF>o4?`1V"CI's+b0Wg%["G=j[7l6!R&Y1`bqrE%P(*plMVe0OUo5OMM!72DPX17P/IaIOAuZ`1a7kt`#d#L1n4c.+)NH$b,)&Z4,*H_E!cgDd&/s%dguGsI%1`Z'7!%Gmg+ab:;1`/X+`Y4G"'BE"rMJm_FRQgsC6qdYZfYBm!ZMNLZ8^W?*C2US<>0teC.<Lj%=*YpF#mG<*COAnaL_+2eJ1sWZ%BdJ-2Gr0/F&Jk^>pVHnO`A>G3!YH_Q%<3@TYVe]XJ_<d`Ua1bQn:s:DlCfHDB.CGTc';F(5QskmbUi8$-ZolGcOkKU=EFPaF'MXB%fCG?+Up5Y#,4/bDZm5OB9U=0BoX8"^d/??tF9'C:g-OCS;FP>8C-t7=;*0Z;9Ft8CUa_mr(n]qc\k=071*P^u<tfsI40ZW`XqX&c%/-nXS,JOl_#]\0W=:+LCO[;hV=VoIF!@b[c*0ZhR0K=m_80g`%8_uShUZmBg'_kT(mQ0,<EX<tba<m8idF[tp&oC^&PcFie.7h&T%OX>*M$9:8iZ3BG?R\@bfZ-+8/(O:sV;+q6/Jl,f<!)l&E]a9)kFp>qC0orh5.d"el.'Rf&D?)]foc-MZ@6r"a,m"TF+q*EC]43Iu%S93;H5m]K>5c!A1a]%kg*tEmJj;#+9?r1(D'$poOJfTA\2N]]U3eRsC#0!f;1k;Z#D_6`W5g:mM/;!1aN^6,D+CYT#4m(J:+QfUm%3i@AF'p68U5Z/EEVQm*:So5*2_P.6&!uFqF'W+825Z5G>Ou]t!BnpAnKYbW\a_(n#15H7T)i>sO$p]tB2BQu#.R.?]<3Jhn/B9+N%&P:)h#L\X6'A\XM&1DEbGB7'1dTq\6NaSb):CgmWW6!"-f`34RjpMaB+?;J\)9fr`S52Bo?/VIu`*MfnO?V,)0)7`dKn3:C>f0sc%G9+aI1Cua(P0Oon>VRI2UM[6gJ\)S)R`I+K_CkBe(aK_)W3"6+V8Nj2O<>LH\KoBE>DsL-#*GG&V.@b(=L4qN&X+X&Ec-_JOf*.I%RpqJS9KdYg\P+7MP&"LKH#OMHNa*@J&9?b;6Xe3S"p6FZr8<Tm8<*^%'@3T>0hLO;BJ--LUaIX")0CE?JIlG74DF@-[+$isg]5U?%DS_>GaG$W[.U@#>'ThM#TL;BB"l,AJL23G&l*(K'!t[0mJkq9ifIfE7![:-p8VYLk\r%TPO.O93R4#OF>>_m1<?P":!0Q3''B?5&%Fo[/XXLMe9\K+>^MT&U"dL.W6%!72hP,IKG`$)8c=>nf%[L=8prn7G5[VPFB$k<k#jR[rCHuV+KEs3C'KBJYKE5\%MbN'&P@l+>J%E)3Dqduo8M#I)N@:a$s=S78]E;HR<<iQOFWac[lN'-J59U73b0ZBHU@9U3Rs$<RFk<OaFJKkZVF4+oKN,E&J?Jr<$ab8W?+&7:?f%a5MqfHRLg$`luA##\4U$1pXQ!ABEhm,Oi&DoGi)mnqII.*Wg6B_b2]pLnU1s64dQ5d42@hk[A"e0-%B.W$u[/i\HA3Cf'PMM3:2-%.!cF0;.!c/8M5aF0aeF.PlNQLEu;FNC;TsK49rK9]0(ER&o4`e,QhYAj8hf7(Jn!ucAL\=$#Y:c1bl9V6mXfp@NDEL`B0mRJI]9%%.iE32A*fG=l<EUa?tWl.+MEf@GuQb>(QQ@anadpc!CB6d'-f/"^4RRKp5gDYUj,R?Qp\<5,R>)9^k*]i<Y!K\Li4^+nElM#HhiJR%=\T27#q!G+dRfAE,uY'(C_P8A#[%d1FG%F7E\H2]OUMoKL']3akS[X6Z:0O^Ac[N48-UB^e!U5lF.NE[?qd5aq">/I!^t4n>m%_@%7!WUV@'%:0!QZDn</l,Q*GqFNKo7-'ab>M'#4\$F%-.S6,<.bhCG,G2D2(o`)eq11$A1H2`[$;-$jg`SUHrdV-U;[[buk6mJVKhZ%#m"%6lP[2dARr#91YLVF-sF/D!u'(R&;4`X,.',`9j+,d2mWsWUCsk4^5.@b&&;IFrh^6hEn`KX*nBdd[Xs<e5nMN-_Aui[-$I[g%olaFf@G>@j:hSAqV[u,#-u_asr+.%`Pl-2n*?nrsHPktQ7ol%Q8Tr#4$P\5@P=%k_?Gu?$8-H<$5^Y#@Q"u2X4^G[tAN1=&&2gPn%VrA!6-hiC:.6qD[:$lmK"X"@)mV.c<-m)_T:1R$p+1.sa,&,>X&WYVa%hE**iQLVF9XYE?.IL&bLk8FnaLi(?d6O@!%_u!o18`7q%,tE&'eKcqYl%tQ4M4joaF!em-'%G5PeMLP!ML\/_&.b5Nd6I[VDpbZ-DfWg`NJ^4IN"T1$4GX6j"!+b4eL.=q!d$QCfa'2!FZ%$#%W/g'+g&Zgg7*)/20$C.CQHU][ic[^M;hVu;d:/34ZjAQd;U'8ad5;[f#Tt7UZGa26S=.gS@Zs-X6K$OWmcgs/.qIL%NQ*kmFqe2<%0H"EsX=n*74ATbsg_E7OiicV*k6t7)"$&:2A>4Y6BhunAM8n*WfJ2,_9TZEA%@I9<..:OT`N$@s>VS%q@SB-o\r1k9ff#XW!S]lh%b7Wq]Z!l0n&<&43)S3'+hgr?A"'RE)@%W0'O0(P#dDr^+Yq[G`7Em5&$@K:FA>BY\W>+#<='W0#.+T/s=!rM^151gVP.aBbmH\pd%i]Ug&JZD)NUZWMf9]3u'6l1pI8SVa.4(TS#,*2sZfj#3<R(*8-$k@9ur'S_K1XE;4bMh2"bO[9.RW-fc0<(S#FURT<8RrZD8ff"8%(^nn$X"9bP_6-WlaF]>E4,kRa+O('QZ&7LR1T?I)&qmc/LW3:"<ufH"'URsDl"''WN9c:>2P@*AB1]23>WHsh`ALq5$\Bg>!mTNl%1oG_^d0Mu=,s4)I[\,.p\eZ,%R1pc-ni2c*!#$[MTM-pj*p#5KOHUZABdOrGM.X[SM5Cle\YpjKOsdLeACQ]]P//=^!f;mb.>Zl&%:q/i[`'B$1Ys>UO,TIheG6s$,fJ8CV@CPrCCc)N.L_CplF+>$FK`P]B,Fu4DBJu86hdkiR3>qQ/6u(mXk[>TRP*1O:q'$a]#95uc%,,S,?$Z[)[Hk++0.PdUD'I!q-BnHeCk&>$eE7/_B#r&A"2"f3`HBo_]Ktg)Hb3%7IH!6G?CCb&#3;!_+&+$&#^/miK"2R.Rl2\d5%@=]/\Y0P,0kf:I=#HM+"Hb*TC\p>!*Eh_f$!SR]db1UDe#es4qU;570*lo#/^mi4e.M(6H-n^TYV?!4hleqjTPfK0N-m'j>!*qDP%Go`!2`<:'hTe2o8)>PHhK<QWC[2JOl-;(FTY.bgsd.Ipu6PTqs)ICMGOpGetA@IZo"9PkTM^"n3B'HH.I'Sg__c>J,?A8U(7jQ'=%Aq`LmZaiJ`@#_42W&`NbdTjrW2+iRSU.H=-aCXr5b,Rc7J8='i1)%X3%l)Uiic(Fk_E`BoCd:9L5BAl,n)_d:R6[r7U*BU>X,LS-%n==Jq>dI/q=dNB.("T%,mM]>I,[.LG<[NE:j`(<ajH2_lC@Fn."/R+e-*34FLi@W'=-A@p./UfUR-_L#bdt5c#U,R<Uq-mCQsHa,%-]%J,F&=&Y.'M@Qb/\"m,p'>E[;o@0#bK$'63],KoV>1)$4IB<n:aRfOE<UELaD#OMu&;8"Xp;o(phm,ON/`rdX`V-!`k,\`U,YX%#.IE[YRkM6<)",4f+;_LY,H8!JH36(!YDOr@&Bl9j7\4l:_?8Zn0Eml.N2c)QAAkC(.98]$WdU^;&q!>Kc<ShcBcBajmu=06.B`8%R[bb50_D0&'=/sq#I[`,"\[/dGRu-f*c)]J\AIEk!'j+@+L6"$P`1jKaZc%CH+*gU!:di=*[iY,_D!+#o#Q]/i5e'HjsMn0jg$1n%^nI_HlC#]S'nUu$SjjN>(`cI&j_33+AH8'd=WYnQ$odqh5esW_4Ij<i4oj;kOFs@ZL+BMGI3GD?N!*TZd\1BU%#ld]#hRouE6,>?%d*O[Fh%!G3J-)2fNY#=@0cL/'Vf,)YPpt.`Qt3E<%XCuPKIPO&G^(:u[(lm!^^i7Un9>(0:BlO'KB'E![9.!GaK!'4F\F''XoOl8%OSjX<JABl((`cDUGmM>f3i"&+-nRj6G/P*'bI)ZG$n22gTBZ,S.kIY+_impB_c@d8<W^.%"?($?ac;D^QC!.bh\/rR)I1(tEZ@/N%2GXOCrd4tD)c!D('$5XNh&M6RY<eJtoje%);*=p<5%2;;PF7<Pg4=BeOm6`ZD/_oG+J3G,0]4QAHGE-NFJ+sC*#*f+(f"q:YsOnQ%U`VT$;LgYO/d82`K[)h.8dt:X2TXGlehDV^1t&rcNu%jTaL_e"#B]'\9nk?E]:dCr,D^&eSM#TEK4]Zt,PPBS!:4\2`%DX\Fl>DE%V7-a#.KT"NJP"r,$#\mUZu#2YRqHS)`MGhnA/UP\`%f;_))MrP5r]lEIE.N3gZHX7_LHDXOP]lC,s]rOUn+r?LbC`'imOp1]CL]P%1jA$qL2VjQ'cT;m#944g9`_eVLFr3e)b7l`'tfL/UoWO]c8f"L0a6X[EWW+glr7^SL>mF`@4>4t!R`J;W,]ZoLdl'6U"@Lb1,7JM%ESWTNgl?3$d_nO2Q#GdkaFLg5AeHe:*=X7po@TGbI`NE7jJ5-$EK1/+#-\MMp3$WSQ[t1CNfqIpZDcG_L^8?K^)I4^ZGHYcV<a_k%FM<g?(Ygs[Q@T4C^_&t>/oh"]%bp&Ai=ki%'_t\qBK-uq+sitRKf`JN<ig*s;d\"01,E7t$;a9[)He1[LkQt;pq]rSK7,%Kp&IPQ%[$6RP=d2:B%\CNl##$7l-m`MfkHN=K.Cct;"`f=kF&7"F!hQ5SQ7!4NV1!o^8s3Vc6Ej^Xf5[')'g,'c!&@5P]KO4@%!$p0V[''_%1(^;qk/5-'!+q1D#U[?c%O)CZ>IfoX&<I%E'Hj+0E#HsQZUaTN"q756=3'4,m79AO`;gZp!.C)/H-Me3e\]m"Qo5UdY9)34e$dWP%6BTn4TYhA.Bh>,!5tiR+)4&")jm&gcRN9J^HtY/uijLH*fJB>3BUc^?.I?Yf)Pf#k5`*EX>ihbHcI'muU7chs9'Cqtq6K"<XbDpQ%TY+&t2A\P_:<T&AW7lKd(PPPeD8Tl4l-%ceNtC#f(Q6JLp.B@cWiq=I>G+9BLbHfqm)oEOff3IlN3,AUpI'-Pd.]J02^=4$T"$C(%4YnMr?6Ta(%3/SRTA>U?L;_st;OcVb//SAu'1IgK-qHnB!-/Lq"YA.rFkFJN"5aD6#=1,(0Xq--cpb+Dqi8\@%%+c-a7C*Vn@Sf0%=h&?Fq6MD>J4Kke6gCH1l>gR\CDLA4KjQ_k:^!(+c@K'PG^YhtSV>4o$@',!`ZhQ9m6$&j]I`&s)WG4CK1$N>Z)"GZZH^FIMP]DB%4%!glLTfb3[.\eeYEY[q/:r^,,iD*,CdnuR$6VHjMa@mA[t.OgpBH]l!s*bGf-Pk#R'Qf42Ojmdm;0hnBbg4I"'A$[4^69RN9]_/%4kO;_Eb,M3gjD$s$W!?:,-KPk_X*'pP^"VW7c1'sN[H09$+UGuAX[+cM,?W3b1DP<84UTiOTOcZ^+:GFpJ=?%TYM!n#aGm=7_q'r%!cpUdAqM9+PO<0@^u]\k!:571'f#^s>Pg[Cb(Z[Ce34jO6$Q*0p<Ao8;gtpW0E`l<SH8RA87Gk2ehs::^ag]2nUcLs6V/Se0gXb4%lVNo"2o_/;J]$a!4"FHhJgp3^#R^56#'h17"(^qJ(tTgNPXIFc@=60'nI?p9c>uB<G[6>dL343oPnIp\7Zjct>1kH^BnQXf`N:]J%Td8LPG6Gj2<tMCB4tlq'8Sq,@n!nY)'M(L5`=lc)#1a2b+)NPsRP#OFU`1Mf-jCmAKV<Bj2sfhOWgP5Li,C9cf=&ndoYj*.'-7_N%D5Ku@S@<%B:"bsPJ\a2L$u21CAZLJ9f#X(U%#=EVR=K!S@2O\m.GCSRa)ZEa7FiPd4,caZ-1Ya6D(gQc+Nq4Gb[qgjFrk*-W/<#f%(BnL!6PR\mXULO`=&sQ5Ze`U;1pl)%%6<?#*%*E7ncfD4Z(i+_iC+0g+X_6%a/Fu=Ynk88+>L$S:s9C5k\qFGTG`D+UWGiUEs&^$%$6!IG^*'T=1:AZ?hZTTe"+@!7A7n0`0Lj(u3NVKr8(%c<";+q]SiKEhT&N/-fD6L4,e*l9Lpch>MMIj[`ESu8</)'\MnuXehUYjC%8X!6=.G342E:cJ8!!pN4?iu+$aD/KSg)=>T$3lS,Qo^CS%E$U5!,P#9"Fjk$"ot-Z1'$n'UD`.X7\1jZHX&*,H[9=hLPc4e$q[8!%Zu+J)$@$P[ENr^9QU1"mbCYtnRL%&$,g.rc3sTmDJ8@l[*U;%0D't,l`Bje9(Y7D*m.Rf.-E45$$uX`2CLU5$G[V-UEtK!keqh.T%=8#EM^4b\]&4c%)$jh]l0)!'5b\9\=%@=Pk@55b16!.^7Xp2ej4WT0!*4f6LOj/AN^q0aN@4@N=))d_h=?R7[jhNNqY*OF\%eF2&%'allg6g)uHDoM;%NZSD5Q"Z,7F"`gZ/M+k.fmHH2hF.H=]X%"<\s;Fs@N,jb.Ll$h-^\$-Z8Do'&hjfUh$//1#mERInCg-3I$dZO%!HKI@E1N)g^?=/&+51<d<>-l+!1?,7:Ub`=8Ng"]EdU5:,5dKB((>SMYd3V=U!sJq'jnF*PoVo7^%r.:D!V;A7UIY[<YN[[jkP#^%JYKhsa.Zp\U544a$DV(`>ZM;16K_W150A.KVSl4^f@F5U?1,[l:H1W+?^/D;f?HFI7l<H+>IiBfOligh1NXoMRtuI*80e@%L^$,W%.PHK?]d8[A`tk3PG7O^bkn5H[";:*3'8i%C31LZXFg+ocS)S\i[`R`r2<2Z(P\:0(jY$#'!QYVX9]X@dXUo1;['7]m4q$YYfW/Lt%<4Hk0&nb!%)H0[T!5p>tMkR70a:$Yp^cgBpa9eA5+?V*o'#G9E"Y=UH-\sQ\[\V',?!,0JUn8li1,('[]76%]fFbGSY[sktkHaZa%,LHN)r%I(242G.U!aGA%nD6s1V'-,RiW3R>i=*RH8*R2;HmHq@Q#%DY(3f0Ra2_+t:^cp50Sajd!L!NLTH(e8m'Ai]'='VF0Q_To%Oq\[o"%(X*cc\4g-=bab"Ud>EA26bd9oh4e8s'RJE\FM)gUt]7OfkI7:eF5%,Z]3k&L<*&Xot+>\1&ko!l?JH]Ltfu*8)@N+Lf$]%drfc5+M8GTF;Z>M7t;/rbE/$C'*'L.aP+4j!Ko4RFuAuJ(Co\#GnDa511T"b$;"j&qSSsk<X@'p$tgG[+WV#^*oO\.<*<fZq.3)M%>qeOLC02XO!nf$AB.j8S%@mm]]O&f&%9\1rMQpWK"deC+6a2BJ[*"P#$oe8H>YaipS1cQB(PXs/WjBl!@2?=nq!8tR2^$C73_t$O%?@fm%FK(T60q`_Cf*61gbQP#N.D*%u=jlqeQa]qTYXqON#m9Y=VC5^in@43dEks!)fn+9.?8dV7oHNUk">m@5JI<ldXLELZC/*Q-%i/=RUou]&8'hF9N5Rs66#]I6R`/nF7S1p^m*<<g0OGVoI&srbWbReVa;*70QDfSk('+g"Df[KLr\cK/\[gZ`<L91`4gs#Fj#]VhV%(8/[bYRNaGj6:+c5HnE&$<K37cO,HoJgjom\[nR!l\W6dVTp=*8N:8E8B>$#0n!!0j6D>K_F52<2L^/r7N3*KAtJ'0]_8(a#&tQu%+B.mM:fc4"cm:H\5n'\P](FO,XfJLCJZMd*89*H=cud5F>Td87>Xt_'V3B@7]\?SDK^_!,7'n8=`sR[@bk.^._QM_(gHA7aN"]K-%p_^jA_be1d-=@lo(@/2VWlt?#\>gO^!PgNoin]9Ji,-snGQN6oP[ehLaeI#.Q/s[[GIAg7D0o]/@<eBA.tK0DjrjIt#rMQ6.<E%[%D5.#JlQH=@Mh688&ZuFnUCnS07gFRWQ&FscNhN@>EpbV0&F5"UaCZ!D)Yg0>l?O=&GP0W/Jo7_A+P1co.=Jl0$_ZU\&EqkpLLqB3%H)=OsD)!FKqnmC5V6-(.:u6AlV\fq0Gcr,0XgX`2A9$9C!sE$nJE2P1Z7lT@ncbiaco$INS/!u(3FW!t]8*60)MBiYj2_^/-)Ydn%V]Bq\T%1QG-BZ_=AWRpaX>WV'?,J,d2Hq@]>W'Hm@S;hBL?OegC@=m)6@t;BaIm.t%/GrTN+[hGD?bDX_[k3/#K"b/h@IdlQ9m]!%Q:AcT!03-.GbKLm'-^)=([c!V?!#XPALAfX]4nlb+QM!4"7N]hiRp"<^$Ok5==H1Vfi#U.A]P>]Co!:l&t9e5fE$#+Xqjtagq8Rt%(mYqaa-Td-"%L8Zabqo64Mc"AO\&?M3nL9pdQCNiCloj5YKS\/ZoP(8!th;;U0>I;eht=8&!i4jYeD:CaM^FGHuA+=bXEWrqiVe,%l'"S/4<Zt1YfKgb>*.ph77PQZFNrX-Q!9U8XjH06VQEq[WL8DD8qi2s(.rWf/XYLc^$Wq!*.TMDg\7qS)ME4L>o:3TT0]b>-6Ps:%-p"sTTJ$FGSjq!pMC(0dFN.h62Dg'X)r8`t:!!B,!5[D"oUqK[DYX-6\@NeEi]n+10dJA,9ppTi@stZ@&El7WL?u_-%(/6hZMUS2%!T]WAI0u&PnfibMC5l)^#VSeo9'Hc?Ys!s:>VF;j/`&O>aAMjT14.\PK](Z"dQrj8"C/X(M?jPVJPH=V.kE^a]&:[q-Ns9S1V4+$%6]fh&q-fE92T']?.H5IV:WonLF2j5]7S7Ue0iVQH0l>T/::QGV[()[+Q^n6>Z\g9FSC:#1f[2OR4LWPfOhu(BdD].BOM!K<G+kD.%1bq3S#D>FN'kj54O9b<l#q+*Vg;/LaJ8AAe!;d11gpL!^%VmjKeT'PQKfQe$Cje(V[G$r&p3"WN,#GE6IXj0SDlsW<-hd<k`"$lb%hO>XC7P%p$9#K4Q2l:ADeI"]2]UBL9\h_099Vb'lR!o=J\KHLqViIo\Gc3_Z8FPkrh,'+YYHgjXe\SftT+MArPA2=3E;:>rT\[8d%[Ed^[T;dgM+6`;7?4^e3D7QBlH7d_,I=@mSjYPO/??dNp"/:S_(5DAC%UN(uKEDSqNbh`SZ!_2.g:;'A<,A3u_&s8#hNN!tZEF^q%3Mn\c5/JJVk0E-b`SN,Y^lH8KCU:nj.[Jk$9ETDd%N9R2XJrO3ERtV>7G1(cd*X[-?Yhpm`ja!F-t[M8@ZQ0>L(^2EUVa>-,R&.C%Oi&Na`eJ_.Uk-j$8f?CFV&PYNlu:Xn2o8DohtPhi@=8]?(%<hP\>Z)fA]"O<7g!T\+Od:'n**7M%nSQ1+$-R]11:50.c\\iALs#6%Z.]2cE_dp]YYcFKO2*Z*p&O(JQ7k*4S=u3*.@g(;2,=<75_Z^G&AaAbbL9`;M3.M./0Bm=n\o:-1D"\-8gK('BLt@JJX5GO`sRE`%'\5N3iPmc4*_*XAK9$%kMArkh%-F$aEj:^o1#_U9"@J2n3O7:J_N5/:=@Mp@d,B&0!=J9>>c.9=[[%O9iK0Vs;dgE*K;:C`D*#8L%^gXj7PKsZsI5$!)#DkgXM!aL++bis6\QWC1\uRDh#(%kg1OQLSPft/;M*tn`j=d5_<dV:^,qXFYQH:#%D2-flH)9C2+sCtr5%="N%i]uoInECjTrK9EjF*Ll?6-%TdZXciZ'!RIb!H1(g1,&NOY^P3SB>[O`&g9Yhm`M[=6T/_2K;L#!U/]^:K'dCh]\.ubKP[g3Ka&od%rAY8s-@;8-nTk4gGZcN@M3i.9l5M^Q#3`Qqeqj,-5NdN"-[BDTc+0EDiHh3<=U\%384^mm?tGZsTTicuO[j\ij8Wc\>ukjrOt=9o%3:F(5Jh#-(ReM`iauX8a#UBPQQ701,,il*@8S16#^",,sRBO"O$%ds7+gM]u^[8NaGFqs+B#DV:E>c`r_hZ?^j1H`5V/CX55/@[e%O2Ca5\.n-@W(cfW8>Mks0p%jh4M<KV"pG+_Bo-92Ca4PgoGTes=o-;<7)(IA)$PAtGlTHX7d\DITlWX6+FI[D;5;)j%o9oms&+(8%'CJGZn.A,+XBN"<8'R,A0P;u.?6tVc3EnF9>)e4AX!>pg",L^mV+/&5>&o9O?5\1<aiCp(\7Rb?8f=*#Lk_at`+B0$Fl!*df,]le%B1a&je\-ZF*5pDHj*SbG[3;?;d!iEf4j8NY*5n2O6l#iP)0lFbbs,ei%[uSk(S:0DHK+S$=^1O0I3uaUJXm#@k1opYUgT]if6]rE%lV1n-km:[Ib@N0^cCGgQBECFVY%o";rF7FLZIeWi^NK_Q8#]+-hD\2i@bb)be<R2Z'R#Onf?V9@$0^.A;p/TVl7l%Pm1j;(%28f1%p!-*<MWTLP="r+U;8HmYRs75n'J#On8tmO'!]J.8=Uk,%7nS0.U8a=W2JSunjaBUJi1@gZ;Js#)A6li\@g[Gm4"Je\5@[B<fn-G.%9$.J6=8T#!nXGK<V3cY7d4Rq#Ji)tgeG`ATj]Y9(hQ,9n)4:,&fC>73W-NdN#2P,$4FrZlLd>NS``['qSa!mH:J*t6alLE>-7=r"%7hZ!!?>@)D1p.lQVZXS.2`i%(j`l2h2n=]krdZ"`+%Z/0e`"8:c[b>3V>p<B0$C!j["XmePDiLd7),@peE\[6UQ*Q]d=l.%T/E.!%<5nHOZSgpY3+6,:6.??ba&K/bT:c9r`?5XS!nFXtUonTA,:&"`8-3`PVeF,rj`1r\s2AqbUgW')hb^=K][<LmQsZTO4G>oR[GM,<%J3@tEaJISnf'X%lZ0")/NIC]80d9EFBRcFbVX@dH3Wd7MHTn1b;k#:,7$Y9P0W[Hcl$_C>Udg9KI]rJkF,F[Y3/NGB?6kgBP*s-T%E($`<6$)GMI/V7;MV,VF;_.ZBEHl\cAj:'B_K73*Ia`AdFdbsRI9+otE/=<7k#-O]#2Ne+cmrG_KII6fTM`9N1XD2mi%1ed*V7)Z%,&7%b8*`)$MA0nF2b*J#"1lX0j0H_0CKc%Q:5p2c7)X9h@sPI$=dE*pJ\E3q)I8RDHA,m/'/9>2@r0Rf-m`FMMr+Y4XCZo_?n_mR%V4Z$GOWb_3>lmom.o!E5`G)[,GGI^j4F'81nVE%NZ?9Fl0cCscG?IrUdrHHg2F@k=5Rc1g\M^\3Hh!Z'hP_7U#!L)l'bfVa"Q])]%#$fB3Pik%Y/N<:&;9hP&c>f:n7QsD?Kk=cW5/aK3]>fhQh!!5?MApc/2i+pkgSWZ0%]I$M5um([-3s?e,O&Bjk'jd,3lf3di!.iL%I&k?-_Flp;YKJI(oO3aj[Hr'/V':r,D<eo[SZog?I8`_R0?2?\)HmL=L5XR^gO8[m[:JCF(-RH`Z@:cX;,)c^]mpm3r*ECQ7W.EJ%?e3A[R\rLZZ,.jN4kOM14,_L"4@'@aJhZGnSM_TnZWb@-*O1pX3II%+>[J;$T]FC@"r(f2DQS9AI-MRU#.`KnYh#EHVo*dE[?6r=%"OW,+(PU'l]hEs`2>:<C)1%6.TuIgP>OHuK/chIbB6@\QY;.=Tk=MFHiW(^C6:;BfI3Uq\997n<Y3NG74$XUiDa/<fP!G2D'3[G8%?=rCQ8$hC(h+bs7=DjL@S@`DeOYj4X`LV`bD?V!8k0#GB9^,Cc5e;LbH(><eO;>kLG)5/0m4NIQ5-mJW>FuV:R-K?l/Me<`do';j%R,^+,+p71%g88@JbAe"pRXaUXrq,3n,3dElG(@?\\5sM/T`RZR*<(JWX^8n+9@OW,%B_;'S50e;[^P2j7(9eOFcK2$OK<,'(%0*,%Z4`GOim-ks,/Af5l#k+nLI3eH<B8^:b6k>e->OabKp.c!RVMLuV.ZG87#'f27s@(:WN9hPm-em.h'F*FiZH281@3>t&]elBYu#cf%@r&LKCRU.d=Ws(p@egqe`rmjlD@L)QNBNpD(BWX;3Dh!?a/D[K1JfIs=jgEL\!lHpob+M#KIIFNPr*R?L`Q3."XGiV;p-uKm5obK%.PtRIH!\"KQN`urBS0$!kK=m%pPn930#Gkgg=OBDgnd[pcK(IrPIK6;7*i!]VE2RiSh%NSolDkt-F-<\UrV1]2UWH<Ecn=6K,jB,%>k-tHOGC7@*'!2d2<&H33o9uOp;u!sppDo(>]iYHON:7b3&qt`=^^e_f6,&BV!R9r<mSubMo%ksXQ$f4LqdEF=YQF`h[r-W(mU%(%UV"UF3rU*HJi`!W^`L!pd*1pf7;9RMVNJuG;WHBN'5^!T>'a3u/S]iAG,r.O#tM?X0UN=(omY,>FsC;U(qiV*cNNa$Nn:GVc/D:@%KVU/'Q7M'ABF.o]a0D]c(2sG8&^>tXNi&:j@@dMe'K&*fkPu(DFR([15R`G6>Kb;jl.A.+GE3Je>(ffTT%"AdYj+'&WKtcp]M=/*%^XR/2;%11h.G60$R]mKuhdONO19bAR^t,&F]dE$7o$s;S]ab(*nD;c\NU+a^0\TLdRHp(UVZ'hCHJWu>h:A,IhC[C`BUS(s\0`]`%YdHm!5gj>haIa+FM+p--@RP<RN4`*Y-h1d?aGR0A*%cVb$h<U?f7ja1/?TX,&XJWkYMo.q)\E`"`Mf\65OTR!\s<5%.<&^]Ds](4%\*ne+f"Q%QnVY)Y]W2J9X/'IkXfhYB!\9a<PnGhU'LiXE%gIB,=PD%RSW5PM8/.4"36r':)gpg0:N`thA/`)5c)rY;nr/Wj,3E5H%43K:C1!3.^2/W09;KgpnM\>@T;`XO'cg,2V[W=5_jZj/,O)4?:Sn%])_"tC'3hKQIl_7laDpK)3r`XbMYKo"Old'/4]"PiH*;RsR%X1J&;.Hf/JqhGA?;$9>V3NN]<nGBeGr<.2dH$oBEmWnk@]4N,Vk#CR$F%LR=I;iYX\MrQ?r>L^7i`:(:%1kKWh4+eZ4/lCuf$P#&%NcAi-*6f>NGg%p`L6'kg0&g:GdP,'upHEB=dT*F3Ph^\?C#t"1e)Ur!pu(?U^km`J;`2_`l\KtK4SdfHJeacnBdMf^>+EF!NV%p(%=%7Y;GYq]q7*DUa\kY:M9dpH"[SL]GQQbLkh$9P%*\cCYX?RdV1nt?&ZathQ]52\([X/5'SdolD+f]lK"]as7;@]IhDH.#uj3K%/%\!Ws$W\9K+.!`48?7*I]9US[8rMY^(V,:&aWJAEQh%e8+pS97bBk0LC"=7YG]l'q)QqfmuCW=A,b\o[pB)02Dk%._!$=k>/P&:#)%X0-96[H$(r.E/UEN>n.$2Lr8),elam661;P2YhO:eD?t'k`4eCcDWU5iDnphOaK,e$V7+G+nkLbo_u_N7SJ*rJ4GbZ8CZh8.Ws@J%3TI_eqT">iMhDk*C3"8=2mP4aPE2oEO6`[Daks$s9K`E[FkehIBgAd,-P[ueA18($I;hie,t?n(Z;4.f_2[:*LbQZ"2-.f/q1*]a%7]XsTB*]6%$lihq)6<=mU#%e*or8lfCiIBS=Zeo<6d@Y@&]iKRWf30-N+Y.2[MbDP7CcqiEF_/?q),$B.0q5aaIp\#ds+r#[sg6s%<Rlp^)-;JIn#:<_aAZ_MU0LbG'#)=K/E7BG(C-L;fY4fp(*e:17[Tt&k>V7Q>?fcO/+2b]/'?B%W7sf[c`OUQ0fhOn)D\F.hj3`3%Hqf,tI6q(GUQ+^lq1u<8efOdkYY9Xj`Ld\HG.hi7/8Z;/I`n?Waj$A<hNqu7I,t!L`HA!Qd%CY(&bil63V83d+q/eaT4qdpM;.de%EES:%a6=T&>2Aha72f3SnBeF1VXC39NbHH3B<@$jCHLML=%r5d+u10j>aLIGe#P4rR!&*^3fX)kQMU:e.iq=9d]*LVFHNb9&s&,m%D8q]7b&Bpj.ooNAX@OHIRDt7j$.ZE[ekb=`0ZWZ-WXIX"P4M0-<AdHOgj&BJ0pZBi@X0R^R[)]=o]OMfGIjSRfD2aFHmtBG1[Ss9%SMZToR`655HB/Y\/o<ga-U#?C6>`/mX.9tkV!d7.?&_JW136^@[Mt"p@2+\[W#\NK!20ftfY]0^/nXOf^U;(#e8elLHoE5+[c>s'%hVX2!qmu&Lc_bCD3*KR7%,\(u3"bi4`ag=.PbNX"#0#3I4(*iEAS'MO`+Ml94R?J;ej'R'%a#ioReWL!Hl;^[4(J)gPo>4g.-SP3%?oqZ++,fG@:W.1--82iYOMOcse&I40m)8,pJ^`=M#st.=b;2Ls!9VECGAaG_M!'6:0X\Q.NY)fXUW9aED8d07ac+kP3Bf2",sJ$h%dc7=Y-W6(?#%[>u)u48=Zh5SJo8BukF0u;1/ed<g'JVs1!r6Wh\$)9lq(X'i07<OR<sSGP@4uVkX0Bq\_^9;rP'Msr#Tdulm?UDl%M$CESmZ'OaJ],ug3W*K*n[;s<+6L8R2Vlb*K's%W)5d-&'W!']Fj0QP_l#_JVQ\A416PFlcG,iQ/K_KK-L:)jERfomP(L8#N=>`L%*[jAfCr``mN]?IT_!9pOS.XkOh`'mD5LM[^+WO?u(b"qP9uabrP[YUBfRak+XS.G'$rcO@OB+4OBnOc##p>sPbQ,<XAB/BqB6\*-%DO]puP:5(UO_8,L0]QG5q7`jd&&+e=FTU#N()@\#@YtFh\K]Q;pLhj,%E70L#hJ$abOFI];C[M<&HM<CB:rT[F9^CTV+D9k*kOI*%%\lq[":p(Ff=DFfd$6oWGb'P#YI>R#)(g(ZdGL#mKD@:P+JRU$T^H9sJpB#3/ZT%>h_G_$qPjnB6Ml`UTO2,][M0$CE/!uDnrT1m%,+GT%iab]#\1X56L1l3o:hUaU">PT`^t;C'`tg9]VUm?=_*XC[gF/M&dtt$Z\>aCu;>;R#%VptmF@mW0"a:\/([%l2$tOUDR\-91%G'k.B^7WFulNt&WOf4"$AF5kF5sc'(K9?@Pr>nPfW`U\u_NHp+V2P6d[Hh'aAd/emD0K8<9hK&VA.eaPenk'+5*AdjCn"WdF@0;l%e%B./AMfgn`Y"MPLD,9EA]JBe,<.5>%MNbHE0j%+[g7p`'HEa!cdjqGY[N,&&`(#+QhE+_qR3In^7"euHLPV6$-&Q\OULKq<.SuU%p@am5D8d[%rKJE2nS/XMN@;L^4U<T7jNFtf'V=u9UEg"VZkKU&_Q?=l@6(a4CCF\d+ID=qI>u5O/<h?2Z'3ZCZSHquVA8FfjILkQ%Mf,C^JVKK_OL;k&@N9f]1?X'23@2a,[1l/hi)/"Ro8ED,+&0tgm6a#-IIf+Os/)ajDi1"`+&UO8D>GF`r&7?ps$(13:@R<7Fl/@N%fS8oT.B,<X(aT?7;H"6-F0=W,WAu5SUHi^SC6#>m^\6b@Wem\kW<U(:22B>kb5"la`3c=@oVcL7(u1cIqc))c6Ca5'IT/00kX#VR%hl<,4C3@.:VlGSNNosVHF.DKB`*68`^uKJ5CQGRZOE.3%*CEkKS0!K^7oo6CPQ<<"he?RER!j[8H"8cePu,=+=j8+d#i)Z1>>^V]%9(%hl`$Ag&\#e^WRA3uqo?l+,=N$O!k\@j.(@V&d<YNXrofH0uZ/J"h+/53+WquNgeK">k/YtBn<HECTDBGmIK@@;Wm71/tCfT-=%mo2/!>1)D.eJo.=.-^6"C1>o+cL4^i0m<=ThQ!#3Tom#P<&KFt8s6N.X(i.(;&WaiW]:d2)uW-''2u.ikTd)f6kbU<pS_g:cpSMl%HW2j-+NT[kR3AVf;,P!8XsX#*U76DnC(;Hll?Bh."16lj+0q>fiW[`<4L1EC`pnS.A2T,r-Q^\ZX#VG]-6Fd]2$Xh-0$/P-C6&*X%92eo5W.`MI]V2Adn;U.`rQ&`6Te^<O@>CrH^gCsd,,VI(YV75YaBM_e^f53aC$KGn+l3<=9jQ!EL$k3Zpt!t8YbnG^*aR%<)3$FG%da``UX4/^JVl9D=#!<Wu"V%JR2+J8IH#SX5=0l6;n+W/E?-Rgt^=L$2FZ%PqR3kg&>tq]e,1?>=eO5L1Rfbm/23EBXedtPa:#of]%_/jO'9k<)F]hps@@82CYLZ/1Ef'K2blA1't#]!&ma>f%kf'Mi6IL9kb%h_bDDe71r6>J2H@82tN7a_#dKf'f,&Pa[cKf,"gBWdgr%@Eg-2Xjiu-YU2\8[A@8C#]'"4f8K-S'\5[pC7-7pKf.8`>15.q#]"Hr5<;lAYbiIMS3mX!@_,X=bdXf'cY?+NL_SE.4*.tE0nhL4%6E+%3[(!8OVgdKiob>tVRnlHn;HT-s$0&D&Ybm)M'\cDh9tF:KlM!eM'4nLq=qWP%!^eHCFe:BU<ti97CAN\7e\ot]7e5-\`7Tk-%8*Xj[CIc@fO05AP.4oY*\sg:b&nf=]X,.fjZasB+C8/5h"WR6`e`>JM6[oJZEl48B=\<*sP\dq=Dr/@"?/-/1GRIs):'sA4M3"kf%0.E@]%q/2DAKQg?L9RP>EPB(c2>O^H^`T;>;A6Ba@>\f/C-mV=U7.I((jS;527nALOtB:'9sn<:Y#)'38qp$'qa4@^`g24),+msQ%XVUl6C1:'rk#5=0PMV1$+fe0ZLj\J>X3'W]/0OeTe\l^5"<pcF;^,3k!)-NiX7%c!5%HO_b4p(-%:)[HGuonRKs%;m?a3d4l=scI%Jk%r7RaUb*p>XKMe645KM[s)fI=f6iO00fVf2=fDRaT]KOP<u?P7F2bVV\VI-tl1@l7K&n/lPsigj3KgOdMB%a.oYkVUMp7B<#^$%Eod)fWN(dp<(N+IW[>WX$$Z$?C8)s'MM3r1<R&fI]Hu<sWgY>9[:RUo:t:en(BMQP<D?YC*6CIBW[<cDb+>K1-C/['1]#1-dN;[D%i$59OOXmJNL8q,"hV)OZ<R%\&VKDQ1<Kl#d<QdY+C3D$<YbciJC,/b'88X*]VPMlZ%=_>7]=:\>^%nUAG4C`!d4A6S]>T$IrUQ9)%e/okDr/fIY3*,\KdFHaMM'2T@ea1:&Si!EkqDCt"m+Rd:@EhPX:?A=5YU65IH9>6NRPK^Ek<iCYj)"%SnL/0ri`4F[IZu]%2_+r/%I4/l'?I)6HWN7Q)^CWjDA^.AE%P9SWAPMKlWDQPrZQ$>L^V#gh4*ZFUmsduGFqka:(l#E[bE7$dPLb'iC!@-<?ECXYg6sj(gD21F%D,!\9TS@V.jA6Z;U8!O0$OkQ%W.dlZG;n;>25eoWm'*R-1/0&P%e?WBa/t*DQo4S,7uZ5FM.#&u?n]gOm!7d*)(S.@[nD+iXH?Bg%i9OHbf85.-@rjH<>OWI^'L_epZD^8A;hC-"r`1^sU5#QJn&pCi,1aI-00']$m,!P3l/G+^3?T6K`VIE!cs8,rMYQbE<&F:nEEbMD%,ZX[QjVBe4E`?bs:1>Xm\,rp1VsX;hLeM+r1t>O-9Y8pLgFj'UoWuoB4W1^6+9r-?6dBbW].;A-+m1l<T/Q02aE\7XRVeJ<ORjFt%FL89*R\stB^`G@/9Z,%nLj@-`C95&kk)")4G7eS]13kXQR\t%'P2epS'4\B>EU%fZ.aP`V+&gK!;jCbdLRom&*eBe%4\qKY\##ZD%VU[91pum"G-q)+Nk;cN4ID3AU4GW7Oqj.gRc[h0nM#W4"k<KNOV4aRD4?62C(%T$!4C9$DhST6^f(8h81+k%cC&ZKN`&P55ep<o-%iC^ErE9MRf;-Wn!\"4rXkZ6FH3DU-->H*rZc?#*#'E%bqcBF=#Q@qplcdu2hPbrkSbB\,.g&ABLc4ctZYUSbW'8B&,+$!+;/u<a\%+m5hk>MaHRk;gn63)U(o3R=C@U)f(\c?"(6MmY3V3DW=mgURSQ:Kg+X_4Q%F@u*_AIX17)d^h6ag-a3XjeIBGO)\_o:QF"3,%H\*%-`10MoT\pUSB?c!_ahucRq_:44\nam93*nB4>GZ`""".6'f#34OFj&,)`1^TJt<':Y-&f./a,2_pNFtU`'CVOo&iouPP@WADYOK`%._t!lRZa6EL\m=g81?LW/[dUA\"kB@dAoKhSms)^pS6qD>i^4D]G3RaH@JUSc[d=:_UD$%'2u01l<DV6/S&SI'_EC?Jb+W>-UCOW%^G`:!O.tg!%RKrL#iP4R<u!*DU?Bnf?bX?\d?>n<,r]$WH4C[-.$pQ`T'?>$gtmp[FM]q+;_!)':^P.eVP5GHXC8^'\"`&In8ZWV%-$hSif_0c9irG0M3l-:E89uankJEb=oH`X&SUaL1:WGi)ebNm)''S.`)+dOuKoIZ(QC=BITTaGWDb\P,Nh6a78CMWHV.jP4eF]9j%7o^]1Xm%hPa!c3-BR3EPa!`JSR\%tpMgX)[e.^k#[Ne4(-gWDH4\/T!T0rI9Eh'PtrX(g7$!Wb6:`T,D1Oc[XjD%RckI&P!Fi3iT%An3V-*"/D4L[VSgB'!<*',"5f)SA\&@+\GbH0.rQag\9SFR/7PrQr3;OR4]-(ZYtdfDi^h8k"6Kbi_l5.>((b":O]$Jr0TXdYULa%Qa:14Vj#6D4\VOF0eFo@d)E/,pT6N\KD*S$*Vn2*/b6g6rh96GM4FVEs86`IQ!0a<q4I\e*Yo'GL*s\KYjlWe()-[D6@hKgM<--m%Tj]j[-GZT,dRO1kMgc#G\mmSJol:hFI'Ofj!\S"5:uWRLV8)15>:u@t;R<<1&[e][>liD.Uqj',LQ9gDgd<saqM*sMdL]#i72BW7%pIHduoj`:Ync`>pLk/]TNA=W@iZJf3UB&uI5tm,gdnjmQ-1lNeb8J7QVm@3iL$`&=g.\>I'ical,n>0?>&/IT,JUUUqgqRur<jEK%ScF/[9(?.69njhO?^6op646l6)3rMk"R?;9Jf[[U'NGcFZRe9Jm_*&@g+Sd]jnrU"Gms4BTC'+&HTFI0RH@8Zs'[coi?-[N"JQ4Q%)fdgJ]C^?*+'O2^%!P@<dUoH);]CRLCQDQm@I!2/dA7d"SSIL@JLn#GjG/c+"BcoDCM<=D2DTen+$cLeG<l@jctb+V27<j%WrtVV%#J8GOTYs]GMcAF>"_&nu:%_,"SRN&29bMioiFsKl0!hBAVrOk3[uM)PYeCWPDXh%3X>@_=-(ZOd0Ld\SK`!r#Rtgo04gd0DZlqAt%VO<sB)L!Z?.gP[MQE\,,AXZM!o!me`79pA`oGfHK7O?'4CThHQDj!<XDP)-1^eBMTVK.#O<==%oVK.S(kr:+J@Ce=k#TMD3oq.4)%_H(ZK&1#(oNT71^N".VRR]J!4jPMJR=fL/76sk(PZ##ab==rHI^FbaQ\Jd5gB2QFkFMr]JN/%IZ*Rbq;]9K=$#W;fCE*`16HttME%(Ikik.7W>0:G"O>QiaX!<R>u"H(0inCMu8JY/b?<<rAI[].I5TKLF;^+F'ZDLnIEj=06/[`ZYRcF-QjjkhFnVNUT\b:*D$GWU:WU%E_37O'JHMCs&\#Yb[%1JIlk6A.$!?m+'tOGNc<>CZ()Yua%d1?7&Wl(\;@#]=B;=n_ss$B/`n"]7KNZ:fLn-?CI38>-hcd<q]e@Z%RI5Y"]BGWlDRF<M6H\L.)nMT'Oe\T^[?ed"R.MJu<;@e/raFM*?%Hmj5al5l'u!<N3*!'Xl^lIElNS4U;b?06Pj8"F3aB467"r_m%\1C'J<HbB*Z/sp"HmhY-[SdIY49:p2S8Zkpe#m`u>F3!?0&ISqGOhbe&XTcZo[8PD%l4m>Y>H,hMp("X*.eq:*HS,;1\J>`Ei#R[%oleS[!gdT+WA)Ij(bl+'/674\9IR4`@d1d'f925NDeu:4+Vt<CN7Q@H6a-o^,&rP/c/V9p6T_hC*naDN`])PGAK&&3<6UoM^/GFG%d.TG#DFSH]GGV_q-B;Z3CFSf#A\BXRD>3h9;ZqH06tD8H6Ma.uCHM#__k7<u'sID\9$CV=H1FT7>0GtNcak*7k>qA>BDrr$".>+L%PaI%,LeKn.Uee!K7[k'k_I.9?)AKc3k%s;Jg1:?:A"IE>!s;.;mil78?nmDWKk=T?L[aUlU5lc*8%AsZ'KKbgFW2rT>ZOcleF"tY%>GR5UL1XM+kFDt*b@E(N^3tqPhVkV!md/"J%+Q6VTPS"BAQ#2HA'5qFQ*,Q5?I=E<5K/T_a&uIj+!k5/le5bdeiRAtbi>mI*$1;C%:GE#?:5(4=!A#O=rUn&X)afI*s4X]i2l:l5</)k"&B/+m]<9]tf3KS+QqEq:LSqFGh_7Zc7OBWg8/4*Yk$c)J]2%G]iV-f!;=Z6$%CDrTs"T;nH3E'#:24f-\lu8Mn-.SL2F;m#bmF6O!]d',[:O^97Fq2t^-XQRmI8J%#Xq,=0Xj],/)!)3J2HZee-Ya!GB/kAm<aSrL%ccpom]bXP[q:%k[#YsA7idaM%g/9Y[1*$+T-28;uN[I"-1fbPhJZS)],CN,9c_dG4n'Z?&cS0((<#EPO3&1qu92;cK@`5O6l*c_h%ArBLY[LA:gqQ_%n2q49OKg.eT(HPDjlIY,'l8u2-7VWX_aQ1$:os[T=QA]'n9`5JZD_ZI&b+J!>o@e?N1hE#M[J[9k*QJ4X@OOp8%9[)%0dp.BiFA*8qB?s[RX*Filcb.G2VX45X"7tS-hdF+9G'4p:E0'PV>MH<4*c[b7&S9\Qg1]l>fZ.mkW#Db?2L56u?"El%l'KnD%X6".Z/+9!$o=;Ci##itX>*E?#p%XP#Ju19iK8fXZ+aES0^bBHtE>:/S]"j5B0l%#dHA35&QO"Fr,XWMHS?#*u[?O.X(*'n+/WI%4%&#rBARa'l2=B-TthOI![iI;`&V:4J\YmH@O:p*aWf&O'KWmlkilc-N\liX54-".Q"=Ec*b[C<eK[=+ES$qfJbA2,Bf?6aV2`aXql%h>8s:[^nMjO4UaeR@8F"BXU"9p5U[\@WY=]W'n.6N.t?EIr4g7%3o:l*'L2F\L3m/1BuqR@!\\j(PN'?nU&oIe\$mBE^?"dm7mn^%Gi'JLZJAc[T$(<MS!ND#=G7oHX6U<0T;d4"I'Bquem;KoS69O*)?*mE.n>1fRXiphmW;B9CW$6ZlD0OR-hEml9&_X6h+hMR-ZS!]%G"<q4kIs#0rQc(,8L7&Xh(i9/<ebI`p["%`<M[3@5]s6]X(_rs#A`CC,ep72oC=ApU>)&ncQ^j))!<[j?@sRu48O2-$#%6h-s+o&%I./%%__Ne!ZL%@gHg\up=+>_aN#V*)8Xch[SmHC3\'JOJL1Kq"\aCO]"=Yf@lQ!os3+@jdGFhpXa?InCj(*i5n1J[WFdP99]E)aG%q1La:Qc'0eN=Mj=s4"0q^NRh?a90R&E?q].cJ4iJ83BM(&N:`C-)$hrWRZ.Nf(D`+f/^V1\gYdd#%.&FI%.TMST%W"rBon/DV46j%$'$-%pF8ofYXe?&(0QW6kqih.0esUaWb"gHLumQO^WO)r)9m5$V`!CDRd$h'[lNWR'2EWuXi7EKN&\]+'+pcqnr2#/+qBe"Hk(!J%+Md`J;nh1^`,nYl%D&8c6u:<M<r.Y7[qTtrFGp4fTRFP`4RW0gI8T*\O[?o65,J`S9K3``W.sle3R"Y$86Cdg.M:cc#o`152:7Y1%f$%02Xi>eDQtnhJY41"f%Z^>;,`%P(GoZWC:Q&Fqc\6.YKrm&"giB@POD4'O<`apP(,:Ge&tS,tI[N2VV!C+EnX/,hjZZFV]fZ+E%eB6:Y=7h#<`gH13EK8`L3YNW)L0WA.,b$WiUSK);l/Tr?dLSpjNoRTCeR"KNKPF^'p7W9PU7c@qY-?jKKUI\1cHKYFla-O-.=f39%+;$Sd?rd7[ptU\n:?-[<[ZM$UY[/1q&%th[!;Tm%^o"M]-,o+hn-N:#PIKsN&u]Vd.6"f3/qm+p<ODd2QVtVJou.Xj"`arOa&K`'%5j]Ik*T5,Rs,]ta5Lmn<\Iao%A%@q7PkDEJOu]FsqK>I5B@i9%6_sNG2WR+R-PuM*Q3fg7ZKtq?b`d#dU0`&:8-s@c8M[;)AE1X?%Bff%6KeeYNcLp7cc)"5_DKL!VEQJeJR2j_+n^(WTbl6_-9pR6Q@=O<M4j$b'\n^LTN(VOA1fp,bCOX"jO'hi,'q_[A'S0Z8k]YEr%ABW?Z:cRf3dnJ5<9F;Yph/GT`3h5j\@E77G<%kt.a$NL^c^>VU=8-cArt<()o%+]k5J?O[-*ogY`SVeZl&(c?A4i'^K5WLlq_dlp%Z\2uD+]ZBiN(-Es%K`;t0)+Pt,[CJUVU%k@k"CpG92Kgu`S\XcK/'s"A<m;$5Y$I@!L&t3BQXq.D21)Zfm3pYMY^oH>0:&ch)P!s%-@Gn\(]gp!F4LXkZ(cL+efY,o!C!CF"$=FTk5i%#e+6LoV<)Oe5hUcaF9U2/Oo-"OYDec,P@_l_Q#`3C4N`[&o1S/?)t:.TGWB.;%>sosL"PkP5!RC4k#d"5k1b]PmR[0'*PZ"$Pm0dF5%j]S?Pld5L8&Ni@U[=aimTPV<80tKV'3Gil"WRQW.aeC"R6'qk>1Rr<eb5=:%J0qdhC81hL2ae:/8Rc<.Gu`jH_&0!2-)4:Z8e8-iq6CY\%]R0U9UeN=M0dq)Gu0J0V]pOh&aZHp;Ip0r<CKW<Bs_;*=H+2YZ(]ME%oW)"oCIB0`-93MWB(^u_KNO(T].>9r!2gjp8Y@+tF0ZDFJKp"l<G;2m9`^2\2hR<c<Y,a".%eX--W-@1;%!iMq)>ORA*G`cZ/j\Z%6KVehf7iO'fSY'H'BWNL15'M$QVI"+$/Sn2-pC%h/5.Y63g'FHGM%Ppk^oWMVMQ0FjNmJ$e9oJN@SBSc(#2Z`;5/S;$1Oa!J+_1a%nr'p>EFV7qM'E9GI$J(F[;pW*:]r$pnK/T2,]!J#:TW;-dgUnDZ#72.:3rOa#POpQ?4^7V6P:1_'25g45c3Me8lpbq]00ET!&Y:l%%92._W^AKDJI-o%>W;efF=oeB1)1r\,oLj]eQ+DthStpeE.pb,.dC5]Jdi08a%OqMW6l;mnMt+7<0_->*FMX&Y9nFLY#?!)02-t+%Fe(g"r0UBUh$7_T'?7Ba3p:Y(A-XeJUYeK,H#;7f]\m`H-p3HgZG>)P4N=QVV)p@GO?oIB@AtP&(>57aAjbN!OL*rjlDflY?4)E!%IA3e1`iSU@P=-l!;;[KnldE5/2Kc'Pj%1SBe>bBV@W:W-Tr:@(a#3uo3XsLaTM]`4/DgC4I?YZ%*P!`>9SW&E<%bQY!esl%[oV*1%?3st<?!"(SGU*fnBE[Z_LUJCi3R/%cP-*kq<5:pNh!6p+.u<1U?$o_YHEN(`o]@Gt%4&N.9`;>#g]Tn@]Tkh2j/1?.1BV??Rb)P7%!X/_!lJ^_0&j\0@6s>?qOG7C7-/hS-TA?8#lk1:N]NjPKR((fY:YOJa?g,S+7rXV,7$I<@BYKQ]d("](jKpJ+/]AGZKIt9#_1El2%fIfoFN[aHL/QYG>MIc1HH7G1*G9_(-!2Rf'*XDuXq")s\`(D<t6]O^(W9fhf3CDpHgQ=!T%T6)ig?c:BVW,M#QhM20MTmhQQR","%aWK8(OlIZ(F=\lCe&.Lj/p&7D_HJk,IoiL9M2M5?)E4[<QlB&1AQpD.,9X%_IP?U(>:.Hb).r>oMls;-p7O4t.kYmo?AM&7k>`PW%hicK8NtF;d%[).kVblQ,$Ios[('R59Y5-B*;CG,B0mQbiVgVW2,52PjK=X'mf0858WL8^qY3#:BA!;C:+qF(Bgb/\7Q]^6WW>cg1%U*98O(R:Gm8j>1KW1Mo8j7r\c;4)I$L^t?ma=7L')8"_X.k*/V(s\'s.JUJ37dTdL849L!>u_!q:O+5r(r60;^NJ;k)K3TfAE<BB%Bq?'3FDj#LI(7skcATqRr4rHlbIDuRILJ#MPWYL2&pLQ77fkfb[^?!<G/@d;rioB>Nr5Dud'">n;"^-YBQFiWgQ&/li4ZRMT>)bV%)mGshP[u*B3X(q)A+E_c4qP#$4p,'#>ti+caWrtK-5!N)j@+e:`JCRl@IQUd7=-GI.epYXX=9\uAa$"k6aI;XcEAX"XVeNYC::U%%n,i!\UF)r=\6.-!3HX[KJeA@DYJkBO`Bs#_3HOg@>O%5(\OhAcP8m!U(AD=$0*pE!<$"JTE*Qd:cq-Y+25F3_P]ZR>AA@4o%#G;?%=GcLgjnSs^@+h)\4;EfFCNrqO]?;:V@hO-fHp5[C2S4MQ8(Bt8Dj3\UD^q*eJhbAOoV+=ROW&6KjeBT9d'R$92n(>S(u['O(3tR0%7%n[(W#E1+;EQ"`'95]A<Eq]&O/VQ_90SiJk;sD*mo"+;:r3fG>qNu,A+sZ2IVl/e-l`k6eGJ6H/&7i"\ksP0\cGV_c8>BsOr4\O%*%*:P>mYO8%s:O^iWuN8/L(U0?M!mEZqlo]f9I@;]nTIDV.56_kb8]j\_-$KQlFL$=<G#\'/_Qq+P-&/kuBSs$3ATGY!Q8@fUFSs%77e6u>1M^V=6q1fop@JgFj-l$\T(H\Sjh'CR6KV3jjdn!kq/W>>NY2g*)P-g7YclB_k"H#:n^2b]u2`$fsrr@HmJM2Q.D<BJ=7RF%l)<=u5,MrrCa\*+/H,PR(kbM6VQ,=s<OqsS>bmqr6L+fu3&?'tKl47CNgA<)B6HSIUP1?G[$j&A.Y+8WFk"YB[u'A6dFLg*'!l/q%QQBMF<2n86o,.^!qaOS7;"A@@F01r,42%BTQ500b!=F/Om//HV6N2e7O@B-VI$[N!<HLm`GQj%Pj_*YseDnQ#etYrHJlEj%?='W1%\o$RC`P`V5q"a6-6-24!#-)s^P0'XZQH;-s[ZmNBKk5N$I#[/^\"o9_k<oF&PB0M*Gh"]tQbt'_h/'p.U//:RE=eUsajL`ZE"@mJ%-.o]G>_sJ\f0/Z8h$6kc=/p\51*>Y4*F;SXJ\E$]?rJV'%tT>bDWTQr[6Itm*hXu%0TGXHFN%aK;7&m"m!+Sk!^u9HbZGLSA`7=*%@urIWDJkr%gnkYahQ^=>=&#FULX)j%dsC:`RnpMpcJaRsG85\\oh6-^X:e#7Aqi-V0sRrr?JHUfr2`*$CU\9=+3*f_<kW3Vs,a4H%\96TI1HP4sd=&UXPIk^V.1sAU8c/J.7:`k[NmYmMrJF//4?D%AYpXkQf88=4#bZ6[U8#2%]k3e-NSTU<HF\<lr.7"QE44-Q2(UR]%>u@;Xkb9iRE-op=r"eBk`jW*#VD;=/hq"o!/P3V!&[&2d%".loSCT.<>hcmW0^M'CU8D;_B(f1PYdn)(<&%I2JjCq^J6ko,`!/f+%QWdtlS8q*knYG'lF@DR'3&^mA$@3<]!%l+A3n+t%/%.S#2e<_KO:DUY(+UR^_BtFJ-i&W$Ak=7`q;%Iup]=1;guc$_JoeceA8%!N%N0U(;%gXoc_Os6CDKiXE1u=/JZl>);[tO#$\oNH^\_'shg+T-&;I%.Ebpq$6gemB1`Hi%AgOe1WT6_2j$5bmn7`stS[5/Xs/`MOq%0,cfDh81kdRJnTTNkr7&c3iUtKIsp#b!K(oB\`sLmI&tEBjFl0_QY9mQ;dg&MnFs3lH,WI`V\1'fJB9#[FUUeRMC&,K!H4lkj4`k%UAZB%^72r1\^M36)LM]Y`9\O/FX[\#BcRd27B>.&E:2`Lj3Ua]M!Rs>ULJ'd35de!?1ahp\>pIlIC"nF,un0$_kXS)q#o_E_!eP2%aQ,?T!S?O\lSK6).NOC@oEZ74+I<L`5Ghl'gEXIC`s^d4FW.D3:iKe0-r%"8Mu'NeK8-(ha]8jYE7I.,YplOd1'Vb.*Vc+qMi\F(%-`bml'f)t,C_X$F#'`RP*NNtl7pc(@2fL8GE6M:aj.pkA=\m&Sgt*IDR1ku5Q&Xod,@YAUc=FD!gq!s,ACFZ#P,co.S8"S[Q"]m@%SL`n0L^5UZ[o_r7H6+pifU&o;7&+$LU/:l5Z$IKD9WF_*.!O""=u/*(^8VetV"f%`_C@Ni@')XjlXMjK@>]=6RY.hO9\5CTfu\@i%AV#Y#Y>cuc8i8SEkR>=Ejb?2?M=%,#SRP2ihn+o:+.G+nfK=M+%g1r_%2fC*dF/>]fE-c"!50SPbWutOZ5jXGciFDc&N-'g9l$9.%WsfZSWW"d%ct[X%)mkkqSiFETEPAe,%7P8g]+1gd<kjFnXq^]=]Jd--#+"IQP]fqO;;jQ01Pegr)?)A4(TEZh0DW?Q\ZOF+KH/a:%U*Ch`mN65!1-u%Xg*XL)FWts2og5O;%FFpf:E=(:hhPQ2Ph"1rpj!.E.%?Cds&)J;\"!&EnMZlC(dq,8Pf0m%rE`CuTsWi.;[ib@%!=CWYA:Z\Fcb_;0I=#Li?(n2>D2etpf_7e\mBrH+)u"NCch)K4\(ie;e.fPE'[k^C]PC"Y9>E5M7h)/I%Z#-/Yr&geTGR^)Sr^<3%oKoHGjS&Gn=4uOOJ*2gqE(#PgG3r@eQqkc=Dk\hoQ5q,=4RdLPh(T$4&a^![-Th*,=ha&1X.fk@>@sD+Wdpb*S0R7e[ZIpO1E)C&%.(p:2rbEh=p_O'!6RsAY*6%u`<Z`3>=@KSpYMbW'h!/fiX'5N$ZK%E#c,AA.Ae/>gq#",6)H*fL]um*/.Wi\j[7j`c8]@hIkQC*<%NRLt0*cpC)b.tkIRS9R]PBr4gi25>P'=0,S8JPuubWWp\I#o_c&qrE]EOt.%)^G>^"'6iL8eo^rYI]^.4!Ae.0'UC5;[u,V!(r1b%gl,0#&ab5Omd71DEoT+fV!KeZ*/p3G/s9=.Z-W3_!)dQadRSka7.s/*nsbJ"mnW3Mi5m-Mi!l;f1R!PcHqJk>nj#,6o(`)NL4uV0%(?;DIr>H9@(!H($a0u+gfDIc3B3D/uiQh-.iR8*ir3\=]]WDH-Q[W0O6'1:W]X13k):Pk%H)SB`,Z\+*nRk[6%\`^Z2,baF2CM0E%950QJEdnDeSSG]&coUq=;pi6,?3)"9?NZPo3V3sWZ=?6N,>iq%LR-+FeaJ=Y3[kSMD>9p+Oq)h^)kUs44$tl1'g><NqG'&NjM=XR%?tGj![no,XhL`q(mCTlbIM`P5--Gpb!+a_JI#X:5h3dFa9cckReS=&>$I.6Wi47RuBW%W1YBMEYCFrtb<]!k<=#$&-kcK^FN2B=G%)l<lLUR2]g\e%Nd]gb9sDaZlUd##rh"\3%H&trlbMIl6`IY-[!X9ip]r8Kg6I(6j041Cm(@I`_]H!^r?6tni^&c.N(:M7g\)R_aK%6QQHEhcd$1BIZHOR`^_LmWK=VS2gG6XphVco&s7%[+86G(@.kXpo$LerL[Li5&MW`n7^dsE[Pa=S[S#/?5&Xfq/G`#k54*1ZH@sL%@7P7iN0`3*QOKAK9Hr8@P9K=reFY0K\769FP.e[N5k]Il#oNH"@OG#KFm<9OH7Nkr.Dp8,!:3aLg<o@jGqm!i#7^2LH3t<BrLTm_%ks[SLWg=liY&7GUR-3uQS:N*E8rCMER(,!d9Tqco9c`Qs<JbD4FTj*il<R-Z/B(5Y`_OcJ,0!iGi#%7D9a2Br<UOu%XQ3St4S/Ht%Va1WiJkK7'.$=j_%8,%Dk-Y8RM$qW\d%Zb6BX*'3'APlbeYLSS<bt[bo@8bdVR`GC.?_]fA<f@K:A#BHQ??XNG03N5NH?-Zb7i3,%Y-rieI$dA6ej3g1Qd/3.8#aE8Ln>/9I+2:_q>eSj2^4d4VG!3npkg^^9PUQ`s6A/Rd_Op!g5K7JSRc<4gG1iuW!FiY'JD4OZWM1B%IoW!4OPIhtLSPTEs5_`bL8Y;Z)/cmm"ll9pm+$ul)P]-m7%d:sX9fA.;Io7@j<ukT^%tm5SO]rMAlC!Uq2<Xn5m#2E=A+tF46`u*%6M!16"cVA)dl8T6fp&AeZHOVe8=?B<"HQIiU)4[o1U0`!qeJIE?qfY2[`te2d#8dS/Y7^aDj)^_-8SCkeQ?*]il>GV:r/T&0Q2on%M-Gb3]DRDZ.[ojQVQopE[ne3k;QXV2IBM_5lF:j!*GY/Io2.'=]1PJ_>LU1mfhn/@b^=F'l:+b`OAk&:]Tple92gO0IV&s&.##Kc%lg#6"4g,-cDk3cbVYAc;0Vq*9jWnp';eKW*S*+#X";ZP4Ad'P51.:gM!1[dkq0=N=I0YCiFEdLL+Le?36r3qZM\0MUU0.)N5i<]L%X;TZ'R8i$R``R6K.S)&K8*?s0]K2HYihLQ\Et;qB\'CeZl2h;[Nr/=%861QNAZBA0L2$LXbll%tZTo5U2+)9ZR$R@3<9f9p)PC[H%ar>7c"Bq&)-/\)6J#XKp_]b$]q+gQ)jYL>`Ds^:YgX8UrMT8i@/PHN.FMS@H)h<9^m6b5KXZ5A([sn^Cnog4^@[^:biN?c!0fK1)%?.=u_Y.LL:]"kQX)ag^gQDFmm<X+#2dF0Co<MT$$A."<j2hE3F75pB;dH\]+E1-fNH-_G:]biV\`:Rbg#jA6r:&N_Z5-'[1qEqZR%&3j.TipOQA)pG0(K'$j>pM%=Sh@_Eh"@7XA<Lc8km1OQ"=g-(W^f!G-QHMmR*\NQX&=k+(-^tEIrQ&#3lsg*JMu;;b7O"FP*4Xh/%bdlYAVS%XIor\#u6bIY>B*8NBO_d;k%Q2TVY*m>=%FGo6KpB+\/kSp8&G=US2+@!.;=t?GZ=fbQ<K]l(Ku+q2A69K/hgSA&;T1cQ%?$%F(bf[1&Me;=*KMFs:*H-F"nSNft7Vr'%AS7+4ZSStE7gJX_rCGqEiR'):Ql_Et%@@^EZjgP;a\@X,HYEp**o?P:$kdKURZD8c%P2,O,<GO.RY%<s9T'U2eE6u!7MMacZ7MKY=&gW1,<QTsUN+8oj$?9Q<.DJ@m>RR>R1!!4WAlB@WF#.XOWu%HND%o@5dCud'Y7^24%Vu(bMrJ:/h#G!^bEF>6DD0faGK-K#JLH;E%kQ5s%Sd\PF7quUXZ]/J$fI9HN(h&QAq^=!diO-X0PT2ud6=.>1:S!H-;oM^Z.b7sY%-/c.KLnI8*J6Q+Eh(+QhTGH"4,836m%+NGK`5%bF&W08171r1FembKuBu5/6dVnE\n#=[*:o<@i&^UP*n=Gm`nfIG34W+n-Fs@$T%@Fs9_U4SrICdjR10[')m9G7Xb[[WoiD@c,LB]tt"gjM#@M=V?0Vl-Q<LFDZTo]KG^5)L`tKJ0pc6">f-2;1W6'YP@f*i.#.V`A?s%I_i.0p[+m]WC($sPAoLG(p(tL>eP/dYG/YoQ"&]:.!^>!WUK*^]Q85;P+Lnt%`]?/!el(d9HoJ\g<2=YY/&E<lFPnme]*.a,c5@<%)`f=1;HQW(ZcY$0Qd9tUc\hQ4jgg)r?!1BOZqFFukmA7j]/f2B6`gZR#&VFB[)<a"FlG1)#4'Fn$Uf3pB8:UlL/8`1"M:V-UO-/Q%kng[jloJ59l%cn]9DFH>?@YdJ0f/Fh#f9ptSds)Ag#?4)Q0ES$!dd\5'm^_@,F;G<GqI41G]/rbSb%U`dN'X6Gp[rpBh*4WHbZ/(%Oa_m7lF7#/J-42Y*Uc`b8K6&e*UjuEW4&"`p@<kZ"M3Xf)L*f,`EDAN65BTH]?-kIlE@Hh!J#2HOkV=NQk8Mn0^=plEOct7R"pmV%Nm6<&)7@$-'=R/9Ur=JA*IJVH\AKYfoF>mu@S-^j25ToH#1BB+%[t>]Uta=?bgV37Nn*S>ZW9H+9,CL6Tg4WES1',l2GB-i(<R6L%T1Uqp!&M",OP%f91<,[]=f+&)H4mo7a[ZXkglYTK!39;V(jfeAE#5OI.E<dW>_f8?;'[!diKhXf/GY\'TeYA4Gn?!A4)Z,e?aa7J%:rP:(L`^d]4@qM^6R$$.k)im6T;7&k4Ucj`l5u3`p[)oZVKkg6"=Ptl:UQdsQ:Xdg@\O&T0mUiddn&T1fu.X,*j*q*q=g+ip2s(B%Zgr48UnG"]$e*rr1TJe`DnV2?OUAF_`2XAM29f63WcsuCog[aM)$:D(]W]FA@joD9Zf<;86]>lnA&,D:O9@%^$c4Ii&=>"SU;@d6%ehnq:DIf0R,Q%AqXG8WK;iO0]H16hQg"i)gCY!a^l=>=eM&:gAKZ%>cY^nJi'1HD3/[K/T#P)$$SHMp/qT81NS"bP&U]VmEe;$KG%<-C*reNCDu!mK_@02)bAJ;93q8Df8(d4\?rf[aOg)U2h`dpO"%'<;6N0je%-VJG(_ltD)k#@_/mW'r2S35"hg!FI+_0sodrj)PH7%+%t>si!Ck01_HT$^V"R)'\:'(reh4NYo$>1>1d4crV)e?c(K9412NUiBs(/6O%^0H7]0"dBPCfbU"6T133f9UX;6CV1+;,_1sCDP%T@)J"XN`#Y!?<o:[oImX=!Q*CEMD$Y7&%up','1eU=<Vgc,pSHAqR#R@YKWc#b4&'P;pm.$<;kt=0?@*'rUpFj48.K0SRjUZ;H[?%QDAh;X@Uh0?"^^0A;!EDNI"&Ke[l#N9iP@SJuuR4QO>UB#N=#Z(69N_/@elgZ'B\:;h7'S4F%g+'A)Sb?qS2up?39)Nhnrse-cD&%>cgjsm>U98nNrIKDG0jt)ls:WrH7Dt="VTiNSuZ4VAo,2)1ilG<,\i?lRkEOIZmGM<im&>.^%b(Wb$bf)-bEu[bGiKYf.?IRK6'G%3a/pqfTuG^'["!/5gHLpb$Jp&7?CCd?/!h&hgfDuj7?8HkT:J1PYBgGBJL?i*KW=uUVZRNB!#O#OMU5C;=+h8Gf/)i?\Ec3@A3nW%VR2kBo5.!Ul*A"e^ikp\82!2IC\)l^JA?m(XQe!U`-Kdo\7NTrI1p*__Ej0.*\b=%HQ$*![T,)8l=3mW'@'R#$23=t!lhfI"C1"r%5&aRm]hMB(p$0rtGq4[GdX"Zrdc7oAeIA%O_D9j<YV.<gbJ<Fi&$%#BKg]8,]e6@>3^f+al#+TeY&+DN`dJrhMX@T[NKo*8QtdM"%l,JC%H#m-[<*Q<j\[GRN5:l5Mr5ms0*ZGW*<:ub\SVuS0Y;Q97fJ$_[a*)?b.Fh:2Zu<;&`'KffR`;EE^(SjehU#'!rE$=,R/cM@%%$&-e[kt6ENm*Wp`roYaVO")23"*`Ae(mVsO(@mIWTS2JpWQubJGb\.'9_i5%r@ISdr.-6,%Xl\UJ"lL/1TkG`S>*0Q`]b4YrFtB%MCaM_:NuTGX"5+2FpThTqW?fm`fZUM]9&k%>^ib2e[SIU4apr$o;M\N3o7.NN(m#=G`1UZ/a\;*+1<'?N5bk:Zu.3M)J#[&Xa%,%%Da&7\""%3.]N)QQVBVF!9YEoAi:8K!crE_l:(Kp:9[dZ%AX0^YB^Qd1`AM*X(Z/&uEAG7=.Lmi2Or$?*X<#(,gWC>@=BQ:J6$!:N%iD<YE0\+6kOM%f!ho(PELi=Oo3iAB1Od*lTafX)e+Q_o=h&[nSESGF=:*dh=cq(Q`72@H#9MIQ:.u[R$H<B2^1/r7/X80%R#jB/"%m.e,>,kf;N[`-FiGYbVHF2j8H_:)pNn4\s9%Ff:oCmu,Qa&IDuff]q\#+dNCZ\m*1R$Lq^SoJ3^R%--[Wj'H@Qdbm)bD]Z'l!/3u%XundNf9*a/<nurf2r!>n4R3ZG-S/]TcDtQ5m"u6,7Ym6"17<>a6a6?Z_a%T6.Wh\>lKCBOiXUL\PaICE?^bY4-MVEId"qS*%S/%3%O0:QT0#]&QNukjbg>]?bN>qV<`6'?heS:u"fUZ,(7NQh(gG'b,,t\;c^E/'Q)(/<]`69nelhl8sWJ23C=<DLN'E^1dpJ',I*r(j_%+nA3`qiBVcXgoZGg-(`]F.WHBoW=BiIcU,):@t[+iC"E4CnKUDcZ6h/a,+]QSTBc/oCQ-[Re1gkOaUr3&2+q4e26>Y%I;>U`Q/C:%fD6-'MIW8WYl^D\@udpY'SsEKp5%pu>CG0R--HUP(DV;r6=Saf%4gN]M!t)H@Z-)7#FkRJ]nu\iWR%G<<2>u$OT!FFaeV/D;0j@n%84<%eem.#mgUtdp3j1=^,/A$,O3rAg2mb_8Y13M_"+sc:,r\F=VV,f@m@,e_!Ek@\Z-4dqJ!$W!Xen/@'1SqD3]'M)SS_=r\oYcr%Fp>^i[>g/CDn`;ci;TlLWHLZ2TnZ0_/'j4\4\Nj?n'WD^d$DZtVN])uZ."E\4cqTpQj2%uXMuC^K!s\I7cNdX:<1VWf-U`@g.TVZ%45QT54DJD<P0Xi?f:BpVlkjW5Hn6un'RPDkAENo(L_/s`I-A96co"H=9>lmc^)C.D;QWNh5.)dCePh^?kfE)t#Y\/I:c$,@VHm*5%2ej;Mg7W"Ko'n<'8mR$iRk6CO;DIef<s!4AIUROc%rN"`WB2V6>@oI"G@2'Db/TtMH=a4HnJ(S_VF"X.;a,7@`$f-cC+bq[R9hMc%NX`A6ldf';XH*#B"Z2ZOVhU!(n'9?dn(M8^+]56'(-%(EH:J!G<b*TU'n'2h6[q>:'p,,ia,+79;13kV0lXF/O0,iqdV5JP6@nT+%Er&\12a]Kp.N2l5<6`GjM.4\b+'ZTXe50!7n!bW[Vj<N\Ano6uN%7Aj;i-+\WT_D1,b%CFI:Ts:,m:GE-sUd>R?o$*Y@"X-#i*(X%*`!e>EVi892$AEs%SULIZ3Wl;d:-Ku,9eYbo,:d7:e/>s`T!XJ?t_X^=CcpqlC5&bE:A6)#hE*AMiMM%^D(4f9X-l7O[K$<%p1l"%AXtd]0/'Gpi#@eMi<>^@/=/\cdU'^53?->#^#aV%=uDhI?K*K\e+B2>X)+Xs9l%%4K+)3[GHPWL>o]M9">(5b*rEo%#VsX^/N@+>%[YpaPI@j5\e?7>,=pu:G18hP4"i^gUq_0ao<hM.34hSK4[imSij8-b;7_K>08j!cI>R'7$;<g;SPb5tljX8MQQKHhVG(GcF<]ZXL%:".?/9+Jg>S@k2.-C24k:kEDb]QN&&hkPZ:\8$Oim:90B!<iDan7R]pkord@a#uKsX'2pLA;udG'GZV^4U9A8+HNPA'BAO>a)=TZ%;Oi=r,+eR5#a^O_7o4CI@^[Ng<?5j0Z2%Qer;5's?eq>VVSWcuirB^c^(0lXCG`/l+`f4*4KYquO&eg$(n*n]G5;kEfg4\$H;$3^%El\GbSICgA?H6MP1>O45Cb%8?`8sH*<Rn6a>9aJmWl$j\rhX<s)F<@K/WB:=pWTe^'Id`f/U0"6\^cd:f!eefY,jRc8(LttMb)!Y%X8MF8F5:]\HcN]:2N<otg;DG3WjCNi!+p+6Wlp7lq5FO$q7s=SNa\\oCUb,IA3"6QZ*F9[Q_aOgkQX63(I=P*ROqK)CJVAZUoWAe%Qoi2ZQiON`7,c^Q@_Knr:K]?/>H6],LNW/tjb.Uf2$Kfr4WZ?4Z"[CQAE-@S't4CMA)mE##6HTKf?"IG_<7?`-3,d\`Y.//.7/pu%mrdT,1BjgQ-SDtBJ!&";G256]Ia%Wq3s=VT1B%MN`;:eu%GM,;g6CuiP"6:7'_%D\1gW*d4(qo^!$9u)0^a1anX4`+dD?[$-(%0?%>%R&/oG$^Z@>np+%]F@V0Z%pT^@/EW3E#8+l%HQf[GrorRSQW;AA6cTL_=2^Og2>k'ca/IhfK;WS*mC'mSkdF$N\iPQoWaY!%sbc%G#)'Fe6-]XL.bZPm,;J6.@QAG"VWW8RhqXmKVPkI7%kl=iG6(qdrqeuoh@tIPWVKJU;iZn2]1#rq$!N]3',h.9]j:Z-NAORnVAtj%eA:h4I-WZ33MoYCXOP55h0YToZ6ogehel]f%kV.jZ4m)[DIRH?YL]D/T+4'2lQ'L/m,fGMdgjlN%+Vb?T<M(N?B-tuCIT)SpXs>"%B0PKq;[1<PGlLe[/PO!9g]%tl'%qGmJ-^*:MtXe(8bKSJ/GP:2+'B%dLN'0>A[fU#I7=RN.j<gX'3>N3`Thcl2oUKXQg*/Co$k6T%qhGpU#nJHa?_^rnY3rqSkcbeeBqe5kN2ofEG]/Q+2M5jhmP:A%e;8Xfqg),>]gX#82icBb*.JCAmt&AY/*dm2-[8>0PS'/I$iqn=%S%'Gn'3=1Xa@c9iT^e4-Ki50+l)5%r2OP<aPN:bPX*@0?;dJMaPmARjkWjScEBShHkB^,!^+1]0.NHHqJe@fD$9\4mpT?30)@9Ng%JQt^%hOq<qC8+:h7Q9D(:;*)g#.oWt>E7!c#O&dk>-ekA&<9R*[AFm_<)9,J6/-\NCs.1H)#8?g<d30&U;@4'D5R]$rRt<Tgg7WC%=)0&-R]FEq&;EA<DKsVK:)eR^XH1O^r((rtG5-t]W$?*jrCYS;Mg+?RNFi_cG^HM3dM-Rb0O\KP\e'l+;05^L'k.kAPXuiS0-Cnc%_JLdtKX?id7#t]5g;GUlJK;M'lm2/@L3mA9K1jEg%HF3/aqihB`-lWJfj6Nh"'f4opCZj?\<65:0Ls-bmf_^^o=F0.o4j3"QmBT^%7a:g2pO-oNkGOV?;(A;1hRp8+b_0%r*?$E-F2]@c)'qRHG.tpDUA^0n7YTk6<ikL]OI*6:aQ-id>1VpR8[@dZ#*ilF[,]t!mU]PS%fK."JcK/o.mNh-C;pU'>#q?hAFL=:WU"+PSI,8B_XC#QF.VKB5XMiVjB*oNnf_MB"<Kn=dTZUeXS082;R7tr1?'>i@BP$Z8p]Ur;%^cWpA7VWd7G^?3hK8e'M<+Y+h/?<tec(W@cN$usmA*8V*QY=7**UVemoV7!$T'H$=W9W5;:@u#B4^.Q&e3[bCTa[?;Kk>^oUikBg%TF\\0SKP@ApXQdTeS)7*/3g$";mD'Ng>k(+D%BJVg_H,-63b[g61F2%Y@VZ,;Q]#BHh(5$$"U>*dFlNTpiWe7?5[6f(Mc6EW\M%W%+*j,3<FlU<$uk>[J^Pl?Mc+Iqp@J/;>'D98'W')LaL77RXKp+If^c<"Ct\albK,1">W^qeB]JV_X4PB+2gQXe2"JrVSQWDdbEfK_%H<6hL/6FdaFr'9(0UeA$7VZ*\h<0toonmlqG-]p"=C'7Afke\:Ga[5d?.hg#l;Qa!RLeIJ]U3\A""=2[b&7N*AX_;2c"`^b]2]mi%c^[h>O]X)n5qb2MgWat8ra!Yhj362caS+@F@W!jG2)aj7.\\I2X[]>tH/dBg&"W89YZUj[WSF)#k'X(ghnM"3]g]?)5AuqUU[T7.%_0:Fh:I*LgC^bW=E($m4N%(!.Y%.Tp9kD;G9p6$U5ViK81Y6.d#">R<[E5cqo>afe@5,uh[JPYEfOiOI\?uls(+k.BQY"Tb8]I=i%<Z#*tGpfFlRS]rN6<6gE$5"sme+-&Un$U_S.ULf3W:%Ra`EC19g4[FFiOr"+fA[p:l_48meL'V!bG:;'&Jgn"O!*7);fDKKE.0\O%P325*lW,LTI+bAd!p$\Z7agU#oUbGSB&5MiF4k8VA@H<QHD]HHejGBmKYtiD%0Ej^oVUs6LrO+9Ocl^1(_'BcorTOI4;_@D>nH[6%&R'k01cLZ#_f?[)mZ`/3A'<d,<C@csQ&*ukR9YA=i<Y3lc`\0OS"l%HO,Y;.PJIEY,PL-c)D:6d&n+"Ela6/c'GIAd\n:r1a;R6g%C\T=:40qjG8c,OSH#a(bIlB\JWV6./,[ieiP%)'5_CFH(92'@34FZ=--R`X=nl,/#p<:X?GHR6q[g=-m@m$HQ)=%cJfR-F[9F;,9%$t,$3ot6WERk9<B1r\j"dCOP_$oH\c9g1^cpNV"XcL7&;l!;lMoB`"o6ZB#<iUXfk<CHB(CLdi@VF8H]9@Ll<dZB3?,_kb2^+"uF%17uJTVtKWL5EZ9uZ_\3=TK`:u7O-^,%A3\6SC9!&hc.&.!RrS^<)-.(b$qaQ)XJk%D5n3\NaF:mI]_37B>NmrZVJ1[:6>bmYmMKK%!7h_>atLpn2q(WmgUj=\;K3>60F4Nk#F.XRIEPT[j#N9([_!fui&LCeZl[\VK9+<c8#A;P4YepSE8Jmd$KpUU`t5$)H;hH1oLi_?%G&2ORgpRu#9>Te8R-$!Wqi3ru0Ts]McrB!f_W\9:DRE7AD=,DOCN8[",'b'n1FQLsO0IBVSegd1Z8aBfe!"LueDP68#:(BqlhOI,%3J)o'bRaB_LS-=5&=[j1p;gHV=H8UF1n0bF:,dfo9P_Rn9F=EDJ!-G2>+AFRJeB/JKG@KWH&,+BA]ci7%h3Tu0b=qb_]\Xr/PQA:%Z!\cI,FGM_f,UQobSYlLOgsR01)kRgpKQ-JIm,VWXslW]E4n**\`1WW@k98\nDU&,#$2V_;2"JpjZ?8]p,I5ZW=\@B)M.^X[cm.P%ZkQu&i6ogS$j5mZGH19!Q4.I:6`MtNb)U&,`:1BXCjJNikJ<?;18GWgRYM;bnZoAmm<6FA<^-[b9UBnZ\+Z2Mf8+f7&EfHqYs*TN%NiB`g/'&2AYfRgZbso`Y0qRU447f;8,9,5q@lBl;BldQVKW_oG1'a!<YoR-F_aFH.+F'jl]e0&P`)HET`lIO0^p^(N'0ADqW&\Dr%`FtWsDR7eG1F/!CoE(oOF"O1OCumF[RRCfeNjs5#,YBUUrTLiO^l?:8Rn^TZMtF?%g`#Sg6oV;^iA2'hc_'N>-W3elq8WA.S(:>i%=YdsGkgn:"\=8Ecq%PbNf;Ylt\>C]=5p7<flcdPL0,rKue]5jq(^BrNM2\@!dEil@><K7Llij66lmeg+]hY\LCS,gHEE6G5Y9>Jg%>?]kiO&k'#/W!4Sg=5L(hNl0&HuiZBDGm%7C#i8Ogg4t)SfB#hJ$InZUOBPla@1+Ho85Ii5GIk?#Eg#J>AI84(KsM8N4At.h.I-V%'m7K<%7'sf-?8[*J*XbAA'uUU%"DsfUkMT%ikVca!Vm]*+E7%#g<PuH\5Fh<a$;DOePD+[cg'q-2JJ/R=ru!Q7`g,WC.5WhHqQMQ%Xn;P@#eA*Vd1g%q@?M!Z1FV1Bn^%t9H$H?sDbo;*()`7#h3aQe5H9tdGHU]'1QuD(H+;BWTo&f>G>DMT(u1S)gX#e8*U,1\QKa?Q%kT%IMCC.;4moB1DT5[jQMfmmCaV\,#`FC=p[%uATV.<ln*h(UfhJ]ijk"mReSqB^3?:H,;QC\ma)=e<qBrQ8--9H.i40),)44VJ.%&Y4kB:OA%(L3U+h$QUdU5JQS-MHa=@gqhL=;TE]6RKW#8IXpC0W.kcSl5QZ(nf4fuU&78:*rAKuSu*"c'ZHF6X\q"-_,pFP73VZ_%EGM5N3SWB"/gT%';*sABDm+:[Z`G%RRL]31CNZZ*hb4h+-clgs+PtdqSM8ZT4%jr(7VsI8Wq^gpa$7>K6pBMP[iH.Bg!ZcO=q:8l%I&Vb\$&'=HGua6mN96/9k`boFIW_sDF=p$@..>r2Hp5hYfgtA29X2KDl=&p=/P6SrkedKl-BP7pn'`e2q)/"0nb\U4X<6/ud442G%,J'Xh1+ft<[jng[2o#"XGp`j<^:qmlG"bVop"7NpWQu/PNSRj03PMh[B)qAYjt1qun$dW'REt?2G2,L)YU2)eDLZ>6.nB>9fqkP+%!u`J]ShOk%jS(\30V+c@YMFF63T&Bhbj0RVa#rqC,$aIlDET<C=ThKs_'m]40;lc)o@\-O0.1XB-R[fIRq7Ib9sqQo9Ja^-Vo#rb%jR8^%rQ#Mu*rUjUDsoi-Fe6a2GCSi1\]YbO-@4KGA"=4FR;^n=\*,l6?Z&)U-EY5`DP,0-NK]u\,'_d)RWkYkdYC'G>$2ff%Msqr%fZZ3lGZqdMB=`qrGp9aj>Gg1,?k:EQH0,*c>k\u3g>f-fPpR:lRd?b4r`Lc]]fhr-j2,=Co.dA;i'F[/lf-4c=DA;oqtH^9Sa5gl%VC1VJ<o<>;f>M])5'(*"iWsScF`T%&a_I7Ve6-hBSJa%[C;dT9QFkjU]+,3qL2o`@T]Q47E+gP@eE^5Wn%iSqmDZJ"%&CW9@i;jf%$p$t?>]@gHicT"u,[LC[fKY#Dkpn;0k1ZgfW5;YX\X6jCduQZ@c]RC_[R9MH5Af&Xe[lGg`n=j3:TqC&Is#978k>#VYHi2j8CL[I%D9bal\iUeil`uBEa@Fa%M>K?Kp+QCa<,36Z'KUGin<R<@[M5*::qe"LpG*LOpPt'p[Z"1qBm2d31:^L^*54:gRS54eLY=gP#l9a&%<YRuh%2Y^G3R+GhOaY0Gm[-O@/g-*G$0Vj,IU&d-M5XpC]"o*Q0SSQ,$KDi?&'\c$<#l;i#V-[*c<%["8shn;UaHW%'IMh8QHcdN%-7dZMpbf<;s.NZ[)NR`-'eN!k)0+gfcUFbNSLQ%nE@N*N)X[#&COmC!`?j'3SsfIJED'R"(nq:CJo5rs6j>A>b(a_2X^Q:(?[<j;%QqNhsIS3(0=H!YPRc-'koOZ0\`/Tm2.%K&Sk9D]M,S3tm*Ia=h,\4J64LhP-YJ)Eu1U0UKf%3k.2fq*h.i,WKX]jMi`Pl[q>/;R)%\!gOuWY!:3>?q;TMo!s/Jk%P,?U`^(G'B7X)HstGnJjG!BN(7`qDRG6?&(&m5!-d=(dFD]R.mL_?b9#.aA^=tqII?r"LogeE?pbb%*mm["8OjUtW)6N:)6IUj4/V)`Xr/h.]?KI5I%g>C&G5=EEWlSj0,TRCGrRo:$Ym+[`$-s;%^&eh#"?ELf8[CSQu9t]oQBcg]TX<Z%n8Zug-tW<q?`bqlqY5J`UlQUcDa=O7(qlQ-5m@(]kaHcd(L?P?3`Lepbg-T4^F0(LMM\[jQTtL^"p@X)<(<hd'N9T..kl;u?*Q5L%VbNJ*Pd7&@_SiaZ6HLd^$,T"qX43hV9gon7H"EdT7uFid(fWr>64ZR:a8foZi+'/G/<PUNmt?e^"O!c8&)M4*6.6R"+VM^3$YfI;%n#WZTIpWGHbD%Wc^sC7RfG^#C)K(_Z0b]S##3F[WC+B'a$8fs38Ik%Yf;j$?H.[^.;/-lF)bu=A_r)pqS0cNN\#E@Pe0'u6<ASJ@%`Y.d5*_K7#!cm"jqIVSQ/Zu5Z!,ik-&-.Yi]$/IfNgKY_VO7&9?8^II,nEa*_F90bnF7Rh2i:^\_/#^-GFH82;p?*NELgXqK/9rl%O7B-V2">X@1].#S.]<l6T2R=</?qN"!J>TDCG_Yns")0$W?u=9]mR)&RV1Z]#(B9Bro4SISEi::`#998Au^r$hhOoA?QH5sB'P?u%iU#=O%:H0dRXmR;0<B)cJRWN-Zu*^3P&bAUmsJ_4PSr%_VOuJ%<"o/V*f5_KdoWrtG.$*%3aBdCcAC`_Ml(S(oA==?jp($C$hLbh%-J]BX[:Hh#?s!/Z<s'Q"26E=gid`j0V<Ibp1i\6ee@3?*Zs-4FZ6'9D6\_W=`_iB\9Uj1i0!(ZLdnik5G65Qq_:Dg`0UGjN!Ch,A%!?1TI1;q!m@t:TMA]ZO:W`\2OpCJVh5UI,53I>?5Wn&#YX3Y?BP$?2N/E5(VW?KN):F,O/h?3]O9u_IB'EnbW#KF*W_@0-A\*qI6%FF^QH#TdrTDkoa6-.Vug>K/EM$lb')^k9=t>G@cN98t^/+T,</,[5"51E<.jV#$"EFA%@Q7^mIRVIiS5>(!oqMga&F&DEXCr:;KW%jij,;2V7e6Ei7bucZduljKH,X%o^XNd#Q\aB]d'M9<s8$ZSI6!CSdO\6GOcF/Z],_je!ibi3GPG.C5%>OL2S4N[sL9a<K9uT"LUC%'/.P6M1opm:p;GMCIVQQ^pORkmH!$Lk0'\pd:D+t_HJ7O5`EuMKO.TCf"F4;FXs&/>Qb@3Q-K[(f3n7e<hJlj.nS4^<=KQB"n1bJ%Vr,"eeki:>Te3C86@4(?TK#bH2.`j7riM^0L)g(.]?A&oqt"_nViDN7/&g)6r->MbPWl3W&dWQbO\#&A:`5IE.Z79e+G1]"hJ<4k%&s<)5%h[!hP5WS6N<>Zh'S+V0ETJB;Q"4_t7_@Lu<qp\+WQ,QQL-)nuNu*As$QpMJ0HI&adoSEKEH(&g*NQ(C!*Q5b@Icd$\reG+%F$k@41B*kV24m>bhGN&%NEcYF3hNNZK`RU6X\AD<$'d\X=nH7*J$sBg#m5TZR8TR%mWc4HBLD[pCh8Kk>b1Mo15LD^n31$d`]&@R%o(tkIet[Jabo[j,jLY6#7`L-qpU`ooWAUdj"h8m^_uD1VL(Ql>4'uquaLI,I.GQOi.fNSn6b+5:=F4/,WN;bcR;>3B](kk*d?*99%pnlH3Q&Q(ZY0rL@k7B13W65II.2=.eVWo+1@Rt]SLtoCn_p,R-;YJ#Eh.Aci2f$I^r[@c[hZ?A:5cq^!W4RMG^A_`$XEhOlDJ!:o%C5CGVqOo@g_MrS(]1M&m]6(Pd\%\;#7>8_dIBd7l.NDL!1]M9"[@5RQ&QM/+XPOPj3JDN0qI4RpiR>4$!>8nY9.d.b$"J!`5=&L2%Ll``#G"9tSbo7:9UkTq1$@H9XaJLK;`\OS5VJ>sX0jPm_V]HqUL,d$#Q]DqKR1bO#$+cBa8BGC.[ig3H?h]?^8^t%MdHu_O<%Ba)%X\49KN'DjR0g"JW\S"YFEj(pZBbr/kc^'Qoq)T2`*YlP0'g5,785=SpK8cYi`3b5s`HVF*F'bpG7G.t,5kJsReElER4IXbWP`[uP%d2>l-_f2<FF!orAAOQuSCT@onnU#s+>\ggcpMa\oW5l)+[7-:08.57\@Ms35Bm_AqUIRS1j81JJP;`F/rf@*KGQ7<]s3j2[rTA\*%YQ*]Ks3k>hr!tI0^V_FDq+gV?J,'WTlTbEu5Q$lJlc['?O8nb=^4-$IDu\"1rTF4)V>pP<J,d+LIsh4@C?8Gg)Z%"7lbD\*6?ii,%m+^=HOeS%kCcUdX'M.IcLaHP!.j0ZrHs&N.>&/%UHRT_ES/0k0$55@58G,%bi[-fua`>F'0.YX-2-6<K?YpHsjn='ji]8Y2DKi$T%O85"MpXqmEb*MD^-7e>4D-.Ia7=0i21jdi+-n)2Pdo[ic^#bYcc@9`Q^KD@EIoFTg?$cNF9jauJ-/Rm(@JK82qTaiD]"2Qrf":`@%#g^>S'Bb//mMd?^<:Wp"dO/50]CJY4!=6RVkNKVn+-_nE$rtPQh+^L#A)X0*jm+$afU\_dEA4R@@J.Sa5YGX#.B"s'c]inh#P,*.%I<C2UD%ioAd>r/TQHH<cN$R,DcT9QKU0p*q`Cg*Id:,.dhi`Jq5,,bjILAe5.5VFF0=*`+bLQ7Ub(O0=9jI*1.7dKhcmH=b/2=g8%U(bc7&;*MsGd2Gp2birm$D9m*;;pq)Mfi*U(hZnIrbOVa@2sIIgG/PsLMfIk?mM55J&Q1P_OB)?iH9ai+CJ)I5Am+eU%"7-`Sqeq%+mt@.dr/@IX\$CYde5ll23fY@q*ch5c2%Yt/M6bg7'>\a).`+i3%SSiq)T>]i;DNNrn.t$h#f;a17Ku5qIg9>gLaq@hU`HTOjL+U%%2q6_4@Hi<*9ffZfXHG\@]*>V0T-/EZ^>,/?#;;4?9Rp<Vf\?J`B5F4B&P]AR'`aiKDK5-hAmi(?jIs&V&j\^^nOfpZVFL9q59[9%"/ApF%j&3\=7RFOnScuATM)X';mMI^qb9O'j'G2!.X3Se$MmF@p\21I>,j#QjdV9bI(5Ir%hWWR6+b63X&-2_>1knlnRJ>!05Y.R%$)%Weeq"7(0uK_Ll0]XnUXZ\o$ZtKE-Kc5c!b-7=S3gDAX"$a>9[JgBk#G7g\Kd.=lX7FL?/cU7/^d@H'm%]C'_!P*=1+!uA@RM#%am8g7NVPNuVZ6%m)u7ifrUhhY5m?n)s7^H%-T_X6i^<gj40;0X'cE[=ik&:4(01;&s7G#CWg(qS+t^"<f])TX\EBJb*)@hh0#Wk2%hKhkN"a"]oGt_RpgZY3neFFFmH'uR7gN)snoC9__O8\q0Vbp\cj,8@\ELY3R8`YQ&0!PC=VQ[c!m7.&YIJ7<G%UZF=X08A+MVIYY%l8Wr$Bbr[2&8,fgH**)P*r/SHQpD;pM]//;IP%:t`k87j-q66XA!0pjp0h4#ep&c`s7g>:1,u:_qR-"lJUdUJYQ!SJSJU@$*;2Q<%p,7Btlp?9/F.E'&n`*]#nXDXuOO^@'`Da;%),oH,7\o%iJb>3kUf.3inS43j_iR\R;jqBtlRdt&EHn##bEInA#LF03&Z.urY85VR%7$]nLAs9RmHAt7Z93<_)Mcd[79jd@Kp@t_tR@\D]L9_?n5V_91>`"Y;[es\uUn)1,at,Pt]kk%imarY[@7"(!V[tXf\=,&:_:-A0%,IjEg>so1$(!kF_YKjh9<;b%1Zmalo7Bj^F;hoX?6,=m9P($1q0Zt`s,AaQC@$r]E2j-s`2%?FWEt%NGS/>E@:J#VVCh_2H02(+"%lnj*,JL+pE)Ub(C%gb<T[#C/[:chSl_64TET.sW;iEu5\-IcBcQYL6_rF2dqY3BV._Yk6dKh:*/^6!2hA87=!]*aeGg/UkSV&$A(%ro0s6O6uV0ZG"Pm=qX[$;6]+mAU@j$h\$88N&("Un=1s;7Xe4.&R'Srrie6'bBa0<`k-0SJ:@/SIrS,T+ip[r+]i4rmCf4/iBK1b%q5X/LkGUK\aM5CeE$GrT<CP#RNC7Kp:'i#%<2Lu"^2G7uRELM71t'(#D:fqIF9PH%ot)Q^6K`?EH!9EpN)iZtdm3X3T?9[qgabcZ%qlY'jrfFnm9ubTH^Z!7`5E&Xp?J%I\#h)[7s$uro49B=^c*NLE;4ul^*_](KJrf%s#dgN[j(Y)BU_DTLRV*3Un\4[6T/E'?)P6*e%`CKjf?hH-eaB.R!s&VD(?T%c4#1)EBHFGI_FlH&?\*^bH<;p^gFeeNlh6s8q.]3,]gC9^ZB'`%BDK5$NcaKZh9OWd%gJW-h!7PT8%We,9acc5qZ/,j.?qcE-R7!<NoVdQ&MZ%n]8g4pEH6!6D=FM^XN<ja)N[c9N#md'+t<=[SqbYc?[I?F[H`scbnL=X-;-L7M,l.%2I%b!9fZq=Mr*ZP5LnN]OP#85\_r^frk`B^$gpbldb_(K,(p"1ro(U>UX]Si]ZY'940*[MT'^=FYU%f4+M.1gSdW'Qa9GBO1du9Z)!/%^d4u;nu#O\W`!2q@*omuK]saXLWU(^EqY(GRuF17A-A?Q+bO[kj<lqNP42g]mZqTcgpcquh(VPY^.Xo$V:o/;NN`JV-^i1l_GU9Z%*)5dM1_9?<=X+8qk+BsCkh^O[6a)X0Ci!(QSf5XVR5R)l)l=^u3Ft6U25cq"Y%XA5B-1lJ?gTM0j;B1q23^nNW_V";W8aghgKuEQ%j?&ZTK4?d]V[7h"<[&S86nagr+'\(8Z*=E/f?dP4UZ%R`+=@HC*9(\.Q_>4.[,TVY4Lla^nIgjg+,V6nNO%9T\FkU;m.[r&j4o'O%3,AuEqRr"h=IpXXVRLpJ(HWJ7C2f.YWR$ofZYR2[.BGc2F.4T5?O)$]SCh0pR/6[37L\S7es)2l!J\di2%3e];Z&'/\lt(Z<#'g#%=fS1-QV*c]e7F#[XHq2PM\SgrhFFuR@tgH=YBo91@(Ga4-=Pgtj)uWZm'a*g&IaS`11haMmq]csD'J@iG^(f.Y;pZ)p"Y!VSAd%c%hd/d/@afQ9M;plB$1mYl'2FicDkE@pl.d<nGQU`f/WgfXrVb8:V!702I7#R[F]J7$adDf;f^^opJFc*?ZGD6QEh>X(E44X_^>9ca%ajcmL]@X8%"TC9(<5-De`(1FKhhK'@($?"H.lt3Mfpk;u955KNQ$cN]YH4L2"7eu%KT%n"(PVFhk,i)3H[W_G+9F+L8(CEE-IHSA%H?9OCbSNrfQHf-:.@$+&(bL"n$Ch-&/">>T8,2k37Y]LE.E487Tal)Jcj%4C/GH>6HDE1:gJ'TDXeG`P*qZ_!o[h&0HS(V$&Ia>e%0u8SLYlgaHK+>HJTb5\ZSFX$3Url*D^^e;FL3-1D6gC*VBJEXTIN3r(@VM>V[T9*QJO%r\<^kc>Iu+t[+#!VcIZ%!l+.r?.YkN<&%Q=S+&h@nC#`$I9+2Y[6t-(0uOKG"hN*"o3N5u25@#cO7*-o-L(HhmN(m;l#jS1N65<f[AT>rUFPm`4/XYALUWCONdQ8g0MZ?ee!@%5'a\gjK#K+V9F+7P^DD?.e]c)W*2XGX+1Ra;KtgG7*4GD`[85qP..9(TP3Hm-"<R\eo`#4A!rQ!f[>ck:WWiQ@C*g/QNsW8ZK`l'%-qA`s6C4ILN%/YOb&hj$W]"\MRU\Z_"KVB2,IT>lIC;%JBE\Ra-p"Nrf/=(CWUsc6fSW9G5dd8.]'^75j[MNE6Ge..n(-W>kpfOo%$K8;DUs\Y#U91B:Ao5@"XN2\/C-kT#EaAX6#_]D)Y27lf'2>FL.DL*66kkMk9'dkkrg07Vl@dOF]&r$^*CNtE9]L<!?Q6m>!>r-K%RM]67>k)\b)LhCW.a5A$=tIX.EE37P)tIPV=YI]nB6TmZ,>1=d%moN?!QWiU5g/^#6lOrDPAsf[<L*IHAsjQ+DP3Fl7]P!WJ\D_l%CM4Yh7saV+BH='s/r>MHdT-]K=VV^N&)'S92=bai-<@W`__'!RdC`@$2k:OY#*j^s`:[XdOjRN@QcV9FLo8)mCSTf(`QIn[:!*?_%&5FH#(UF8="f*`##I%UL7q0:90%,8-n-!:m)Tn(5f-q5t\5f"edDAAX3=jalbP&(/#kY*b1J7ui9USBbXeOJqoYEaK,5`\RgsFrA%OMB):r[a/n!YoP!]$MM^^*r#;)3Jg%Qktl-cB?t_m=H`\PmgPf,6=IbY>qP)5q0&g0N6Z50es-QA9ee^TdU(Wpb@:0%@K\9=,U1E%`Y\GA&Nf=?/FCH",+&!"C+><:Xms,5f5r%Uo%+M\PhRN!f(;K"5!6XJVNC%sG!j#'?pSR.jZ]+hD+9AWTG":"<'R_Qd;IFOeI,VM%MY>:EJ>[g2NeK/%qH;j<hj9eUfK1.C!'dbIZ@t:aVnRq5g`sq`_B<hRP\5<+8]nV1UW\I_3XMAiQh//FF`(Slp=_Y"VZdbP^I(m<%qDJ!'%t[SSiPgnUN#V8SR4Mpn&cqt3XK5JUlab!oX&ufZT%Sn9P96aE,G&/_Q;#`Fjm:u0.\=cdQ:cM5k&PN8?cu'Jeu9Vh[A*l`%W$MIUWSG3?RU40*L,*.S=ThjSb[&u!6X&>sG6<=73+GIo97Xn4]c:a]f2A]Z/K11+gOu__[Z90G;[!+Cj9QW1b0`=aibAhh=RhhA%78^Tm++I"BOO::!NA5?-@eGqNXmQ0L#`8dM4L?6OOCJad,4o<.`i:>B7ciei+]H].o+`!)9nSR4O6PZsSf'P.WbsI;\*7q`fhZ_(%`AghdF\VA5=t!9,"Vt(8TZp6TTH'(PVZhQ.$o]]r[982%g5%[jbt((*lUhd19HjdJQ(?)kW"dJ^j0AfagPUneq;(=X"da*Apa\#$%86(JCXl`JT)iGT4KdXTk6b%WWa8aLc66?WK3h>Q'Wrd,$pZ1fkl$p"m:qCu?j$Q/q-!$M7!8eDZ%@B3Lj&"^_@e8noWWSp-gkQ@t%;T>LVJ1VT`64R`26m99M*f>1U=I,o":`IK<J]ioL/ee]7<J&.)P`!,.pE/O:6BVfk*h[3Fai%IDdOOMX_C5lLY8X[<QFg1,S]Ec7%W<AK?>mMRte#UGeY5sKl`f*#028hsH]8?Mld-@[J`5]Vb[gC>EjnM-hRA-ge2$D*?bb?S?*+;t&.&2p,l]e[he"p)=]3<U.-<"4,%8u:Y-K>XR:A:(_&@Z6UeXL#[%S-l-RqkAd-%7irCG4*it=BgP3cu-(;$a4PEXIJs]ldge2E/CK@\_!0^_%p#lh>LQbm<kbhqHt;9%0<^C_hnVJV8rQQdifS\"N:/eb,UUD$^EnqjFOcW^1f39#.<uR%f=1cVf?;9X^'BF'E<M^C?=_Y:S8hp.kpcOnBoRJ-9(eXN22]8(%L$V(*mQhJ51@<q9I=LqOog8fMH/dc_??_:Jgtbdmk.Sj4SdY:K!1*=B;55<KY)BI#$dVf*>OjO*I)K>Dp%JQg[Z@gnY&AcIXSr,S%@s:i+AfR\<Hhjn`hLGrMj@*pN&=$Z_65)u'fLF2/HFtgUSf!&EN<.<S_uFT[Y$W-"q6pbuSAu8#,ob_<*rJMa#6+,'E&j<Fb.tDd%e;j+fS_3D/N>gt^&k_QNOO:Wbdis5k;]_1[DFtgaKFtD-j;O8"q`N7fV@:KH"X93@EU0ibp6Z1RaHeHt;dd\>qP2F?b7o.aYSaXH%'u\cu8l]u==*n:9H1krBVeAb\"HWsRcq4&SiNIjsOoM__W1kFkTUi7Tl.M6^N71`BoKa!V+@S39<9ihC;&Y3d]oYua'NT;=d]Qif%5f(soR24V0Yo33Jb"Yn.,`S>uff*92nuh>CM!C!G<5;@,rMC<V;'R@p!VN;a$UI)dW4!LA<EB3I`$i._RadTuRl[/3<+:'k<H-St%D)@Y-c"HMu(p?VeA3+'N!X>&*LDVn3aapW?TKJ/"-8.\tC9;1(D)k8sbG&49pNDDFKuQ?hT=7.B&'&O0^!P,0Rj#tjd@At7N3m[B%rN+MAVY-,+dBkDS!?H#F@g,_$Kp^(sQpKc!Qjr%hi4A.b/Z2G7ODu[3jLI0sl:6UK@J6Zs&?(_%ReEa=$l&5o$%>jAQBP#u[V[,"%>-:i%]nj'%TWKP?qdqpK"hs/>L6<Pdm7pZqbZ6q>CFL0BRVjV)/Fd6'BA*f;]2'X"7H<+).im"[4E!,0'WEJ`b4(R1B[[t3d,)U@%;!H`JT.3caZES_*7`=dLLPk&G(G[_31Q%im!1keRR/+5u-XBH/'a!8VqK.l]>>ai0!=BU8SQ8#BFHi`(gsjpU?^E&li7_qsN_gB4%17`<T]YsOXI3/U^]@O=^)kgHmBt.s?9dEDN3U4cq=*-eia!CH%eSo7Q77ZmUDn.33^M0u6$7<'OnWGW]o`n6t]M/q#3@PG9%Rgb&%8Ibr2$]?3N?Cg#)`L)?=eLFVH[O-kfQP[)5fiL2,J:uAQ=SdmJ>UNj]M$']<9RCrP3lFW"ZJ-7@2X6APh3"ncdYW@&9H9#=Os'%X%Oek:G]6;g<fTW/K"cFh7W,)%fLc?P,rRmm[mdZs&MBXUPKI.&0-E,:Tk5@J]mfOW^FUJ#\D`H\),Jlp7<Z2jE6ISQF(os/\R0H*n%9Gnk<0i=bH(^NlQ-IqER(JV-rd2k]/cI)S0ccq^?nm%HE5C&Nt^QpUhAm3p'^#At;Fi%)[IX=fu,GLL;akkUlkC.ue624Arf&?e'%JX05&E%@Z&2.:gQpKps?Fb&934]EhoQ6Q@0FBd;;?@fup_i_5)!fZfp+]\DN,pb8sA$[T2,&0/q"?;W%?q]O55Ltc1;fVAG+<\-b%f-E?GRKJ^W3>WiqM,_[o:1E"-EesOK_nWeQ@]8sCO)1GT7j)nr9MDTFF"1"HX1H\&7WQU(J%9MX(."-/,]]eQ-'&$h-;K'J1r3ee%)h,K'Z7dLM/D/HK(EoG;?%Gm6$//%4klTBp`?ZGu2$4T+aRI`%e4I]]413a&19KKRDU)<panf>X_u!d<L@^E%IJ#oRPJ;Ed`hnB+%A(OmX]5=@*GX,(\("K`>S]2'52P_QEU@_7kb[nrfbLSh-k!JHrbN-"+9_,>fK?CP^ZS'@eTdCPf<C]`cgM$kT7?J9>oh\IZU;AI8%$)-"%+b>g-G8Ks8!Ekm3@[SdFWB40*-`K(3$0]X<$Ue*U+N=QD[iHU!eF$:4+@A&ai:S]@*`G.O]Zm9PHSqT'WKi@?qZ.&)9_9qR%imY"K;H'pW??0]t<ti#^KeoZZ""C&2gg5B/`9+n=8b,4`'ap:=ISFaY.(10.J1+_@#+MI-4\d5_cqZf6X9<Xcq6/qI-_4uXYlDoE%7rIm'F"3%n(l@4,O[gWfZfq>p"m$q9/%uT,0hDDUO2Ssd(e\6l!WtFe]kmd^7_kO(M[!7#50BgI%j%(:=pKcJ(A#nd.b'phlV],N%4Y131R]u=%-fLRmpj2YjWOS?SCQ70W#I$\dbg7EQ=@hoEc6Up)KJD;m/nHoCL$&CiU\l]E+cE=J!iXhq67"HO=:/"]3ppfmQFVN:%/Di__9@6W=PEWQsFaV$?YAU0fl'OoaMSHl]dJTG'.eP[gWIbYrH'/EYa_2;C\N4'E7V*b<L+^5HO<%;]psNl&TV\G]%3'%pqYFet%Rp[OG:qo6^4k`kW-GCK05R.TPG9PpOn<OdNj:Wo.VnHc-2p6hC`ms*BYSN$["l;kaaP/%&+lbIoplnulMl(;N4YF*GGpmO`qqg9"%a8Hh*T/0>AJm'GB-8i[*"\MFqLg6]lGsq+Q3qKY7Hd'U6\i3ZKCq-M)2=slaVT@fI+_:8r,#5/P8s73mDp__fm2)%3kaimO.[N'd%@JDB!9>pa.*#Pg"U2W-PjX:0aUW%2GTsSo"B&6J3W[+RNb`1,t<]h\<,agA\AIqfdf+AHNS?>h-)J(&M:QpU=(6"t=Nm^]75]X[n%]@bnhk`ZlOZ]+WIq+7>l%Kl:7PKE\JC]\!B'BD8UDAY6G1ZM,>7q'>G'\h"l-D=>bW<n=nVH_Sm/%38<>jIP.nu/f"+rc+QMRjXo%AOS1A:1@7,i:U%b]?DrXr\0U5AN"pI\FT2;=Gh1A!mPAq2Qr5krBQcE+i^6PY5WjYIf=aN*q*=mb>1o<lq+fQD?'A/oV=F<p:?*8%CDaJ.g/NEdP\.=[AO%Re@cUK5F)r3f]XKD"`eGDfOH6uhY]QQb2(8]T*YNbn`#/VFk3H>>>SMo.XGQ/1]UGoX]b=kUfaSl49-;$^%jPpe#`rC.&4;gR``nIaRq90q,5>Aojcnn`'%G9Pfn\aE!E(S*Ld3>:2mKWU-U1XLN!kGQd;!,'F^DJ\i6+JG4dAW>^XtU:N<((l'%]>C;2Lm1NFQB&,<-p5mN?[uk?)6)\1,T1a]HTs<8rfIBQEC'REVUp0ur6%m^]_<d;rq!IH2C=J(74,Dq$7sTlQ###1mle)=-bs@u%%PhKK1l&$N!HO8hd<(bO_QoU__[%I=V7>=!8+>aj]3$BATdhG-oC'/t'+^"<P]L6^qMr\#ND-a-kKNG^D"6Qho(8aKj@&V#h"0TS%oY6JGg`>"RDqk^ESs)of)CFd1PZ6I-`.MObANjk(ccb81Y2Q,N-u@$VUKe^hEkPKYnQ(hMX6/\i*C[n<a:JJ(KJ'ffECI+8:WT$/%dt?:3.4=F80B;d-5\1BA7:AM78"a!'MkCalJaF4.d2u>=;2RNsKKu((gk%_]/gpr7EMocaAB?oc#b/,\i]RrKI,hdZW/rW4D#j0K%QkF`dTZ.3O2V-u_4Kbr$h[h2)a-%fEl+I#^I2h6DV[ukF33G[rbiKm_d_>JI__lb8VLTmdS08ii3Fa8Ua&,1VG!la<Jp<8hOUc/$%R"03fKI)3bL<P#-n:MB)aB"=*MrIJM_YXk(=@$cMnQ>NDJ3?f4X/+AUqcJTECB09"+orA.XX+`5:%JAjOWpkL8,@E#"#RHiS)lA7%6k`*Q_0'Q22CVAmSW4?l\e"O5m__;h%3ee!P#P62mGmXkBq2r-Vc3lc4XK!!nIJ":A/h=5M3tlS8r=+tME[e1rF'ZB-k:1!&DA$P%4r;+s[\o.lWJ,.<5Oj`_<Q2?ab1nF]HlnhMa<b4\3dWH_6^eReG6?t=8\[qkm4Y4W.pN)nr&OIL@JE]O)(*u-@cT"C0qepbY'$gk%8h2e+oN[$`_Tu#3!RRW)!Z.hFgatB-"o#+PXuP2"L*9W]p)::^D%K`:_7^70ntG(*8ZVm^]?IGf+%-;XT<&Oo`UFohb@Ra.")oJW%@,L&uX"PEp7\>Qnlk4"7e21]'a4-F>q_BPXLE$!T`nSi*JO?[*gDa\<_;gGc^So&<3E+RIm6%/M5SroQ6ME\>7-u)=X_&+g/l%fd%&4<M/e/V@WiFB[?aATpj;$*'CJ0@q"Es@bNX%BH6),%fi/r3q6Ci+c&buof<s&fat'ZLS>_2dD#hb/ZOAT6IEQ%F`T]LJ6e$YknN%Z+?ek'5a%eY)^So;SlF%#U33mRg3J"M9gFTh)gudE"+4$#9AKKZED\+^CT4-f.8eiS_doS:*or%^b)(<&_@%:OU:ZsAQ&<AOo%^n%E^i?LZ6NW;+027of>fP1EE81B+D[,/NArT:1j:mJ[R20SK"M2`d.j*5ORq)ijIftK-N&`p0')CNQ^F#[=dVItkBQ8?e;qhn6"IOQ%d0@ReAC-4Y>oU/E5-e2'79=%u+cW+`J#Eb9Ri*1us5LMS@5W["+MV:.rM17Q0\UU["/P)`puq^^[_.L_-j8tCRma[TQ(*D`)JCOS%Tb$G&$DFtCTPJ<W'+\@KKo<[FolfXKErB1*bDQ;c*qMaD2YQ)e""lEpPD=WR?jE4PJJ.kLkSQ+;#[3,3cIjU)(dp#Ye0'U87opu^%Q+JnG`u2JPTm*<!lZCGhYF-lKBLWguAtoYgb@pFJIJ?jBknJX"1:9J9ma"D9KPoRA>.cmB3Yh\fPYZl>aj@#'<cR5e'K'Mj\8kRF%O*"cg#O3$36l]i!N"P_[Q%;pe,=FCs2.?ie'Qjog/m4hmMEgV6&MrBPb[G2%:a<@&j"0)],od"&j[h!,?jNX"L,!KR5eh2RlM5tF%%4WVb04&q7Q?Xh'Z&0sd0:necN97uI;#Di^H(6EN?^8Sq9:(Y[M\<;$L+GdQr>e&0'GP+&S2"<P2*J"qSh(a_+%@sdd.Di^P*0#(%>2eu<V!(mqrCD`[ruI:lDi7u1HRp25^O-]f'n^NU%ap+r7uRB>%JAi)[m#Wrrc!6UG^?Tt)YAT/&-O7KSeSY7)mh,oWj_1UUCnuu%X#=4E;oKIC_1_rjCCoiZ<XV53,d>TIfTYpf>.BGK#M=XEU^4`VC/3Ogg>6YuV$?3=1eC7Q*W/?2c^b9p#uiS;+a2m\)&d*hhk?92%;,S3L9%76"0;e/;<tA&#;<-+GPRq>'!=j9iZrs4F\h'&Fe]UtdZG%>:1.5Md(F?0cPnZ,IO?K!i$=0<<J=q`D&9]jp>SN<7HmTo"%MF"bPjVZkH.Y2J[_[pd:NB8Id&\MFZ!F+:bCuHfWe\8`$W)@`eIs><P^"$?NrI))SHeip05/-t<At;Y_m.J8PS(!lSQVh0%m4La?%[gWP0mIeI34P1>R%Cq6hUZfUor.L@c;d1]m+k*s"3-Dn!S:Or3Lsh:n4pIV'17o`O?,q2lR+4pdJ]!?/'M6&D'u3m[=0&r48I,O#%L:Tf2H,Rq0MmTbEN'lc+*OL*r%a1@5q"@he+I^O2WmB!+[Viq@F7[]D"!R/Z%14sXdAk3.Q,gb=UEGF%.&I@=:LL"9qD/]eW*ErE%AXb2^AeB3C65b>*/V^#FD0N$2_5LpAf.FiQ%4mYDNKC\[_3'^rGQC7dUqqlqU1t+:X].FJ9qKLDf'4g3)*7r0#B[J$2eV)`T:n/U%fP"Ns``5^D*'ieP"6b;gTHT^o30_9lJ6\7uet[h^n,84:h`5K<AQJu$/PlW?'>_>7`I0tD5Q=JI]/AS2W^<@2mgFb&`IsK9]3J=B%>S8oM27(4PeD\>UK\Popbcl/>C,2'>MQn&6+tDg9ha3rcX2;\<P(V:QNg;kj!_i%o*!_`,l>kFjd0TJUI65Cam#a4P9tEup.J?aB%8<_-kU;UQ]]LdF/O46F[l6T,HY/uN#OJ`d(d4b@(JHSRYc\@#oNhN2m*Q98Q?"oc[Yp*/u#iV9SlcY8>BF2f5O9&487i))1-91-B%:$j$kr!TSn_nRr$>4nVCoe`#hSB`_[AY`5q@>OYsV2:!NCQ"958ngu0KYPn_mB`Xig;p[lN5W]V3X(/TP?$f"6GRfU#ZSNj_Y>mo%6+8C)<EubNX+(c8^Bjb9TWD+k.O%3F6p;sV)U7dVr>QK9J.<J?7)b8Km8;NjKR$C6(_J468rZ*5^U&(j\R/`CYZ%R@dm-lsk/`P,%;^79,@m<c6-u8,\?&b\I)m0QS";P2Y\j2AIDKY@Q@%)F@`oQ-R(.9YKY"G6SlP@7sla%-%<';FmT[m?Nh^Ijq`sL[onjDZj:sl(6%8C"68IOR(q(%_!HbBUWW-(t%-.A%YP!T!ds%NN8_H9+,njTDdEXtboXCkFTD9.S/`i>aFm$phU+SE4!(d*R$SkujmM`Dfo"*lBZM%FbKgeO-tBJNqGL3O.KRCC2jXITS5pP6Y]kAJbJ.nk>2/B>Vu7g1&DfgjIZq;e`jTT;H7Ho&S+kNX%"7ScRE<,mYsUWfZn&$Y,;u'%m637_2!L_KU;@,F1KK1i-HQ]Ah)Mo?<rgYjJ3Fn,MUa*?3a;B3A,1qM5`DI>OR!4XOANsLGI?`mDSC)Q>V.5t.9<ROS/Yl]`hm],%Z'jFceBQ2k>l0%cGUD\`p*ihqC3>X3'45'a+YZ,J-gF?)Sl/;sc+Kd^[Lqh)Co6)^;aoS1UhB*D\"1X!c=$[/l<6;X>$%1%hL$Wi%3$^slU,2jIZuC`X^I55W(sARm/"j.2ouaP!c`4GU;rqUaWM`O]_Z8HAdRqGU\tp55l7LY/0c1jlV%E_&W?;Lg!hn_AUUZYCb:+QA%)[iIX4se]9'.h6<3t.<_;t#Jp&P)L2'Y,^3*EH/c51N=pEU@Xb3P[FI2l5/qJ=qc/TL0E3;iX:4EU=JU_%;@K:bM\Z0O3J_66toP%gMRL5k[[]:6)0@$?Hq?CaME<k,$q<K/l@DZX._G/KVoF$*,@=$7'u#B)'q>3F..g;W@DVe'PXbBh++\CCe.&Co/Pq67Su==Z"Z]#%7=a;b6]uG&<R]cYcO=NW;5%\9ml\#>*W=k>af$$LVOeO>+Z:Sd4XOIcL,Em"nT##@#]GQa[m\X@(6G.HpR\#`:Z@Tg:A,^ARdr%"%212&GA5Bj-m)_WR7leE>f)l)'VjG0o8V$fQp*o\E?5F2X(c>V3*cb!ZD+BpHf#YLGfAOj*0!5je"gCLr-iuG@ega``X:LZ,3:M0Z%$X,tp'or7B8m-`UJF&EDNYBH&KT6&D<$LS(;K=I+S=7`.e_RK/9XESo91A@`?A@d,,SGq"3ItfZF)C1hBr\Qi1t+]]"?7^,d\8.f%oN2im8SHji3Co#>)\k1kWq!$SP4."s((\?aa4SpRc#m$bHM[E.UHl";-T$ZT!$W.ZA8,+e7@cE(7ePuhb[F*Po,4_h#\!"YPt2/J%\V#O-(I'(*DC/1'AfdfPLJi5XR[54hBR>XdG+GFVn8H^_OCiH<%b;4Dgpc=\LAR$k6W$?I3.u$b$#_ED;<9Z^JL9@>0f'2-,gCD+%h^Y%Om1;tmrLioB]:QHJjYl^s8RnJS:X,St58T17a[MSDeoN2d@i9'=+Ac]BUGA%eBpmP.C:ERTb!=<&C,I[Ee9?qegG*CXa:q!-%VcB?d'O>YoPiFP3G`%Y]ADA"T,qM'q&uT,En*p^:*F;OA5n/sToFq)bI!X-!3*UZu=tUe=m0qP,?.r[B)g>Iu/)U6"7Y:F=-!1#.%ULDK_m?L0(7do*J1@`b])=)sc'r^>a3Nut]Z*:5/DJC.[1;l1!Ap-r+B2hm%*(ct^g5De@M*RYp%toDOg<s.c[L[P3c#l]Z#17md%K#sS1Wq0b7[0/>sYtLEg-g*o5Vej9+"LtfKXdX^8ae,eeU)]o,IMGB3n0`=A]j`s`V?>"-9FPTY"l@An5pfpi_,PV.`5n?L@W;OM%h(>Pu_TuId?bd"%Q!(ehKlF/JiRdOg9ffWJHtH\I;Pt5U:--U\jj[Em&K6)44W&552a9b%OERWJ0d$n&<S$8J_Q]u7d6ds?\>hl7%Hf.k:=CI6BFb`c'qhWU0C/Hd%2I"W4OH*P=THqumWLpL%.PQa`%@gH&;B/9'?J(%!)jq3fN?6U"k?if"cFF3WTUM^0>Lr=t"-B0U%4l'_4MaJ5>d#Q6q$emO"2:KibEZpL+>,Oo6-O8bE5ZWmkXWS>k019u<-V@Mn6on*.\*s*j]#&YrbJcUM/s_hOrUL`1p*\4]0m@Zp%hT;!VGKeT:'l7D24%3&u%MMOA,Y4Bu,Ja3^KPT[.2TFN8MljJ/Np!LAgrHW%:\I*k1rUNG'RV1*2+gge9<4VfgZ\O!g#j-U\B5s3%M*\-9acq+3ATW#0'*Wc)/G^a)9,9CWH=i#VOFa>ZIVidsOg![*!P:jb8#Vpjjo$,/:&W]SM%@[NEqn$'U/Q)LNm:)2hMF5,WlIOo%MO+BQGe5;o6L9?6j=nB=D<"SXO@OgB@<5L"NR+'6"kYp-Lc&F5):P6=`Cl>fRC619-)s_t>iVg%1002naG<O36<J<J\EU5(]c0Q^%T?n?!GD-+C!(94[E%M(KH8S-2(TN>c"PAVO6klEAi%jN@;d1pD$@gTL,=eDd*Ah7p6XG!mI8>#p]fa;B,TuUrq4MG6'jf^u$/gIV%S&`8$DqWVJai-pjTdH#G^`*X2j`N\7l,0W4"Y0%hBZnIR+tY,#J8<2RdRXV;pd<7P>?/A>\_j9_q-lD"f&F&JW\_'IT(1s42!Jm$%KuWjuUBNM5QTJIZ:i:tO,hc[-mAf0$-nRV#0UH]p1G0W_)0()kYu$affas.u?%K(K'.:\/M&f9(S.<t+WO#YG$FnR#E,F.G,pi&q%+=03#64,4\3[;[F1ZGS,Fc=eY)VXc8nilHYN=_7Be)h^-l=/FiN2:J@,f5ZR/.,BdC+W13FZ9W*Q#JlGCPD(D9jnsa:@!O%k&WRW%Zr*c+G/om$%;r$W*dZ5^N6-WK"b99OaqL.`Gk1,/9\W=5[\2S`.8@cK]H"8,5.1"g:*gV]@;76C=:$@',G3W*UtE[Wh`>#SS/pq(%.IJad`'`_`rR0<ne9-ZjQ'L>8[p,p*QJ=>TY,]GG#W^o+pqEj1P:r6$ZTDEM7oFBo5JcKo@Q9TohKP=I'rS/J*c`S^V*UK/LE*=4%$s%!o':M'R_UVN\1$'NWanL$`4cm)i+[Rs#RZNWj3iqGB[o8<&d(T2o8@TQ!ka?X3TpplSlrmhd1Yt!Gm5,SZVc@:R>,S2@S]9L=%.n/.a(8qWo.O>*b2#'V=&>JjQ"XDTcZ-G@^."q'%7e&I5Xn\=5DOJM?4?$DH%8r)7p[(^0SrEM7$gFA`S6n4Mj4scMkh\_X^h1Oe%m.B@d-N.U,U(k")`6g:M5s+@7O@m8&*jo)i1;dUZVEMsgb+3L_l$Jq#CRt7?"MW1@".A5'V_scu`7tpB,^(bSbrBtl:I!/<!](9U%_73F>SQJdMFf+hS:0oNC6iL?LN<T9P%f)nGA83Dak^E9X)F8*aMS!eDq/dBY4&<Q7gLe6Q^8`6;`KlE8S%Zd[k[XEUf5@iqN50&H%Hb9Nu=&3ufb8t)d.T3-m7W-Q8`g,\'G495ZDK!RiL%<fcgfa57r`nl"XEWas5U"?s#5BfJ>#rO_3A*B;?.Gr2XFPjRZLEIn/'/bt%bm@(d!7Hg1fcM6ef;\hO:^U-<_(*r#/CRMuifnGQnM)3:eW6hfrT4!.[sLt)Ir4DbT_#'=4r2R*MCMUP4ROI)ojFr&0cXT(KOupG%Le)5-'1i=<61gkMS.=2<OM#ZXP#&p49";29]@8k[%l8V@C:R'h["G>YR6Db0khFF>0pZp[ds<JU#t=M]-g9LWfhjDt)!3Y*aYKs[%1K^L8A;5t^gBn^]FTV,%W#,G""<GJh@MO])JerKHFc]L=45Ztl.:c@QYnp@,lHMlIK7,q7]j?0Bq=I+Ak^DK?QQ7Ber8h;cQiHX"%b?t2'?iBkOq]Gh2n,L<*pfDt>GCT9-55rI7qoAa9pJJg.h*BLd!6C!EDtre,&XQ-pb>*`:MK,%a80Cb8.A(#O28qX(bJ&;#q)U4:%n7U?Y+)Vf[q`:fE4pn;lN#!:9;`"1X;YY1V?LO5u!;EDNOgY;p`o&LTAps5f5sJ/-:/c74oUq#6h2!S2L*#,!/I3uJ3i4R(:fPN:%/W@P2rZkg2JLIA30H'GKpO&B<oPQ;I\UL]U9I!T8NO/dS[3c$u*1VmR91pKM4sp@&b!BrGqY^8TNVhAR<Hgg]X(<S]S0$8j'nfoh%O27'D$`c*FVF3O9RpTBs[1jmp)/.K`W.!l5Bnm"O`s9*sJTXNTJo@!%-B\C0CtiD!?.:W%+/#ZVqYC36X]3+,8m9SXU>G9.I@TW+%##V(I[R?BLm="Yim[W$H!&rB=DZ5&\3b!6V#afa@NWK6?L6HiBl9"@9agrF^GiZ*Ni6r0K2fq>@_Yu/49Uh-^QQ!=[;&+Gpa<1`$%m[-?Dd%cOe6oHgn9#Uq?k:O\$QsZ8]dloO!#.KPqd4o\OFVj"s!!^g%]4dp;R,cm-Bua.$j\gE2lZT"YQkU[*WEL#;U$o\SekFd#%UVoX?eA&IqAs>8M"k1UEILY)fB,LTFp&![D&bhG^j^ot@YqaG4F1*!22H39.k;q3p\2sOaX`$UpDsu(=cc_^0q,G<826f*C*FG7P%=k'WanUUmN+*)\T7R?]g>#I4LX:aK?&_Z]8gfOSjd4^C%I'O@@4W3c][P\Jf;p3hm]b2umISMnP0=N`*>,JXe=-m`%f20?&2TS/K%kKXe4F2_DBql]k6+CqqL?nIYcChU,V?",qZ?+dTJXnB2*1'1C4&ahaoVYC3)8^nVZXn]"E/i<To%9l8H+1[NF!33')-C@K(N:0<0%Y8S@=k=0fCjD_Y\ctnS2>@dj)TG6$Y8F?+j>BGeM]8pI5.,*8.ZISN&6P]!+fNqF'PR>F!EM(VlZ@sV.!6r$[BQ%:OV%Qj0ULu:K%o7X\<P*:ef3co<C;k]!he"F"98`0r@%[ERI8ocQk4/GY?'@/bEmPIch7b;\%.&'u/XHdif,ujlO.)b)<aUb4oI"]m)=2h1Kn\1`r%&p"+E-qn6S@JRFH0@^8ogA1N0i`9eiUHQm@"1ZZ8jo-sYpsM2r/6Fp)Mu))8Kl*>TR(cGf\1lIl7rGajHF3.I&AsTBA+Nm(p"5!]%DiW4-USHt]Z/ft3dY>qch-sJ<X]s?uEOU%jKD<`0+KUN8"L@aQ(o=RIfFCB2?Sd`t]7r2f1qltq^tphf%/HdaRS<$jB?dp;?)u#J%A]AA"TsnmMNhC%VMHe9kTmND'KanaMhOp<(RccbU9]@?ld$@o&Nd2UST>OPZH.FZLL!;>hUc67@?H+t6mXA@UAr5hSX9#l5)CBF=%dWq378X4-SHTWKBnKP5mObnMG#nS#AJjqdYR2+Obfa:5?)3`]Z`!<bWDFS/AAE#X.G_m%KEdAN7U<"'ub498(B4,L<r,Y?7W0$QU%dql9%:CFnj.-NN869gh?fTE.[ISaD5$H`dNE;Uce-^c_<p21k'ak\n$:s24O_p,.!T6`*V_D5-h@@gZ_es(>+9C9$4lTrk_>B?L'%`3=P[I42"YWUq++@0Dm$l0UWaFB%X`j/b8mkm.mma^e[(71!$$pS\q%7;X<g\U$Z\O\hiLCQ^5>[OU2uW7Alj$ZC6&]_cPOlb<lE%a"g.iZthd$+Y=LNL/<e%Z"jtqgU*'!De0f]XD$AnZXB\9AbinD`^-J-Wd?bDl]%lj-D=Prj4:>#O\BW&g/E76ma3_7MYaij.K6W[%;2^bC0S%8l&Z4;">k)S[gb3oE<d_m78'A9cGF:9h5lbi#qUE2KN;J1QR#G#oFf#RdB3K\:LHsCA]?95)beT;lX%KJh\sB!P"K9`8%]Y'i6b[.En<gh<c:=U(dfGg\:4]*<?.8]GV34V+N.u#Rq&eE=#q*!@JSTmU?dX,@g<*,>,WO6\VrF9,1r&)@gX:CALJ?`WH$H:*0%!V"iZ6'1dYf"PXY'T3W_DGK&tc=IcaDY,Gl:!UeD@3?.H(t:"AN)YT6&%mpbe]UKa>nXWh<T$!&TsVj?&B)bd5=4t+md2beap'7R%l/!K$p1IqW[/)cb;2*P\Hjh?ro4#tk1jdY,++HL0]a%7b9jL2e^3JOe(9I[p_ufuD6</MX:@G6mj(a9)+o/fW<%f^>Zmt44#(<R$%9:6R#&fp.YNI-M6hi0Al-\F1FU3X8V_AM9rc#A:215^cV][\XC_:0L`h%d&o(ISo%n7eo^O4CRP?S*_HJ\5*q"LQ^j,EkQo3`W`G%f`2EGk60-CY\+@@\<sqY@qg`tZKj<5F?M%dP-K^6hAl^53lhY(a?LGf3^Kj[bGaQu=AVA0]/&D>1Z#c1@;>>4'mYY-F:YamBK7B@%jcg/$k:hFbAsD>c\ne6VH:;6S8A;3H'e)0e;oc2H0S<YM'KGb,3&I_k!]/rJ03-^XZQNL[IslD.`i`c@ZUj9n>5(QST'(DWq0XT;%?CmYs>M&itmKs"Mq[^\rh&iUf78S>TUa<h601D5251#E&;B?R7!7:U:3+WV.45a`CC99l)*9C]lL;&Rdh,YQu8&DZuqXS0?I/W;Z%pcY?#rBu6!WihFjq/`W+$4ZRVc4Yp<L!UdE/D$@!d>pSR'X?CuVi/oqiFn[W1,X9W.ZBTUQ"`P1O0j3?2'<63ib1P%hP:Hca<Ddi%'%:BX)US]9A-t/Q=jJ3+)p@AkCtX#TRUR]Vh`:V**Y]:+#[46cT5%L*.,MQ$GWaE&Vc;U6cKqkXc*kR9bE$fG=EU;"8`Te6,]d2K%4qr,8#VY9IUa6C`(X\s"qPITR@,&V0dY5ZRAtNaNqM`t@T`mmWHmY!5WJ8bF6BphKqTN>]M%ssF`UE-h2D9a:EP?I]nI.)Z.-n/B%Oj'?,Q+LfmD$Yim)[Eo[LX_"VBs-XNjCFt;6L;jZ%s*Ol`tgGL]CXBJFTutiK.Mcnr,HZXWr$_=]aXI//Z8ZhSC*`.`A-3&Kh^)F%G[$O4mo5fMD7$5=\!or@U'_QYL$mP!BEs/'N72`ApLPMPbEgO7Q=X_#n4;*Cc"K'V''K`B0f=go9jf.n?hV'EN5-#(IfmU<M\rUm%QCD%Y2KEIB(PrYkcMfcRZc[hroE_B'l\-!MZ$/M$/PaUM(EUkTC7_!1+[*@R?5[Fn+<Ttc;mgL,*N0[I3>A!`\H/Rh$*^VJ+2Yej%BRQ&`^oXajV.EQS0,QK,]SljJfH84;a[@7a.&fkGJ;L`S-c@Gn<dIIR7,qoUPKl#DF(?CH``O52.mK,<H:Wes_Erm*Cp@[]H-#J+%kGf7q9GlhJKBX]hFLCWrUFQP<V<UJ,K]2Z\4am,,g\lr[Up#q?&'76e\so*Lf03&@Lc*6$KZ3#b`Rg;STgX=ZBHg7)GHHe@Y1O/g%1'<<_$5`p-R%fhI0Pkku>X?=b;Y!Rtd$]X<:aOlX`[Y@e3QaSu=\Gu:/UeR'CV!7&>1_,R.HL(r*q?"mk.u0*g<.DB@^dh="HDf.%,,_TdZ2JdQJmaDU@`mTXYdS@H6&W0!Va`DKMI;X,NNEe5$+r9>Q,^"E;?NINV]KoUKQeS?[N,f2`G2(!\E]%+D=(S^=bq-t)iI!l%(u\krD\WE3BP3Xm\a:)_@SB1=Fk(U?R:iXX78V*WL+?5#K_#lPZ$5"BfXYdu0A=%@_kDs6SBooN;Q$TOcVPgiF7EiUq8*Dm6\h>h%7+P(]BQkRhBYJb^`&/P&hJ0Xm\1(9T]Y'uPHcYZNiOh0cg9K4K$]_h.la5on'ZHA&=@Gq@_>tN*0G)=XLH`b.EN@V%4Euj)P>2K)%f18L>>"-@begXG\@^T!lOr%]]306]*E,f>%:ln(9eUg*.E;dV%Q<;@<bec79rpZNjIbeL1cM3df:NWDq`$/8F7:lp*N8]uK8-Epf%'k/m49sP4B41RhD'qU#2'!c>W]f(7>L%\"VcEr=I3a3qmahc9d6`;kH3`7<TLXi!L3ES)'c[X&.VGtbi'sV7YD$2G\eJYU:)VdSm%9o!5b$YO[,O\Wi)2[=Rf0RGcOGn'<2j80rP$l&iaG<mU"6jT)ig+?,LKa7f'VTTOXGi>qdQNg>p^`$\`bDr@a4>Yi3;%P84Pjh/]%[CQ@Gknm=ANmZ3]ifZ'0T>OR\]30F^WiB[ED6%ZD:2!$O'am6`9;+d\XB7D\)!""m0*rT%I10;cT/7T="!!URA9tJ_(*BlO,"a*`%4HGW:)9uW_HeIFqXoucm+5!,_b;>q<n"Z$0co\X!U*H&Z)M]]X+ANIXXbmJ-rSYVSTc1/u,<Si&_T$Uul'bBbAQT[@%G*D`2BDH2%;&@CeiI3ZVki\?<>b[f6q-J2mU@u4:"2h6&Ukgn#=7p#QBgV%:3Htt2"PKXroNlY?+X1<C/f]Q\;1c'@2_"mJ<NC`6n5-6]ijF9A%9"cT(\mDm45'[%;Z5hl0R[%C&p%8u/P2M!dX(2l'7B9t6+eCV:].F]tRabmP;\@ph=bB'Ur!U0"_.)/NM0LK1?)ebdVds,J)U3r8%o"ZEN(=cY$]Sh5sc27KnJNg)0nj9h>K@-pTT\)eYj1U:QZo=UMS-=2N<Qo9E4\\0Sc-n7&]@fm5V7lL"W?U^L%@HGsKE3C^U$/^'%Mbfe[qCDtq?+]n81d4o.3un/ZmFuPqo>1gr,D"p;Js7tO*XBsI8Untrp/ZMs&jXMQLg9!kI+->6eQH#gbm0NZ_dkRnDjO2^\QpO&%S:0l=))mqdJbYnh80&E\'ZNHIkrc"S@p8$_'JY[M7$8s&pe-O>I,rH^r=2$AjY5fW4[]fe8d)I8^jpY%cjMkDc]Lf3n(N'21l9i=%Tjo,kq@<Pk+N:4UAe](S*X\QV1<:U"FDDOAO-<F5.r0&@_POKFb_WtCE!aY74=0CQ=PKM[=d:]j_&SrtBbf&@18X;5B[ga.,Wo4t%Q<3>j08b_r'XakK^bgm"arU-kaLb[e9.K15na=b-P5D@01qEA^>7"^c+A\BSjSQkPi][Y$A15AKo`7E6UdpXF*Ba%j;("n043:/<%oZIen8mYX4?,tKB;+BpDK-P(tOY6#T*61d3XI:XC^FiT)`[H??R:8S//<lP?>^Jh[[`'$e)IuZ2ThS,/7HV,*,kVtN]_36<Ag,qp%q.DT#pgdl;3df*UShMZ$EM6)Hb`CmjNMQ<EMGM!bSO.RDI98C!^SmX)j8(_3YK8oo>8^eWkCUoD/"s9F?[_"=<_QB;c_k?Sb&q'Z%g-ZRG5r)>V[UXf>)?m5CGr;+UWbU3=D?I1kZA2+A`ZMqq=(?+eUS-c*b4=p;$,3jIe2bH@1j;7I<N,8BV_n#]R$](L($gDFQ-5*u%;sbcuP0*lT`)?A"5nJ_R)P##jUGq@])o;Fg,R(L56Q7p9_Enp1-j?lY/Hq9&gKR'bFnrVF.XB&hlk9mX73bddVam(9ZlB\6\lmr;%rhgTlVI6.^H0jUJYo]>LX-p;rNkQ&(oeHmL+n)SmQo,CSpb0#jF<=m:rE>bCY8#tl)k31Vk.c4@;=jm%Jb"acIag`r7X5-?dK^m.%bq@:W@Wnm.FLm/,T`r!:Nns[DHg7>1d:[u%h1?QJRG.FAhfH"<P7O0hP:1hgSE=AReV$Kg,d"Y2aQ`uY&Um/E$(E04,YqL*UlsDA%_Z\)U1A.n>N+jW:^(ic(B-hl.a]PR[SO+gU?mb(:onREr1-nq:8Iq1RB9m'X2e#ul,QIh7^#%<Mj1fQSRu4.])1ZVbbf&f(I_I-=%4gb.reIcZHPI1YlnG[lW$:2;)U&)0&1/ZD2*Y7/O\FAo\Agr%>ArB8YQP9pC>9gciPeTfD%a4e66lekiI1t5s/N[OgDO!TeKP6];%U;QAt.Q"iBPVZ_Vd/36rllV#rE8-\8@`Yl@J6b>F>Y6sfdjpPQMOYVYiWqj>6O@4qlUYHWPH?2"i^ipcm[BTrn87gHP8=/_T_UIV%$Xe;2Qk:OW:--?[o.7$4#:6!HFKkOncOtFrI)s=W91-?D?eh9lOYg[9O$j\W`B2Tb-UKW'oBu1b5B:)$hJ&9XmT*_pctU\'L3@0S%KoV/VN5gFO3>1J6/'_DQ@N*DKNbY5X]g(/m_s:4MQnb#&:N>eDg3]=c$@GIb21<,[rdeRcCm<fo6GU<+juCUeGLf,m5`4=-B@;6*%n-@_i<AF>$kds+;9gg3CKlM!no>G2AK@Lrt3DVJFU"r1tg/uVI]H`H0"!<[h)(!WN^f3Nt[*SiAgK(i3oIfiPQ1XdqRr='CeRS!V%Q%CldE2=Q'>UPPn>DYNQi3+8EVsBOkV_Kdq>\):LrQ(lp]+i>\J`Y6mmCW]1h<h:2I&[cOG'23DdU-.cPh0SdnmtOLNEXp>q4hY)%Jt3EbLk]Zj:==>Y-"NF>8:b=#8,sZYVbTYrpea\B`^!Ir``+'*0^\+&g*t(;\&_m6A35L3ELi3'=#"_$eun7Df\Xh17uOjAdQL#e%>5[J0-ZM<9\gt!!I[mCW`#6i*CZ@l(.&1P^^-d^eg>gb`69@m7Q=LW&NA)c2++C?9is8<k3Xk!cf9tl-6[dmf.9Oa_Q,u)a8c)Je%kql2A;LCCa1Cq;K.ll[)Y2Dn)pH>P1NubY)TnXu;<,9,OALk(%\eN!J<5JaGB;G$JcZshg!Ye&K]eQO'+kLdNZNmRpO[AW.Hu?7s%G!8UVgQbBl,I<?u@*,nn'uRsu(mDB89LSjSp^4R,YOgh.J$?kn1R^^"<5-g;P@co&KLJ8:ZJp!sb-CFn7AmXF<g'3%FIZR]SP/ot%99.2=)tC?P&ebq1O%jkV1D\nRC0X4Z&!O#.i]H2OU:i"iF4=]!<J=/gq6?Ia'q`4#BfV/(,PirH_PcGd#6I[6!SbMad,70OC$jZA%k1EFOL0ICn$u9E/n1c$il1J-J[ZBJhAiU7'8uUe_A]ncg44I,04J2L%5e2ZZ/eDfYNH+eWX%[RF-`O+P>,G2F[aIY'j[OPJ6sf@%%BD@Ie=NO0'DXr2%:LZ(DhV(;Z7?:PmI=l_ua,6aR5ZGP:F)BgO"crqd=DcI/A4fV8\_(]=IG@mLd3fh0#$g6aNAZj79*V\K%EWn/%4B]m1j!6>*AummZmI\B&-VmG!*3\+pBI`Wh#r8@C)'YpG5!!fQ%usg>PJD2e!9h'm>p07M<MY!QPaHSaONtBS0h@O]09e2SM$e![%L=.dW6pHWa4sX*?SUKgWL.!LDKBej**iI"d$J^R7DlnEj222!Q'i%r88:hT!!'og?!>7L3b<L/1YM&*OT`=+SFquONCsHGpB:(H(%CUmc)(0Y_Y8I;1i,5XB_EKNje&^M@u;Y4N7MWa=NJ<X"(;Oic=7N83b*48X(!<g9E<+-<#QR:3+1aL20'5:UkRR6N9a&NTXa^M8/%0u4+[9_kK>/'OfBSi.I#Qn#E%2QMpWPsaZC<\LKnr.U?+5[@L\Vi&?K:"`ZLI'%*]1Tq/]dM@&0J14Hu%-R^9He_R<q4b"QihRt1%oo_(:CM74kkf[Bo*Taa<^p]@*rC5GSd:3BE+?73kNdhoaW_^D-]8C=P'8W.DG3bk8S#@:J!"u4f9XSpI<.rf2C@es[q@kZsm*/*L%'quQ73Q6/n1k7f*NtkmjMB8^Km8];!Er&%+U`;JN\LQdNU0BCo*uQ$RY*G]^#jPuL0qHo5n[s%T"0.Q!&N:C[+r8+,oM+6HA:]SH%E1.g7$jE<&K5IXb3\.oRWZLG]"fb"9Hh;iGkk@V/K9XOk&-Pe/8MF'9fc8R2,fY#BS]qs5?CFfk/8gVINrFiIFrOIaRMD<f_ek4/%&/HgS7#=nBV2<t:@o3.U/Xr%PVEg$rUPldAlH760alK9h$]:HImS$q`[Wu6i$M)hL@5RL.:_L<`?#/H"Q>(8m]S/jp]LJi^e77__%._R4*R4N/#7<\L?idWgn7nBOp5T5P)BEcpoZIE_Y5D5AqX9oRKFMJ1iVKUO9']MNWaSmACPRB6Tp<d>$#&FXU,g9DWUDFSUGCo]T%.Xf84K_p/a2FET[=\R%smo;O5-TlD-n1HuO0HS_'grR=c#`YoF5aXf%mr>m`EEIbH<_0>uXC83L(kAU24dNYF-;T\.$.PrLSgD`1%/V94#VZC'p%bdptaDX-GkB._VFe9f3@tjbF]N\mK7;sLIaF[)a%:@#R,_T,[6GSGaWP4Qg$kb2;75s3kYU$LW&%aO$-I@ZL@MPp8%ad2s+CQt'gdj?JI<284@HS#0=J[*&K.XPe8rr0+H_-6&+fc1gb#Y3%Z#n2*&eL8I*X2F'Zf]p]S@ej"8.b$I!NCR"oiYf;G$0K1T%BcMViI+?<HY4*Q6M),T2=O>9#b2j+;nF,>XqM:QZMSV/,.<J=$UVu*U_a%Sj:V3B7MA910cT6uh>.@/-7A^6NQ/6@Z5IJnA[OFDb%/l[!6Y?QnoXA6CjnPQR=SJ+I/=3kLEiGHCrc#Nf+b8JUm!sf.A_C.XcU0i=&F_ii?f20/oqULtEos)/5VN`+9:aopgmj\hLA;QC7%[qR5l_u[E25ujLQ#e2kB6D$-"'sr=7^3.4?KkfL7AWfJd.98lKBl[+H6;T(;o9GMgYp'efVtoGrq#0p`"R!/\KL^r:%)Fs_+e:3;%_1'Yh^iqlX;e`s?GrMZTd8!igKuPGl+QG"0FtusMQ:SkFl'N,W\gTe6Yifu1+tT@TAqgX]`ei1ucHf,FU_Df2EOZhSfBSB2Id2s4%;c'#o'oG/<*k5N8>.R2b'bqH@>.RX#,UPuBVFp_@cmkub\10.e>(m8<-;@HQGRWjr$EWnAPME#P+lUt8$.=-0'A,GCLlFnX#3.[Z%-r6NW?ErQOi[X%[SJ?!Tb`fZ37>c=OE7oCn0F.g0Xi72pPdT5AfFF1MmOhk[S?NSPZ3A1QVRm^jXJ9&=9FD*!b[hE[m]j6="k3g6%Op$,SX0r'd]>VXa&e3!V/2de\E?26#V7uQ>0Wf#dn#CZ*,#RoucnA*<8Z4-3`!F[XH,Ol0Y&]i[8kHOYEC8fcJjO;ARUW9k)P&nt%)0\dbN)'gnMJZrp7oq[H=Tk%!8He)+fu2hPD@q//Jd"J".Wbm)T"qrhVS,rP-TOkt4+$\rA`)VV@lNR*;(qK<Z+]^1A*47p77dY=%?R`\h%GZpE8ZHEB74\m>p)K9S:n#N6;cp3ieYeZfF*'b:#KGD7UT5,ki>e,`3tNRG!9eTQ@m0*c`AGkCT%0]+/un]uPV8Vj3Ie@^%3J=C'H]@ZIF.lJJD,iWrrpD(Z"dgFCUdh3gB8oSHL6n#22,6Osi]XNBq<YGI@bh/L3(B?8HUAR1i`s9u6mh+*#*;\k?2$F;%/+r.%Fb&N.<.Eu(:58aL#DG"(hpu0K*@J;b/>&X8\CRWjj&/%C1NE)\-5?$!ha5'_m36Mk3Wi)3;A;9i.(f^m6D-do?#rKV^jtkt%<0m'%>r@&!eq3")Q.1Xk2hl@YP7KID)s>ai%p6A%4!=S\-^#1!9_k,Iq:fJ8nt'!'OW^2"=IJ\J3:TfRUE((40uZ8Xdm84WOVV$6K'^?T%7)%C)(#f@5"q@_/CJbWp]\\[L[_K*ddH)SffNO^2^V9e;e848ds8EMlMo*8G,C0lNRmJC_&T@!(-;5qQpt\PD(s>3p<"Npp'.-YP%B_m.4*hIe3Pfj;0V,%IB1lA03H7^OPGW-YC7@Ald#Ddq3+#HnAFpLNU:_P'/7gC(+l]/\SqH]Kr;++_=5SZ%tcC0VU;#r7IgG-R(%rSsmnn:jn:iZVf80e*Mr1m8s#F\TCh9RXooRc+gbmJ;&<TC]ohZmeTqm2cO[gnZ,jmjk!_*AEti\0!t`*7K&[obT/o*7^*QAZNP1%FIA+?7pHc3.OM^!R)gsi$H6AH*66^j:$=#sh.9bb_[%8e,/+:(VEM>D`XTBYrotlI-<#e5XN_J%hpp^.*T'#Pcg'iHme"BEeuP>d%'>p6[,&)A!G4uXJ>R?W#e5Kis+m&B-#TbVehne+`.!?PGV13&IN0N.@+BGbM<`W$+j9W.FaiSoVQ((';BR*&A'/0EOAm1OJY9nZ`%l%%u.";"35&d9.]p],Hm]R3csP!40%hduaem4+sWMOt<J+M[ggXt"e"4B.;TH+D`SC08;u@#U79[hAIP239b'KXXn+E]F?2>ejX"%UN::?T'3=Iro?ef]tqql$b4mHZBa%F!s',>fCH+aQLLCo``n?j8<b"9HQ>uc_KGg),Ef.s9[,\.2qt4h,;(I97d_$oO>Xsp-=MXo%J,T#n#5.u5NsbucbO2QQ/;A5Qou\]3gY_:7T(qiR].I@Ue"c1$p:"DDIGpZ-E4IsI+oh.0j,Qoaq4E,/XVJseUO6ur`,H]XNE<ZU%2;d<c_/sJ\]Bu<*?Q%ZjpBTJWo)9[@/["$1o/Vl`4o)KE:]:(;KCRg^&%:4ogn&K^e@,nX[+Sdsp)iUPe'A\p4N[m&+aGm#`\"G\%E*\M?4QD2/*t[VU!>"aPM15Kt9L/S@erJ^/\3F<lp4rM1V`bI^gIls@D2VK1rV6?ghDW9DGJ$/Kp2)qKhrZh3n*g1sFP?V0]JoV<%m53>k$)]NH062"%gLtuIlH)i8IcBC$Ir+dZ`qY5A"7@9-Y!N';!WR(e\.bg*obS$nZ>%6EQi:CiKWPF!.#]o-UM#64,92Q!>DkB@%!2S#CioM0i:9BO+,[.5\!!!EQ;skqe*%;&6Gn62]&GBW2&It'MA57,*:N\.Fmj<4ngC_ATI3SQBc.jLA;^.#nKos;#_r7D3$Hu&\%ZXC3!A@HCm(nLatlENc;@$ulqW=<9p'a^8m!*b*-7<s]2@LPlBMWKe=L_"=kqR4J"o]=FA3Y7DnMVLAB'UsD/0[O,!m@h-5k[0=L%f0DIT]'s"oIltc;,\0IR`7GkD.V*?G58ZUF^Q`BH6&<aIr+E5^7b-Rlk_jL&!GNV(7AJ"t%D61<d@J-h+<:Z&#We9NAr*m1A:%pi%XTmMgZf0s^UD;@#h9,h=_#Wd7[#t`u4Ge&)kkkhnG;2A,Lafq)8qSGD7Q&?IkIbLB2:oV=LZ_=jhu)EVoOIK\2N*_s,pej5&RjI4%oc"eaG,&e`>td[UOWP`hXaS7BjLS,qbV;"KTB:I5RPq<A@^goa#E]WmfanCb<ZkQ:Fd0+pa'U'WMWsiae4m:%*oBa'pEppKhiZm\%K)0)NY>sh<>%Of.ciB]o;uum,[7UPVnCI014o[(FRLmt3YLhT2)_;heY=%PZb)b@*;a4?SDPJOoo[hnGA)hfQla@/b@!h5u+bGi4%HL/(4Lj2(+>HNt$7^pK]Iqj(pO#-HO\&impNZ:J/Xkg`mh543jUV6(RN4H]<'t)ncmnBo'oZts(E+n[kh$1f;5JB!@c9CQ([um[O%=.O4R+4g#KDBl_Ql=7;#l>`tJ\%sB[]$h>rc/[>Z1RrGJG+&eXoBT.mG-/IG2!UfQ?]bG+@k>U4e'oX6]KC?Ueb&0-%q2L(Xm&i$%r`T(kW.G0O@u39oR<*c4*/Q@uqMCA/P`'J"7FpI'QWl,H9Ic&3;4pEh7frJEf?3osqbtE)n^[N%o.$R%]r<+6"uLA'it8IhnLBU>%GictQX7otJdjfhgpO,K,3_5_YN@uHs3Za6P0UD(hBG_iV@HH-Q)ZS3LlT,u+(r^!;o(W+7KPC%]h4Apd+!9D/(dH^6fT5bjYk";3%4IGPTo%M/(hgb!?err#fF#EoR]NB<^h+bX,EkN>T7HH*7r>9+GELg@/QJ\(@PP;8?"iZ=R?RtkX>IUXeI=1^:jh-Hhd+YcaUJ1?(%>qs%@UFBO2[?4O>r3^j"m9Qc?kP4\?hImeo+<\UTI^pA'EU!\AeS+POmUG90f+h(u]*.cDe5C[hBal"Q9MU-_;hTned=rM9G\%O;%:&9l!T(%TRU]K0J</i)tDqC%-USJk"8*ah=9[:7*K$b9K$B5jiC;Qe,7uLSe2BRkhl4qB63uP_::J"02-n-7YC59o/C@If]nbmEt%*;]6ka/H1eqp<[sI=+&RIeKg<:k078id@bY_@;t,LF.<$2a8h_#p^([jkaKkgV):*kHr;0?n4N?nR)H1MXUDcG42c7a?b1GJkC,O%.J;>+r>%&rIB_`-#hIh$758XE-'-<+O3o"Q=nqi:lQ<^4j*?pA>pcZ7]_/_:)o3p$n8#%ib\nRQg58"!^"ftgc/U1qO?.aTZU#3'%IVb0k]gJFZW-<RSZb,V]mQ)gr9)`4^m)jQ/V,T7/2T\nP^!B`'_>(nUY'g<B%t1>!3](7=%pm*bmT9!rK/7DKRnn&XKK8JF]O<77%2:"1W?Z5(p3+uS1Fhb)J!TES#65]Lj;h]ZkY9k0X`/e7*dd#&Tdq(Ql6Z@KmOa!@k0$?g$=\d:1YZqq&_jVte!h:I=P&`(h3=^#*%6A?rrRZK_*LEY]`W>^S8jR?UAas;"Y6Xg)Z`ar(dS"Wj@M5mk\k`cZ2^<5@X`Linp!rgY`BN(g6?7"RQ6@K"H3t2uWYQ9XF:$``E%?sBS[@o=0Y.GCc^la6rpnu=8OHcRj9>KE=1WC(R+4\.#9AR^ukTb)0BC138J.mhkE13D,[FLBH-4X](?*.4YMbDI6E+/FpTmh*.A%GD7h(R=0RE,&tFmDmh&E(Uq6J65[tHES+<D\P0#\El++i*"%2Yn]uXFgp_19+/Z*L<N]cCK%.2-jf>gq&$6]9p$/#($i=.<H>M;"%q6Y/=]sUYRDUDbI=@V9n)Gb%4)VPG)5[ZQ2CELR*N"-6:==IgHd$l89f$`oPg'uap[nA;3>hoE;"+c;XC_$ngDO[O;O4g>+NH^u_%8)+kK_/&)+.@kbX?p((YUfkG1f@-cL9Fn]VQ>8/AXum!0\$9NUg,'JmD6#[aCGP@r+plT&cE`Og89[04msu-$nc=V1f],42*EGR9%hD_R/gP^H+p3&YY7l?*,aT3eL,O'([!/.4<(+fb1$)X>uld@N]I.)Y@[>1orh-=i'Q#EN@VK'3_3JX7EXuGBd7(r9a1&Xc[p5MqT%\&VIoX)N_%@ltS#eM-B#]%q\H65jUJkFSlB+Bt6$XWedq@uSuc0V)8DqKUhD\F0"/^AZp6DqCCQTu";]$(u+)AfXm*Qe5biC)ro4%F^%*,Tj?rr'0lk%lg2NnTG]@5Hs]7R$Xsp*?,OWT[2WL_D!s'[cL!ZX$c$n/s0[4B5!3t$lF_SXM:t4SDh-,!VNUen-MESds/)bZ%4^4(6]c,n>dJRn3Rh"CQ4a0']jVhbM4W*qj!HV;IT-"9g9_7WO"Ohk?m^[W"#O32P:kH>$p9XI>pU6R]Zp?j=pLa9t@Ck9u]62or%pV-WKT>('_hBr%L&*n5&c<#CB=>Xo&qlmTc>NMQ>DYq6*FB\M+j)s\H\i7ObkO/hHpHpHi*eMHO:\-&_TTYlbrDgJ"'dq/(VJGls%,NY9hoT6%(!.SW"aY^<F;K(%OIbej=hLFqL]D&5[-i*/s*gQm+/+:huI_B9>r6F<mIMr"SC5AM0r-m.FrLWB9?[P\;0_\lQ]9g;1%qg\UCs6W&NY:kCqf73a#T0NA!Q[ea:rqVVdp9jhYT=gqUiYS8Qf_h#6r5*153k!'qh2ss0'Zt!VW,Rj?bZ%cVB6VaU=<5S@7<OLr%8Z#p(Vs&J-Q,aGBGR,dRCHe;foPO:mq(6Sta@@<VMlAHI_Iptn<*61i4Z:O=\ai$+$BDQoOP1l(5+:\b'R?;P&K<JMI4*YB9EO)I%0S*YW4,mpKgm,#Cr%4ID%hR-`)Hekma(JgIeTM8nX.!J[gPY9f8InH1QNe4T78H#1ll)i8H/R]#,:lmcprY:C(<(O&s1gBLS<KSu%V'P16<6df@mEX2fM;2?(<bKbrcK4'+$"s82GAcVM,e'6CJkAtXok-me`"(6aphRXN2g2VV^,8XS\Ld;A=mA6]7S-a,]S^.!7&tc.%eL9c!BRU7bP#GFgQP,9(DiPmc+qYi!rB^q%Ji&]A_[G!aC+IFBQB!UWYcQ`*8NV8&rj#(&;$1s+HiU>R6FO^MdB$]K;7T6(`&;7%%nkpW^!NuhW-p]%Ui/3jO5^f\%fDktFWEl3K#?+YQ>p4lF\"Y'>8j^D:Slj_KRX3elU6I%31mBPp(PXuW8>-]>hq\I/e@ZRt"%_K8%Wit`7dPZi/g/Q>XN/="JVg4gLQ#paq<E2,biHF:P4=E&>I#$g<>[6U[Ml#-PdU.X\d2-"jo]r/rBN$M=_\="h)g939<%F*nf,uf%%8U'[@Vb1994%)qF[.4IR7gh/CL`XX%cfqs<2"TDPITLRa0.`t^Id>GZVk-MId**IHjXDHr5qS?FJXOl"`6'cfIr5;Fe'sLU:acrf%*R!TDi6Yb>QBoKde\Z*,X`Df?]\:s&8UW/YV:pr7'*E$_LuGK;h7)!FW5@pKQq^)[VJ3E&"I8-[*3`hsH>#7>Wn-"F#4V%RJ$neM%Ijr.3nJ*c/I7M\p;EJ5nDQI4[3-Z\e680dq&ZoH*W2b;-;cpgs`H!gGkX;N`KNZL?4M]#a?k,l3bXI4g%Qiu6L9i$l;FK\CXe=F.%T;g2fS&Mfc6<p,f2V"&>d[NuuK?R[KR(_c2hL4Uk%pq'Hr5KLW0$/*BXh0g2'3,s"GNeKSHo9Tj]%@,G+@3T9G.@6,L6CiXlA?h4%BX-h[P^=7LeWr5.j[pKJ4>ct@1ggu"S=V`E$4M0U6:rnCUq#Ui]&OtRMNJOr7=CPT0d^!BTq_AD6[sLqQBcpR+Cqn6olNqABbj?U%#V!>C9'[3XbgB&l`2pcBAOBaA]/=2s26[j;_ht]Pq4"D%6is)]B<KR&!Nmi<%DCfQ=\U`2kG;hT%8rEuAJ+S(I]4;8g[OGACJ?PU%QKk8!dlc>0"6XF34T"2HD9[HF(ZRH_jroB:VhH$6$E=CgJulM@n;DKm`DA=;_W$XA#gfP>RRtr4k1RZ"@33fAV%H'mZ`atC[.qJK%I?`Z%3>=InaXPYS!n<DJhE]5)C5\34[YkCp%GZIdG]@A%jR6X,ra%KS$)JKC6\HXZ^7%)Iq%`LO'@I<XHla)NOYBn=Ans,JQ3p#[%lE.)k0GC_Fp2H%(#Sj>UnFHMn3s)g\S0m!-JK#n/EgOYH+/XdSN;<*<Ir.0_VM[djJi5f;-h]6nKU.*M+\7>'I_?LOdKAY#)Ou8=%rG]Gu<65]'89$m7X*Zqp"9^)_rBN!2#<\b\IueWAl5F$>\\PoMG*(iXJ;^<X3&1U*G`>UQ-/';A4r(bXHU"Toq+qQSK8;!bREKVm%6?#m5Q;)q1KEPNDp-=;c_iFJg7ORIe7dB/3qm%\3To;YUD*G#DGDig(RfPggRKhhng#YB8I17[)/FptoN#Sgo-Z;:gZ4+QToI>bD%7luKk0K3'NMhml_2mtnnjFAH$c#\%^Q93NSCKAfj]nO%c%;VOBqhTAZIaC71bu42RqT<u>TfuZ+Va"rBpf-u>)#BVD8UBR5+0;P'%A^pN`MatIkhiEi0`S7/4JN)P?8)"=aI!p/!WXljiU1&7M\_5[gXKq:2SnRYcDkHspfn]UuN%p"S::gY6c!G1W(5e*"-'K595"LC\%-48\SVHbA/J-F!>D1h-c`F>)8&%4;agjM1o,A]!;>M6s]EHguFY?%-!J<PQlVohUud6'Lu)-f8%k]&OtI:j=PRZFYghmP,?fO7H_%YG^_U!A2m$GMt*"p;l=YY<ihANbu*BfRh2c#8UIee:b-afu]3!1piYjhto>3rXSfkfYZs5d/UaKQLC\!OTVSd`_fL*b4CB`PQpeX%&%76-YV\/UbV,"X1p"TARR0#uTldcCnJ!AKqW^[r/ga$gJKHrcX3.c5m:X34Z'I2Jm^B[oe+\37acYjTbGS[eZDN9JFkk@PTqtgf%]4_uQH'%ii;Q%1:lR`"Ab=6LFHJ`i"E'fZ>g!Oh58Bfg,q#8OP55j#=^:2s9ZUd1spHA=n&,SRD,jerA>KRkfe%OXCE;oL00/4jO%E)r);qI4PHFe#M4XM*o8ie$S<B9gAh#QeK"*"fl3rEjuDS3kEqeRVDNpWrUM*3u:*+TdkgA!>QcdYLQTg@utO8FXV>kbhSi`Q)tR%6,7rhdUcX0H1HW,^Gc*b/gL>'1Z&^rNDMg\">1d">esLeC!(<9WK>;cpoCZ56cNmR$^la1MdgDap:.M""JVRA&[#)2B7i!'QK"Th%lL^bQ0&XNtQ4k!)%?<>[cnKUi7+E]i.7Sdom`n[1/5C!!=!\0M,+g_j%&5r9@=K^`5.&,1Y+6i9LoNd5qq+=(aI34HF:Gb6iS*,t%LNT4j5T9U_IHu@]dHNB'KVo.lH[=0C$;AYte$p4]8XtLQcTXCn6JS?ie<a/N''uMZN:M&I5NDX9</O3=o!*[K?p^c5k_NW!(QHt3%;rD4k'dE%3T?Nirl'fUgmOOM3kIR'NTFEf^Eu9m/Gk6l$Hi%TbT)6!6Yt@-\PfK9%LEiJGQr3"onRn=o<r<WQ[/CcW`oK`K7F04U%0,mc0cp0ai6KW.i1"U[Vs&7"X$X@JiEj=9IAEq`UC>uI%ehc,<BQ$hq8$;Z"X/NCXZ8h\+1CjkH>osd`C1OA&F%C7).(&$[c5@%c%pF%GY4Z!d_P<EO#FZ,9N8dVj*--u)^&;rbeh=(51s&Gi^?D72\s&-[RIeg&Er?k3*,[#l#P*0W_$Srl'doLFOYgQ2SSNe^'<>/>0%OuqTS3X79Sqi[I#e\FG7&RI*i<JO0t_[^<ZHIa=MM3WTVH5.M/C(/atDQ8Vk<mstI*)56=862QI&_)A(Z"d8m<)V_Gig$IBGTQ#S%Ea)n.31jGFU^(^<DmN45/"\b_KLlr%6oWt")Ou]A5FCG'Y?UHb`ETKj>m/eO:6^Z(j>oiq91QIM8!lL?e=iPq,E?d!:*-_k6SiS*%e%DR(T\gG9)t7LiY*B-H1+<;3kLg26e=6GQQ!3@0hK@s[;TpQ]TW0o@5e.i1S[tXLnB4VYM9aFa\!qkmp5<sPMH"fI@srUKh>$K7%76k^iGb5lrIeCg$"u7Zf$tG*4][\&S](.,0O6aB<B+Y*)&$'GC_BDgA;sIP)M$U&62Q+Hr<QeUQVPXXHY4\X7Qa`!GkeeqHUeXHr%KX$Ff9iB7?_*4!k.#a%n1GNR"I>@AuQc"k(]-mjufBa&lB`^lWna\-3B5V_!.-ut5@YU+>`WiV?UX&W1&cGg_n>F+VP@*rk)oc6#%WY:;WNbCl-ZloL!c)M*R)[UX5c3QH\^Bq`CDXCL!b">4@K7d$h$eeMLXGA;8D<I<*?pkWm'HD(kA8R)8?,m8"P\sKT!*Xm3m2)'C%9/)`o(RqU(hl>C1Js42kU/[8s=]c@=eZ2KWeGdN":E>S]Q;`!n'd^JhN_WcI4\c#\N>e420d^4i@U2#G1=kU<O:o3P?'g1:%?pc;%;[KhCLkO8Jio<>k=MG(']p'"J152gf9NNlhR(=lD+GqJn4'bVZ4OaI)iJ&`;@.\![((BW1YDf(L]Y#f])ceAVFR7VlGp.mH;4;),%8Y/-/r46$q\g,mSD\eI2#AF.o/BT^c3-/jNpduu4\M]<1WstH122dV#frOs`(??aC'6]g5BPJ3>4u>nI)e+)/Q$6U)m<9F&f+C=X%=Kb4g(17KV`N<ib)C<p89dA]RhAE#%Z4mDmGT8Fn=o@g@1mqbJ*Y1u/<>Y,`S^TFIfhqZVqc2,+,r[/8NgM3On9o6H^CpP;",!a)%9Y8pB;(!T$id9,i<7q*6;(#jlY%3Bd/W/]?4<L$#TEsTR),5H<\,nfXZtu_'htDhk/Q0&^Q6a&LCltdTNp%',qrAE>\!HuD%8k=[%Cfc4W.k,VcB)"XCKC.Cd"Ze#0JPi'J9Wj;,/4+0eSYRe;kpC$BV9MT3@'1H'%mi"&ldN#YCNs&R)WCBdkbE:qqs$oHVDPdcn'OT]%T^K]b([5gl:OO7cXdZrh#\d\;/da'U>Kk=UjN-D,I(S/q=R.s</n)II2c.V3LLZBtE_T>0%1Rge&>r9OH.$kB7rh?3L^A'i.KQsd%gE:JDCRO%r'sAgJ!i,.)\0r8e[_.C(C3_N46Gqm?JgIHj5TV!I3bs.L(!j'&YSo@GZqWIS-i9,.1q6T\bMshsV(eE]YQo.c7Di,q%1.G_1.OHeB60B_]G=lPBZ>\?Z6cg-M"\#FHr#@l01U7")g&,je$k)^,[@%PX_Ba+fh?JT-_bnDI5A;K^q0e5NCMOnPi/6i(*DmId%V50iU?#abp4k+F,d9207`(#N?2C,#A*Bci[=,pul^7m!aYg&%q!bn00)=]/YSDT^fKS9$GLdX_q$0J>$\Vf9`*;Zu@)!T)T&D2o-%CDEF"II+@#D&[W?:bPl=X;rqaX2ebn&?ng9Gn)M[)?<poka1n;$D$:`P6lS-"2&C)m9j]D&X4nk1/iJ5+ir`*<Y^_\4bcAK0VL9#%U`\GC/W2FQnmN:",UPqK=lKjTboeser]Gk/X27BgrXUpA:%/IE;*93l[I&@1R$g>bRWU087];7C?_Rh[CGf2#3d8$bX"U?I#I<_l%'495cp408t.S3<N^Tbk0ciFtam@o5<is:0g8Rb\FpN"#No2qE"j`Dd<VpZPRX]e?n`ll9@%X0C+`YNf.S4,ht;dZX/Y=mHXYSX%4%r:3dO@+2LZqmCEKa3fiZ'j%)7WK41pPue1Ul?<qrY3C;JZ+u(!09`om-DmramUeq,km]3TXX]l4*QF:`Xf.>V&c;'8MWm&*0=;Wj%gcHt;G>4YVhsg#WTM;N):FlY;@>3>j9ff:b?)>-,g%:bToIAPW+dmL_gluT6PPjW74uuV(XY9%8]r_?\+AJT0PI5`$WbW5#Ip_GR%:?hK]IS`t\g92=?nIT^7V+f4!pJjMi3ZoK5V'FLG_caQ)c.AuX;dF%)Ip%L/Y11ElpU^N,^OC<m/0GW%2'cLNV_oOf._,OpY/hlc%k0Fm5g%s?(4^P_TT`4NCh*1GQC*.r\Fr9q2Rh&:[br5bkQHAWYNW<Tr]JE`/h5^+C&?:GkX%cNXPqj(Z@@9_<IVBr_R'b:^&C=#r%9%7PiAQYP:h!<K]/('R]K#UsZ*cT`.Q8J`I21FL>Q*V01Xe[;p>(;rrO;1>Zl,>lo(:n.FF/ks)/Rt-PGipO0h))E%>b70J=P@>$%It7F.!A\0-'_,R&E9]2NpNZ!ZJco8MCU*5/&Y0m&fhFTSXnYrA?5@4nT(hpC7G?7UnhnB`V9XgP!*3%SjG$32`Wk:tWL`*&(T>'U%(,RbF.a]Bf<[dPp.4P_*ZQL&A\5)9WXbpT<db&Fk!nP6cDOAP8&dW"D:'C_7)lUh'n7i()g:Eto^#">HN!</`,=Dd&Nc(k7'KB]D%S^bZDJC/L40YJ[%)#9%hiK+*#E^>?3:Jdb+S@i#md%dS;k5%,E6lkml7FIaK]PJCd1!pj&Yj7OIGJbM9#Zk=c.E_^0Uh6,14_,E\%E^1)mbi[(c*"j6R';f-Op(I4C=:ZZ<`CBCQbFbWgEOf7A1hb:hf<-Kb9%tg$!"HC!c4^4pBc;JYTCWtl>lWm9(bctI`u2SM5$#qB%c;5FV8Yc5>Bc4H^3CYVp4Ull9mY;.\-'K)g22?Q!W6^pR$)G]8A@?/<d`ig?8@="*[S^t%;1Tp\jJlWd*L]];9pq<j05]3KA=V@b%0QB(j,dA2U9&)I2^YK6h4\!g7]mc)Z@<m.s^-en_+1X1/s.#+76eA;i)qSe#WAR+-N@'qM``)Qdf<*J2iV]kbq9\abOoj6grG];N%OqkOa6^o[%(fb!*hGsas=qE@9ZD1#KeSf63*h>KK:?At';(`'gl^9Nf11CrfldJX`Yk;hH=eU%B$?@0=[]QAlBf6j2V:8Bt?91I3%6N<s$P(8KF!>A'%5u'5KW%;WG2+N>`apq3hng>@SS)B&3E/M"[M5qEA]EjZ#XhA>#oKqWLJUV**-VL1HMWQFO8YmU)M08IWE+L8(%;7+T4'!]cb^N&0ZnYh@lB5A@7c!G3S[9CaL7uFaS$E3%&9IbtpPs0c2AgeQ@mt3VKa&,LX:'=g;[e,)DI<mVE/mrqG&F7k[?>0(B%,jk1+lYI&)&nRiSP;QF"\Ui7[Ea2+anRC0SAZKd72Qaq`Q+u(9jt2B)1u#<Z8h<e4aHWL`N!\nR%>NDq3PidVSe7-rNXj2iQ$aq5%lRDhdDXgpb=4t)8EjURk`Mo'*N&BkA2JW2U$"68lZBudhg'totca>2Q3fDb0Gmr.7gS0]'rc?'1V0]:CVZ4c]I<8ZPC8oG1rc2>6%O#C2u$&"9JZO^U0iR;R6W8]MHK,pY5f-ZYiqWJ*`]ga9("mtMW8&0U2OKr(<r?B0o@fiV<L[-d#)=Wf^&5(+RgTFkUqa?C@;#/=O%m)_q:"gN2:p&ZfR2?38D).kGND2Iae0.HsdifUHrBecLfZ<e'D'eT5-UZelPeJd9_P\l7enug]`[ImM@#%bq:&m:-,P7hgt'TU9W%E1QPJ"H1uCQeO1(l>Jl'$<68DVP(O6Gm<8O=\2j'[lDOoc5L.BrVG,H>jf1%e0>Fk[7N,=;26UU#RR.NYf4$0rlg3T+m@Z2X:1UE%B>M\i-%QPO?\o1=%\]OZY*R=!jn\i(.(EHJi^FRZkj56_bt3)PZb3\4Lc/8*0"WCNL0b#DT^L?jWshE/V2>M\)S.AT<S@jn*Z:=8%O4p31F=UXTM&$R@*G13\g(cfW*_k^(37=f.9Qr,=Q[>36L:nq+WZY-md&/MDl#S@QWkB`PTR:=K,U'A4"?::RlT-E>2:JkK!]I+n%4Pa=C(!e7.PEmFB"l3-q'hD1R>ni9k85*nc[:.[hPKp'J7#$)[@l;#14>]fYP8/`g9CE[6Ru>a!>Z[23^'7U!=`W\4*L3Oh-;I9>%$1[c=qWB4Oq?d^sM-?tf:RW&:nX9-o6)7%2PE^_e[ocCrCqcb2Mfq]&7+tbL,@C]?:+!Z+hHG&[p=PeENtY+DQQi7A:Hdf'"o,Yi%>t.5m0WJ:V'9FH,Z7$nOD?$&b[!fusKB/S^$=bJZ^'ML=XOFR[.@O#QPljl0N[NRr[mSTjrZqga,/ZH6XV.MO'hV,<WD[QoeJ_F^%$I20iONZ^Q.>V"MUnBL$CQ23%&k*4DUFL[m(7qU[XWmND=c52:#a0BSEbK)TZPJ#0'Sk_W]WuC;"N'"J+a^REAsF8KAbgo;2R+DW%qjI#^8.<[[^LhX\KW;)f]p"M&]BZ\!UN`UlN6VE/31L&*Nc3Gj\<chTJ>%^uZ&=Z-YSPUoM@qBa;7&5*P9I[B)BZLZJr)ZN(@i6-%22Nu].VkLYde*?8,V#gH;YpqWl\Zruh^\C?TV?%(q</(1G>7qfWlfZDI"/8)-g/[nrG<F8hnmfcGkuk?$C+rs:J[HH!0k$)/;337%3-.ZhHC6muR7fS@a@,gTF(r.rQflP'PaA)@JcH<'5RWU*k^I.?P=*r9ZjP.SM33c+TR9CHi-=\AgY=IDjiRCK^YLbYfB'<^J$%]0%o$*`WO8[NLj$t.5T_-XT?i9kPqW6W6nXoKe5Q:6r\MAWqITLjkbJ4#%s8;;>bP%S-l#6Uas*2'<n^%77O8na:s.i_A2&u2;9tt71%S3c\_/$ll0Kle$[fS]9J@5D5S'IsgD,qE6=^Iq#+cB$'=13FrC2H"CM&]%/gCp,p.R5,NQ.@?>?;:kP35X`@_R8X]>Eo]2"A7;Ss%+?BV2MK2?[m+Wtf$IpKV/hQ:C]O_=>8nF9<-*$hJQunknfh'l)j4BMCdfFTi[#6%;U;C7<h9;uUm4ZfjTquH=^MXg=P(cjF,X5<:%#6pJl')EOCk\Cu$Ps,H;psK!`f1>T".TX[@[SM8bXij*]Okq<A>Y0?<!m.Co<M4hXU-haAq[g9DVp/2S2XO^P=?=`BC%AK2,6`mh%>?=Y]@N!`rblfR#7q7j_CW]gG>b4kaB2KaDXnhikoCHmp*;tZ]b[%cE3nO<gR,OMVAKncKW!Olrm\I('*d0N/`Sam?@/_\G!j\4d%0j#0$E^k*aL+3IPrK9'mX]EFe0YGDU!i(06>\k;(VoNh\a4MY4p\mn$EOPe3he,LsqO-P@;as'7Y:j4#4'PfROg-SJ#IT8=5R8BE%@KMh6e7["_4?[ardo!i2817o0S?>P"h6)oBm9:68Cc41YL.JbF)2ge\oA#00!B(1-D2UL)/RTgdU4?n6l^58M)jLf5o1\D=Bd&n&%8.;m74eNChg-(faaS=&4n#r,c#dt<=E)VX86G&hARpdKUD+AOlAt7Kih*q`Bc"b]bj*BHr]T'-P]<.`SRJAU1-6&/XbADA:>Wu'"%2E?dpET,mX)cm<Jq@m9j`$`Fe9C.1idM^dl:=g3Ao8>)XA-t7iQ,pSj4*i]CIK^Ej'H1<X+5(CY2t*f2RVq)]/o%_NKLA=j_3kug%0@o<E&\JgcPpo^rfufdBYhiR3G<!9q4r!!:VMMI<$K9*+c817N"$U`M$@I:7jk"'YG)d:I(%$WIFd3f[9s23KNTl@=bjo=T+-Y>9%D!LP#>u#OtM(UMPSQ`7f!SirQ`8idUVEkP#,;V3X8UJ+=SbnKsjHD@';Gr)+gpfZ+2.[@]M&/0:.B_EY,J&M72AN(f5LNUKR,\d8%OJA]OQtO.`p@>"L5Q:\Hk0Z9(<bqaL.lRh.EC0Cp+Si572Qf:_9F>iY&P$CLLj7VM&V$5H;JdI=&#.'/,%@o#R4e\sABK=TBq$_D%48SFb.&2Q$<_@[l8X90nEb?G5nk574\Vu4LIuF`(i='NAH=`SmC<j1_qUlErN8@<oK2](c1h3b+@VEo;#!JhPN)-XC:dN$s1?nq0%MN'4ja4u'@aBla5SKVchrQ[cC'"h"7$'g'87G?Nm>5/'aMu@Q9ZTjt%YM*PZH`?!Lq2emYV<r[$G/]O?6Ao8P,R:]Z<?h7I$n'?j%Wb0nl-un`@TV6%PAaflAUhu_i0+JAIi`]nRf<(2fD>XRNfuT/T*k,I2TPRQ)#/KX8E;:3BYs--Pp![0'[l%m$9JmG8!^BJ-M\M4J%*9B;r`>S:S2X*7aQ?ZcqG!'1WhOg_O)GI5'1iC7pf#s9>rREc,V$!ju?gYPMN[<;CAbQB+LZi94JF07OCJ%GM5emQ!L*Y]cKEUTb%-%O2PZD8',pGug.D9%]m40u)Qd7P,*+]d681Y]>[lS7"]s)%3'I<1`#Go:fS4]CXCJ_&6o]iEu8%0,T&Y8=,_@nEAER+_s"5o#NJ%W?B5XN@=A?h\ss"e3gq2T#gKjT:WkFJB8^qL^IF0qq2/cY:"@IT7N6nR?LiHNAHT2j_]7Ce_@[=,>Iji7K8WE,dGj/@fF!27"5o>%e'N@5df*!6Yn+Ns5JhaOX-WleL\d1.cplA6k7VkQ'^It!1qn7gZi]#Y)EPsH6Y9oOLr*F@!V?2$pIJ(]62FCNmWDC,`Es^Rjj]'T%D#<sP;hXGNN->Rdi5B89]k*C'ralD_P/.gl@"fA1iN<bkUR._alZ@8.?;3TPK)3FtS9s1P5L+.-!R%hQB"7lFJ:k"9"#&C9m0@lM%j6T(/8e_E1gS/)cD?>dUW[?kAYTBuuKS_p("<3N6fTTFQ(Q:JsT\NQZi[TNY\HUsd(\Q52Zd_R9#pa2E#S@1+P)jG]3g9H;<[_o*%c.4/PXJ_0gHT:_gc^[4Ccq2)M;u?dX<Uul/9u.5NKm/t8_.UtB^rM2LrTf5Qq(SJ8'jdop8AZpTde=!:!i/&.;gF$K[N7dkR&Oah%IXLG(`/@*)QsU1O5;KQBdrED9)C</ZPW.8s67Ur17LU69$:lJcD(8p0Mkp4k\<G?7Ib?Z1)k>$lS1e9$PddR-?:jZ`R=.2PeY!5;%O]n"ZWT?$EV)?H2.o7c9=19XN1RQ7CI^S"pCo0W,SuB7%D<[t%`Dl""4rL,;`Vis;YpnS=SIF>L`thN\/mNUl&oY:f[d3*eXcI02%S?C"G?*)`Y5n16MoQUVZKYbEQG)p![!'WA6h=4ZT:CC%cQAOu_duc;WI!l*8'B.6!,5a>&2fW#QI(N-Jq)$;f&fUPs@7LE*D=uNn%o4,S=5R@dBqtOAi_7e7O2G5%$RZb#(`cuDE`^DIIoiM2X;AA[9(\V(k#9^-s*HbGfqq@^In)"*!O-gQFB!Yq^Pc4ub.9IT]ZU*#]%2!:g#"8eZkh2CPd^pVkRX)!UnY3l]hjJoj!-/1l'8Q-5So;8SUp%W%ifYcF.%ZlaPJ`jK%Sf28]+M5N3@,`'(&l(*!+*"R'V]_4k%s&JR3Z7*7SAp"o;clY1s\C%F`pE`<rd$onW6k'0i;$1BJjJTiORgK<Mn<het'-rd[JWklTWk711S\W>hMhF!qFP7c[b0J%M2/9nr%fYu3iAiGi_RDn=hUJ%5>V&e<[)P9-C0L'*O(*Yqpkdl?Q$BVhiCR;9)/\b?V"&b,HJP<oFE7NHXL--cI;N3h*gskAsd\#l'iUR-r%pm@-#ACb&)ZKb-PX-Le+VZa4+(\RR]YDKiib`t2lgM\B2GQ4f+BP#AeFBRb'jT^d%\N+g7Tqe0s<C1/X":,-u*Yn]=h0Ud-\b9\j%61uc4rSk9BN1!'`4;RQY/%(\uF05$+#l(1<k\(!'*WhNN>n+UcI3_6\f,2%%8>87[edRng2r!rT&`!DSD%sYC&WdRG2TY-54"bM$%3X_W5JD/@&ELPUNfhM6Z4Ia/<E]?nl;dGH5i`Qo>P"u[-on:hGbfS=SSW4]RiXINo/K@&<ehQnN7:d&WADBWu(\0$LVu^RHG>*>>%%45Im/K2ngZi*Qrn)EE1,]bSX8PMg`^b<pkNo7I*E6#R!%P4MVZE4"A(ni*K%`aCH3uGe1CB]`fLs$DNpn3\[gFkeN0RAcWh)4b-%H:BPBBBY(3LYqU"pbsa[DcU>raO=Q:mi0X6TBhRE"$6"6NMT]Xm_qeq6=!VS_DQ@6E=pV,ZRiq@GV[\"i1O%)QOj0PVr(1@?+WCP%L<,<9gL]h!fX*-H]F1SL@+Kt`h&j<&h>>ddOTJj+cId"qi_5%`(5TKVWI9UMeuL;(4C**-<HCpDB"At\PM4<t]%TiXO:l^jG9Du8%dt;AfF,D7d*/9-@DcPm'^Lu5;B";UL3h;oFJ*edl!oi.>9`#\4^`iZ-'3ReD0P;'k)\`$<1Q0ASQKRHu4?3=1WG=F)+.I9PW5$qA%I-u!h]c.B"9H9Fc[Ujb;e;D/W=Ic`%?J]go$4WbTYGoDG?#1ZV\XpKh,-8Ee\hW65#0Y+HV7DnCI)Hn>UR<;/35SX;VXf3@7HpcY%L'mBAoH"Z6K&c.l(6=AKm<lWff"I?)7'9'7"SB4&[:Xs)b\*+A/(OdV>3YHaB.D$BS`pHVRGt_BB&.RdOQ7>;NB3]]n3^emd)Fqg%i\AjZg\]\7R.Elo@,WS@n(8Y2A^4)@!e2q7H0KQe*'9k-*,UhA,7'ASqhBUeP_%%h45A&*2R&U:c7;R*=84.,=ek6,P3,J\&)R,%%m=qnbW"hf$RI7-p3'>!L-G9nbb(:k:j3BG;4G/gb\^/-%63,O<;c&,K#K.g^0+UnjTSn-A>'<nU1dFSkIeA<3<jWs,QsKo#MBau%%r1fCs!gj`m<hj5KkZ[!`<+uuP4JIOU?R%0Bj)O,a*"+#kRF$*:+WkL&]#cmr\G9]M/Ir4O8k5+1LGOph*9Y'!i`(F-du@1XLKmFa%hK-Ua,,R*?Tar$,+,Pll`ZhHa0=tN\(`FKK90US9/aZ$!4Q]-MN7sJC,B)DaRiZ:gHn;"mFRZ]hFpl9Cj,/&odZK(+dS'c&-B?U!%S%@TbQTK7LY4V(lgt0&S>2lXDER0'V!j*-%Fej<M@061Rqc[hceT;W.2q;j75)9T':.uVWc+E!qiZXAJX$FDDr:C!*<q=_[?::8-%^2M\Gr2_dgI[Kgh\GnCMMsck?LI%@V91G\5OAEH[X5E;3VX&5F/*ir\5MPl`8N*q4YcQULEsc2s/!Z-%4ko[mHI+KI++!e(3a?/R%3dNlaI=#QO@?21/m-VN0diU_"?&`4X5Y@NhmARaD\:O30?)`.<%ePtqF9r@n:kn"$]YbgQe+c@$\^4@'&\&h8F@;#,b'BMF_)lVU%d2#cAJ8FJF/4)r!M!7V2OS[cS?o@enC:#h#?&<NGK9\(2gQ['Q0DK]28)(ToHDlg-YT?R-gP"$H+-1..kB0blP31hUEOF+OpE"8L%R+jd\nH`EQXTs3&V;+&>jMP1/5pZ"5`s!8C>o$<nENIDt9PAV89OhAf!4eWF'$,FU/J((PK`-$;&T.p&UO+72LW3pG/X2GmiKsaX%?@F[&e%,Eq00l.P\*eAXUUmt8dfnK8,V.hI+*LVQiZ_`a.>1r"PHA8sZ/:,_Yj7EH!8A2AfmKJB+:5V$3%9=0GMOce&L(^f40KtG%<GjjAG+s`"F5JffY+^kRU>*'=\0,`g:GER<FI\bUkE327=&X7dEF&G+a?&">"t*An?C&s"3kj>$B8-TIC6h!N`oam*R:6$#Pask'%A`'iW`)>(9#1s)5AB)!LBuI@[9BhVe]PK2`2`Ps-R4g&Unec5s)<r9po=3E+D7<1r;/eFFjpmHKhY']2'#BL/]#UaSC#jr'UYH<-%W[<#?4_o#tllH2^U'ia)@[kDD2KrV7FrZV<D5'j7EEg.+?G9W&XdUD<`]3:oqdPs%]R*Bo\o,f1g--#<[&'_E9i\9&X/^StqR3"*%;uq=cWTK>DnFoH1?Y3g5&1?R5E&L7!C+CO$_=)$;&#QC5pKaughQ4lPLVm-\/T&?u_J3lBc'q2m4mhbFY'YpLc%Tm#k!4OpQVUZH%DVY,Q@5(9&)1g"D((LRO4@gUJRb-Z!=J,7mm@LUngKKE@PhI`C)1pa1]>q*>`"@Mg6j>&,jeINKSm8oq9P";5@s_G)n6<or1t$iZ%Lgb]WYrL#b-&,Er(aAQao=cm\$Sg.XC$$PbU9JVaZL?:<lCmDsEteQTI!;FLA$]]I4?N5m!cbMPW9E[f89>TG`>rVj'M[D1DVE!&%aA#OI[coM?(0,JME\1^'Ug0o>nT,M6b'$?)(S7K<GUNP.<Pae/BiLJ`X0JB*1JR6dH!kZ;+k##t/NJBYm`-_)O,K)q5A#2qPEA"+%GNJY`Lqdaap3SAY##MDcmY!6f,h=+(-\`H"$F_EE,d,L(&=MrCaXgj4OU=$DOM3^m84IaVV9!/lSN%a@I7rhO%B'&/1)!CQk[>je%Yh*Pq"WG09T4DKi=bE8sjPA5k#kE[da)]a6G=J@V/Bs\Y3^DnT.6@X"GJ%#"-gQH)6gEEj$%*8lC4DcIhu9Db:jNItAiU[3Rbos!%:J9i5Aa8<W7cR`B!)cg$4)S5dDA@[VRA9,o5:,MJaf3>dm@_e5KZU'J2lunCU!\Nh7(dgMGVb<2^kH>FJ\b;^Z,UC1REN0XAiuL,%S!IL3S\-IJ>dD:VXf>6a\M@ZF<nOjRe0CNH*>KhU4PdkqV4<WgL4u+VL<t_]W><$C)rbD#q`X+[GjI4($u//CmtOoc_igr9\STor%?At1oZF,`5:lMlr!d8U9S\nE*Hm7am\=<"PG@GAM/&`IX]G1#Umb#F]C5csj#mIG@2h:Ut*j&W5^Ycr>c?8N[F:R24?283*Y%'oX%f1h33;jH7m<3LLOF-G#lQT;(.2O-t&&c05Y"3eG3/4h1G6D>d'io0fThO5tn:lkK*=j,'79!QkdV;&("/Ie^"fdgTC;Xu[f7FJI<%:G'K'.T0nd[:"$UZJV1!_c#0H+6#"^gNXo5bB8TqNf;C#jArB;`DY.m8KOY`_fhVAHH*h+B:??!a'2,;BmT+b]B=7&J<BEC/88Be%'Coj5,l0\7ce%X\GlAtGKm,Vq/g9,oBtfKhm;OF$S5M_6<5upH>=\O%os)aaQ;3Sk`O*Q_WJnD/gXsCHiq_;YjPpRd&Ij`!&_Tt\%iR,\9+^X0k7lN@"!qkcH>-(%_/,kTp9%o/dWDX::HqAH7.5Y!RV3u"[=l,FdM[4hp5N^J>?`UPoR"hk3$r[PSDGtQ-d"8lm=iPQB%AFAgJ3)0ADRJ\+k_O7J;LUd^,'/EfoDYZ>r437>_RH`/eGh6cZ,b1`r,oG`d$uqJs7QP4N]rDAC4>L!J"g;SP`op,cd\iZEBAfpC%O0j@)FX98;,pp'To?l&;8o_?Bkmsn!M::f(l2Hd>?I1bsPTZ;a^g.8fX3lFI1j2Mi9cs<ed^97>l@YT>L(UPiS]MlDgMN+ZrDKED%F2O2`fmLo#G,gJ5_3L$:g<osO0M%7S\md.Ud.ktPc2H+sH:YfRX7"bVa(o2a+7jmB2p:ciG[Y05LB[%/O7dH"GOJRbo<)6pDYLb0%2"lj3NN8V><U-itQh028CZ&JNldk'069R3u@Tn3.=4\?J@4#D'fD]8#]T)OW3qm9#2;a/eC\I]MWX6S\"$<Q>ae2\MYp\9GK![4<%o@u-Eq,6i?-Z`E*5iegSV]>H$+eT?Fi*?$;&rXSXmap)YF?gB/aVm)Un,+*9$#@mC(5Uf#S'GoXa4/Nu+u18sY1Hqa+*C@4BQgQ7%PPGIpk+*FI>ZMTm&rGbrFB<H+?Ie;jaT-5BB.t&%1sG[@Q&,1f<6o:uN3HFOq.\[@@#.IJiScF--qqUF`*tk':Zq'f`WIE"!oZs%%4m?hR)_iK[M.uUmgEY%EhH^e'GM]g-4_9E&mKYpM59I8V*VZnBm#S/-Zl;AO31Mjr1`9\QF%f0<*O7]l+-*S(405=9_>;s3G([@e%VR,+'EE!^fqTC\:pd9PDk-E@F*E%P):$Xe4LHj,9pDB`7Qklr4!ba`87=#Mg^&SI49WPS3\!rLchq^Yk7V\]D/LWkE#gb.U@lL3L%:o.:Z8R[.!?CN@JTD)VaFU.asI@\n'p[Ohs"OS9(E2d]D_M`$tkCt*DG+*8.p4q$;s6B'!1<7\aiDil1O1,G93ksC?%C;>-2hU^l%HTj90Pic;%DUZLu0CC&dTLi0bbckh5f56a\OY^Eq=2A]/VGQ,ZMO&IFpB3+E'k=9:HW-Sma'8547ZfmCjh=e0N<K3D_meL%l(]OM%qALaEI^VkN8^!^QQr`X#:L=_ArP%N0r>m4n;bUCmJ3oh]+kZqbeMbPuqknktmkB(6M"E&uBq2kapX9G7+OAg-\j,/ahlE@?rm&R.%?!D)gO*NYhT^gkG3scYjYj.fN1Ue@i-La+[GsC[Wb$K!7T/mpOX6mm\Nuj(V\*NIH4naYF2bqlrgt(HgDB^kP1j]MWm5T9!Y<?[#%CTZZ'>^:+1h,WlCmRH[;mIuWjPp:>]26p^FBc0o&J":qs>sg/FcRR5t&#Z*Lb&Zr/S^][OXm9:^$h*>D<Vf':TbT#n-&di],&ct?%e^IgEJ/m;^$e=-`Zh3TNQNpeLRuLCWO`"=TJZ\D=ApE;XheZ13c61]X4>o2UiK0OV'K+gYgA!#kHNK-D)cB$hp^u6Sr38MY7'-Xu%EB^XFpFABUJ>h;#+MtI&Pha_5<$_7$(ZW&!>*P@4*H.rZn9^E^eT.a%(??i$I_toU[uP"c?%c@sU:h_R3pPP[c'#t"oIlr`2S8*t%OuaBpn4TbGrcl1Kj*6oCm`5;$OadLJn"sgia_CO:3];A[5s5f_0K;u[YDjopUZS%WYr0s;+98TJ53mdkR74Q4AOKfsdtiO<N@D/>%8R"o%$ER;lFU!([HYRB[TrX3"_F>H\'r_%V(N3,KSEfWZ0!_'iIJMs;9F\(e6Hc]8?PF7R&gH/mI=Mil$JjoUj#.FZeA%j&PfbLa%c>Ht&Vf7gM0V!5-Nodc6X:iqlfVnOQ8\pNT=hM/sPR)cM/!gTl]0SA"Uijf#o-I8?M6d_2nGA:0p5X)k09L%5);sILbcs0(:h*V'%TpiWRl@!&$4[RkGWQlb#DoBHHg<1s0-_q2"!MQoRHIt/Dg.O+CJeIHke"g0Ei\PPml;,gFjs!c#Y3U64L.1%@4qbXARr\143T7F\%<Dh/@6M,eB3[MoM;d=,;**XSr@.79QWgG+=U_]a;Nsg$q);$PE=],o@<8eA:V<A7%U3J76Rl+LB:GhQ_js&,*83Td)?pn$j:NqZ9%4f966O(DANClk#V29QLF<c4p)X'n-ss$9qCq6ll>63MYVb(.^&b%hM4L]B>V#lT]A:.p+^aWEbGO2+ur/cs0j?r_;t4D**B^NdL9%/\=--m/XfU!2A?rLf5("m'JRD!9!,;KkT"d*<ll6-)4::%MQ`gNi]4N>A#9T3PiC*[BeQEM=NXT+!rIlq'fX,]/'3j;hQ(/94WEg%:s\QD2[Dn:?4_\39qsl0'X0^<N4k#S)P$fYg@B)3,r3J,Gtu^.fCk(FZYM2(P0G.PFI/LS007V4C)od$&47X_f@RUqC`3U\9G$O%%P0bJb=&O;rV=D!Yk/X;T5;&f'h-.[F</DX66m6?-[5@pNCT2\d9_\C0\!Y20MogQ"e#fsEIPM"T$m#^!i-O5]8lFHM=jG:CFGff<%)X-2OH#5fm-7OUK]:,E?C2kR8**(?+(BoAVFRpn#IC;CBm<VTSDZZ7BEmqO$7]pn_+?dro7E0>iWQhF8<9TfZTHGQ[RN..\1!8&`%D,"W'o[Zh7gc30753cnM=G=D2qIh&as*-8KmI&]F;n1,9(Fr^pdOi@Y?"(DO]t.bU_/^0=JW*d8W6UJeIaP+gMqp`LY[&Q5&X`3u%#Pb%g_hXUB-B;4QhN-RV,Ph803[t/'F\CSTZj#-boFbM*/R"\EhEqBpWCo16]0(;L7F'3c6&ju[';suMV8p\3'nn]-e1&GoDfP"s%:GT4Mc_,mo_uq2dDGco-Z*J&Ue@C!9VRl@lT$[Nn]A(+G'#Cmdb1WQZ6:(KnU.7X7SYVQNkqesIT>tGoPoS8L4:j!si\3-_>L[[/%A>^Y.\i$B=<FNW>miKHG8+G*r>1p68odP=[E23nF@%Ytj5Lo6D[^r'0aZiJN]^Ur$4Bpb+oZJdi>sJ-k^OG?2JJU9IIYR,%@^4hM%M5;^sNhVj;N#dYm-tfeF^iq3imLL2s0lNNQn@fZ"0HqTO]lhAPDPdu.2Ti^Xd3j"I'7Z]h14"+[)36kp.uOe3ET#0Iaj.e$LV'&Z%[N@h@&1ZBKe5c5*b;40*8PHDB%j=+QEFkhi[M.dQ=k`#/Yhe+9f*H9Mm\Xm4M;X'NTI"=3Vh(p)0bgB91"Ce<S<O+s<BYl)&_EF9%(K_+eTU<;lAs\CZ^nU08O$Y@Ka9?dR8bMOF(j^ssX-9gnmDCSrPsn]'6Me``HE2qL,@&WWXo24.%Xi$i!H^P1roO`9MP7R$ZOK'`%Q/WS1O/Ujr>?P?T0d%c<*&T0+/h9hMN_-WSb9l8;d2(lhG&^L;kRln#@k@DoSH2S'@+[KD;f2af#m+<r"uS92-+;*C#C,3_8mrC!%in@9o@_)kk:fHo>M+OC3XJ2,1Y4>UV-68R4SZMlk:*VV_GZo=Y8AM-6AV4?[B1.2`C:sa,N,RIn5JihF^S[G`MIs0i$,el@d(%4M%IRN+<9"j]chuG^-:5ouNNA**GM9_JU[D9@NUW(Zu"L8+jKC7.#eH"/Q+_\rW6k4"nSm?B+C_hdW\gf+S'H_(T0263-HI3#>Dq8ld%5+^!2_(]f3l'a9i#EALj(RTl5;[jcB;RH;Cd^[6!EW%>d#<$U-*H:lkXW?lr>gGP0P!8i?loUBRl*=K3h.,i[XYAg3QP>9t<s4Ru%Kpc(2B.&t^N?nX)`>^]]28iYM7QC8<(Q6KeI"[4)O;YO(#!*Y"EF_BpS,B/mbu#1@psa^"E/d1?qF5ko$2hZ'8lLNrS)oSrD*&"j%:<.f*nV:^eeNa/)HPT8J_O9\kEN*XR;D/;WlEMgnf:BeI-\jAH"Olq4k(s42\USqu(d04@;_(X]9LQKbf?3.Hm\cZ$gd2]/'rI)[%\eeFI`NCkdlmk:Gp)<(nHZoA.M<]6fPM#AU'ONl\>G"O4$f_??:[bS%l21Buj%(sJ5D:&Iqf<!H3uhr`FW7KsA0egmM71J#@gG=&%20$g=9K).]4cehX3qm"YmWlSH>IS@`rTCl9%<q*iSEmX]PK;)=9WPgnf_OHD^MY8:EN[6Tn"1@TmP)$u#<N/s#qUrDPiLV*bCh#3%U*ErKeCdc'`YD/3%F`sh!FQWED^+-C[jFh`e#WVJWA"H8ZH+"qg3GT:4_7,@We7hrq>R*2Ri97J>-ao<P6ACU1!aITk2g/aM'Gue%"RJ9\L,NRPC2<!HO1bTa=<@%^F/FL\?+\R-X((9''/U@oI"HXQS?/*\>ub\#-iBrhHod0U(Q!<Q6*O__E#q;`SjkRh\DK+ZElK)#%,^;pp7FZ[l(el'X.ac1pfG#/'3Ba]+j2[<HQb6h#Zt8?r2FEqD-93Zs+FBnm*feZ7PHNQ_."9Q#<I6e*#Z4#p?$sIL,d4^WC#mo&%a%UFAEV+[8p1$RUJ@qi!"A8s"W#:8:,]Bo_]s(ItD8&G'c]b9p"#HA[TZ%V+_A%GnAK,aXUc]-?%'3Y1"ocSj9(0m`EWK"IdK=\/%#6ZKK1.+])Z9.5rNV\fE`S@AN>b,@-mc1QrmVWO\#nElX3heCS.@Q\DhfRrs,r)?.K\s#):0p.JJ[EOdEb0=d81#h!\EP4:S6NCp%>jYiQ#42>rhFZ<t(^Z,ZJ0:3CgVRHQki%d4aUe/Oj5;h<N:mSr3TI5(R+E9ToqVhV`_Wos(d"gqC_)^.l&FBQ%]_tO]2.70"1hdY%[WT4c9J$mCmTb2735+&N,P_J/`OO#Keo`ndNums#W..(r;u5_Bl/]`fkt0^sGm$XH-We*D\8't#$JX&JI2M+^)/\I+MXV"(Q+Xe\%TeqW"j;"%R],Un^=4s<.O+#0J@b?]!r>*R3$mJYZ[T6@'D9=>?s74:$rpo6:m"nCgQ[)iR2)ZUtO`;)M7j?\;N%HfN!%e?CdO:Jo%^3+5+W_h->0>qd/ofAs-'DN@d!QB_/f3n_\D>m1[)meZ08W+"#J\o5%(S[_)8hY6!^0ALN[Z'L%]T8NI:>&,<[o]eJ%h$"N#Yf9p%]uJPpQDRj/1U_JVJ.tf.Fo8@_p>+3p%*ag=hqZV2P'sb@r0KNk8(k)Red,^FM@qMr6_r\Tg?1BgLu=Z,#GIO>F]#).p)3Q],no:4%c[O``XN.kWq<7U8i*OHIjjbs]jK%-s(4S5:R%@C^PB1[6^\n;u7CQ3<Stc$%N[u,B:Z.9$(+F3PTPlnWMV3\Kep9oXNlpfW98.ci%ZuH6AhNA:3PEqJpo3;=,4kq`;Me%"&UgaAa2u90,_0,8fH==^k3F5egnW*dmQ`VcU,HsLti`EeaWI&S1%nB&a&%IngOIjK>_oHOl%*1\Y%Bn=:2&BX=GDt;\?,]^g]@SE)%L%jq\dpqP<or"ZWVW3YkK1"O^9`4fOS*2;=lg#CO?Su\4^\gJc00SEo>fijo+g"X:o%+*=%Gq*se*b\5!W&r^i6Xr8B9HLg0(c6XL5,rE"T7$RH["#M\[nnrBUA7cnO8!^PWePsCPd<@$9gr">LSu391/2+DTc$d7Z?otp+Z&7V%>p:C_pmhuUUI)Dd"XDqPbD=\U)EXOG,"Rb<.(X0SJ)TgK)ZhXYOnecnqXIM*K50P`WnreDoL)&&'BK:".@$5W%nmMcOpQj42#G9@%&#).7H<M46)QRtDf]d,`JtSu!(Gu).B,8I##Q!JlY"JU_#-@ukm2dY3oi1M0]-;b]%+4EMHlO#GNus[n%?_3-Q#O(rYiu;BqXl3J%R!-6gb=:nn`Pdt5#"6@V5I"L9kL`le#3k>f&njV@jC2o5JT!/k'>9`fEG]+E_?E*JbRe7Cmj?7#oAT[Rou+o.-h-])A(5))c:EZ!%K_\GM7uLoN;5n$IKj)X%5IeagIqc>SRBP+:0'/&GT$:*AZ.0WM%>O3PgVhh=\9+%>@C!JR>6(1=8cq0(C1d"q<!)Mh^<M\"a$pim%#A,76=+#.f.;1IaY#6-489DO0R?3K?5m=<RS^O'>L:]=\hD5f`iF6I-Sm,8eIoM.[0?rN8G#>ILV`POFH-h(j10qWnd<$gLkL_n[%>5n#"IajVX?U%uHHqhLW"CFg98Qa'G>@:;VM<:Y?bQ*m>YDI?"i.&af;B["pY*3b^a:2#VaX-/32CiCiY8Wc+AT0b:</g%cXo\3Z%++h)sgJ9"q,-=U)cXT[m_UG.lks']K!r0p#rpGQB1BbSr?oc9<'r."nkfUh[nYo!Sq"LE!C/s5J<WaBn$I]l/R66n.V2hffBnJpV%q6<S4LXAPoEN[m5*n=!O*k/.Mgb/kC"o8EZi?Lbgo#Wip>P&3FVIpHeR$j;]5$@Dk*\UaZ#2KcLr1T3d:j&B)O,rh/4\.3QT..`d%,ZB0h8\&ka2QZR9N`psG;-C^iVOB,ABTEqp$6@=ATB$A['Sh2HcNG`AYUA\_OK0A\[[#Q7s#K)I[W@m4V?f:]%"Vc#:$L3,3m]Hd%9;]cN?nK(V>;OVpL)?sN*8E56KfK7ma!@TnDh;7ZWgd#PmL78<N*XGYR^Gq&K;<=4r/t<=]PJ.**PSK00=N3<1V&C.'d6b4:&^;`%UmC2tC;k,sP\Bo\e783FJEe]'<%*8`HsmPTVOb&U%AROjC07%j>(4)$*DVhX;g\E+X7<I#b*W#`^D3dYf_k&@qqFn,c`V\eM'j_a%"E&LUZPX3>G0<H37kJD594i%"-^dAWUll8XdiVOL>cp6-M^M\Z_KP*7?Bq#_[t)05";%G_%q73'@]ua"DDE:RLF"P]QqR[u`B#Sg%nH)_SX0MbT7N7gPC3KA;,(ImpbWR*ePqJRY<hKo&n$mBQVtJgTa.D;s`Ie!YBK0o_5J/AhXEd8hC50qY#?`Vjg4"^96^NN2lTH]_%&eM*G/[L38JnP!i5V+e8<DXrI4>*=o$F:Ok_T,it5q5SHA^Yp,r*c#1<)Hi=O,m)jOcRV/OQGpK[ID[(.j&O;Oa0O$1@F+mV_DNH%fr4bhO&0c_pf:&E'P`/r;@P1KEWi0A#=egQjBmE-_aO8"KhHVa[a/rW.5d8phcr\'>'j%PjE=pW)eW?>ApD2mqNF)$OgCeRNh,\n%5LJm]"*Y/'\9plcU@?N=16F=ES)`pHR+]![XD_)gZF`6iDS!J0>M0>Ip[]%[G-q\;AQN.uX.l0s4W)ag#iM)<#FcaLeo=00S%W&n%>MFM.\rB`-q.gS@kH>p$]>L57oA#Q+YQrbYc]QOE:>t.LNSpQVTQ]9,IW>e^grih#VJrT(U\j$+5R8rK?1fn^DHDs1VW(sWd.1:t%*q.#f;0NdeEI,8r;p.am/+n.V?ZY@pn0A=4Hq^>-#h1e/;C19#k14K@WKSati?U)l>&^\;>g],=32MtSE%R9i7LDheV&SS&OmtB6%gCff+IF+e3GuA3aPN7LP`;fNjA>iX#`7KUnj1[Ko`VIN&9Z"q.^Xtb1+c2CtY$Yq:km.]2IQUJfOFrI\l0"C/#3n_.Q/%aRH91<;%CS\a&?;_pZ"2`cW%=GX2_*R8HII)^)*q!.>lA4:ikNBkB2U6qdW67T_ZUULJ;Ib/IqKMgS0X24@P;Q.r"beeuf0+);c.-p-ee.^C%Bh-0f5plY`j!2DX0horW\'s131Ql#@F@:,IR90AI"kY"QQ9]q.,_1`M)rjAi`tA1=aZq17n<igjm(gME\YNUt/chQ!M@fIid)<,+%gsPWP$dGTp!R+b2$.An4EPUp\9[c1ZLP2lsdk"4s*DS_/YDKs#9?.D,WY:_NQ$De^=I2!`hF*MWLR-r+VU2:bZ6*/+8A\hrFFSHW%%fR)<k!Oq_0oe4mgYT&ii+Z!_I>>TPL(MRHIVN=\(g7_seor?aVs-`4:!lr2'-*)3%T?#[L$W;[a7Ria[].t6!^Y\D<\&SqrKrVn%AXrko^/2gVbi#n9o?7te.49)Z'S?1Vjs3#4blA[R]X&/\St#A-,`H8)U[G[*&$X8]<Yr@NeNWArB6Rku<;M>5M.qFb.@*CurgXZ2%FTh#,1B*Lqh4u*0P8$'&C3)@q>7GAo-"1Xl;nbC4Dp1Ea^=Xn\7kRB*:BMM%MfZWlYm>7@3S1qHZ4@MmO:hnA'!pTfNVP]ua?E(7%_.1sbU^BKKi1.9!SVE.:eR>J@O2HsF1I_ZCnZa-r$YF2I\LCph^iDpVM71,,P'p[O^(uCf$2?K`?4Q'?Mm7`(r$CO['HDagbYUsY%$3P-N6j7[kFH:\=$B@r>.:'/%WD,MR=EG^.l'k#KHN:gJi,EYEH84-@j$NOF^jeaRaP4N7)sW<2/lQQ,a2U4!&3gY*K%UEU.o4<*%kr(6]bAY.@!11qO.PS8[q;`SYkcC-A'7B&9A@`1X3"-%G,89KE!M7R:Om`8jm@JOY$unt;.8t+CeSbtjp`5mla/nRjO.<KcY@Me(%^59`]A2KLJarO'J2Za43A>mZ=\/Ni(m$E/-[>0u-f=U@)?/'cJD%)jW#`Pb9P3m"#+dkA9-&H>pd)I6m5%EkT4.(9'<b=$dq0m;i%(?&70lk/Np'&GUCKCgtW1&k=qmYXrma]t?h(''?V2VHgYaTurm%3(=%5S--^6iV!Bl[G5m&K6.Me>QP\_/t7V`mgVFe\lRu)\;c#%Ffg$FKjX<):JWLB0t(?]nfW'lbM2WWrR2VG!rOJId?rL@^c9([XDA(1p'tH-i_4tEiXtVK)14TEHJU+bi/,Z>W2OKX\KnMDY3\l<%GJ^?B\@k$1-g)l;M\dbSeBA]OY#P&1fOUfuimTPcFA2Ys4100-V.=Y=LMda(V'_!,2fgk:(BELF"PMF?*3j3.439!UcE>C(<g)K@%h07UKNbhIN[0b1?CO.NelW^FG1EplUqY7HVQ)*Yo<StbAn6Q?:5*Dds&[KYll+VH^[d#k=;ajT.qO(QXTTDlmNUnPY.$!TR-tV;1%6X*r*hRjB6"m$j;S>b4Kln!-;'j&+nO#W!:](^lq4=kdWoYTF]$rRV:j4e_O'g7'3RX9.?3qBJDFQF_m%H=m[N\amajL]qWj'f._%ITWgQ9b<CsOdUsjIaAICi!(3r)a]`BVJ\;^AR24)>@,q%?N/%g4\SA7dX^$"D>2-lr;&cI]HJ"nA/;Icfi$HKbn+lJ^e*;J.6U^*%Q['ishbJB9#Grra3qu-NTj9O?.Jiq?Jp<''jIA$5Zn'goZXrp*Q$#;TjG07;INJgDel`jJ]a.%rW%K67l^#R&?eW*.:%/:'fQ#^k%[jM8P9X"gXD)=HI6ZB!UAj<dr+N1XYIEQ^3<-<+RiUc;c^$^X9!E]hq1o3Cjl1tW9Ia$X1-ji&([F7m^eFe\LZ#F;CNgtDJ5$sf2%mW(F%VAUR?>JV$A,LSGG;'m-6\r(7g?Zf&;^7pQ3Ta7OUO=!6Z^lB=obq&p24s^umV9LBb(]j]'Iag6XHW0.M`eF\HD\HVB:Ygo(%gB;lZ:pnjB!1+K`&bBk0k@SL3+WSm@S52l[;C*FJj^3L._AiT?g:+p(!;><WeLQJ88e/!"i7Xns]H'"HTI3;`m`a>u?aJcSC-:up%4l?*QC<&LUB2Y]>PI+COP%HMl\-Q[of?(D5':'(jq]T2;S]2V(V2jML8D]1;r7*q8hl_;o7-1!(I/W<!nR=i]f1J_p^UE"TFhR_f%V)qVA9.IO;Qm@nDFZKhQ*2]![,&PR&p8aN`#j0ciU9hniQ!IgQ>'W3C/aK-ba'S5p./.2ma\DY5edp][*cHMjc>:2J%nq1n"<JG2%f(**n1gbRu4%&eidB\a#pdj.[\&1\p5grt";lU%^VH^Z]')qE$anhH9]kjelhQtq)bKF6<6aA?@T%n0(f7)NH*fsN:QB,Publa[6%r2jETnIe!Iilcp*k0,1DfEeO=elMt`=a79MDR8SHNeernr`6k9C?8uJJL?/1_q/'%G\^/CPgQ5oDgEE_<CWg%fEV=tCH%hqpC+md%k`/.L2D7Wga)2-KUIb'ar=O"1C]EsFV4(9YP5gF>&WFB5HW>$h#oJiY@G.SB4Vb`O0A'_l.bpO8@C+c.!UX'7jmOom9nCgt:nQP(%7g+AfNFgmO!FRc_2"kb81JY9R0fI-WUUs1Jm/*[fU4(9^a8P`>Bd?EPD5p[==+7!cUZoEB%2`?*mL/C8fYR72DCHuZ;\eNN5F!a?%m-.S,&Id2_(/'KT18K"T<Ps)NG*k]pmO<72!ZkGal(2m9$0A(8fNdi2=Y[=M'8).BNhA>5qkphi?b*)`;Ua4aVXSZ_q177<$0O3M%G*GgA1Esl)5B`V9ne$QJSK9b6al=3i]13lQ-PdZQ0cl*0;iq.^MR+t#1H]qqjJ"BZXfAej29]^?Vo&"fBIR.X9Wbj$ddN@>4d3$i%?P@A=T:c!G`XC.I^^I+<\fIV7f6;.ihbCsP<\XL*7-S2sr4DG'ji`/#WLam:,ZnHGr"`(T(]go2M<Zfe9c8pF+r+-kpn,]0g.4+c%#HmXaV!'E.7f]ZieW=lV9+IVN$!MO<&Y0=Z6\fRCAX=-t0lafZL"76`dj;:0j-k*d?55')/j/*c]1ID7kFQ1Q7d@tNjPlWVk_EBh%D=o?)d`90<j.CVId^#.1L6,K3=mW1Wg*saB1YSZg5)[b`=eZMmh:ji>/TH#&g4QA-TVkDpp'plgbW1[dqaKAPj`R'VMmkX!O6PqV%i6Lh:G*2N-f;L^NF'ZJ7]_]Dck//:Y>nfbVCdrp+Cl<Q.J+uTOq.36A.PS[s4U@rR[S`TK=7WVUSZe]P.e5RR1<M=_]>^+*(\868%D-sh[,q`9+Tu^%`q!p-+S<E/[R01TKB1T5%*4GRlrbDbETA:j&E'YsERNWt7C0%<+-_)%EBHbbKT^rkM6Fq&(5e!=QUt6s,*9UVr%)V6SSg#?pFGXP<(,lGdE[[S4W>pRZTrG$h&=e9od<c5pnFk![EbI'n_$Wrq/YI-S43=26?Np_BqN/t@9;6OC.!s_N2YTC(6R9J+F%bf`14XsKNcP>guhDN\]hjYLB3ZmJS<%8<DKBqj2]Lg;i6(+LYb91f&*Q%-&]FtZFVU0aLk%Hfqe7o=/ij@Xej=>@]CKQ%Y)il;<"%rC>4R`Tc'-%;V3h.]QskQ6tXFQ8ga2_\SI4>F+oo[SJ:AaOhflBkgbFjC#)%.-L9+mAdUDlo15p')9;Nj'8RfRkNQC"H7MHLn@;>%Y^^uW_(nuN32f#ZnG?!h%H<Z%du7X%4^r2=6IUBc2hr2cfI&)oR10j)J?A*Er>uE1b+VGH@5T&`&>SH93)2GW+:ftOi6sqeC1c*]%WW.MJ7MB)SD=]f3;X:'XOEWpa>GCW+EIIZX;)\.+cd$-+D56=tdJYWj2LHk+nM#h;p=#W-(Rh`XI(c_0q],08SpNL/'%K@@_J:A1%Y(Z'KA_g:oVK[cVW.cOU1AS2]a5st]L?5oX]modlN'uet<1<%<X_k8am3=M(2R7!+Bj@1MoIO.<$aV.rC-crE)(YN0E6gQi9gn^P%@Fh`G-O_.#<Ee-!FG3eUQ&6o?<Oe3n/b;ADi,te;W6]*'/4h@^0SS>9afW3`lMj94T=jBK^d'<?@(0*:(q9rne6)$RFDo%Gp=)oX%H^jkK)Ar[:@unj5a0'.55:u1Zm9e-hrj9?5R0GM:kG!/"IG=-GQ$X/9X5CDQ.:t!1GNA5e:n[B-J2aOg&1VP2@_1@FH^OCbc#SSC%Nr?3&l%TZfmV.R5Ts<Et3(Qk\.eiNUHN,s5C[Va7,UoHKEUB=EXE,"rg#,DcNYRbJ1n)S?pNF)Fo4%=)edh(7_Q8U<<)Kj_2Qcp`%BOk?/2V.eJ7RBQXTl@:=p[5cLSPL*M44_KU+SWbE3p)U&P0_/NO8[6WD\EM;KZ2KEHPN#l5uZk2q]k_=rFqeprm#:d(A;`\_bOZ1%^Ie9`rqrHqW>[4!C[0M7gT6UZ<:7<*7i14a8^F.XS\!ssoM;N*5&T18=RE3a:X@cb107,i'/;d7UZo?keTL4Q"5M28?EVtRA)qb8%QIe$K^p\+D<^o$*`HF_Q9U\d4$EQ5XNGE:3&CR+lmN:$D*+E.lY["C/"q#b_Y1tp9a[gVcR+H1#2k1DnOl>KC6ed1&0,irPpB3VH%!nQ:+cCA^[A]Ac!\Y!\sErY](_+eFqf?N@#PfGq`]%Em#0:5;2"ZMcn\lQ#\k@e"6pTTX#gc)q+-8\"-22aK#Em98M%dYE.e%Y]n%7\M7$\8U*I]l01L^bNAl$/*nD6%@XMhT"?jAPJk;c'QP,[,G&QaM$c>!EAsdf7)Z&_MP8KHhOC^AJ*64598&n.HI6]?#)[G@:DmY%?D]P.m2oZp/mTGScSe[6b4<&$qfbQSfC'Q7r]F(P;!CNEQE@T"]J%hR^5/kiH4b',<L@-^#boDV[*9%@\QKKIa(>m"j<R_!87e'>%oT:tI'auF1-]Obq\srhd1<Y'a`=g(R2WFSm6E"68.l0@FG;s,.+\tU6:$IWaV9kn_HZ&,JF`+Q&M[BTUZKk+8?%a+UYdK-9(Kh[0%H>/3G@2WM:T[+*^jAK6t(]2)0roifOgDB4l_"Y[oD7=uI*)U8Lpi;#o)t")a(J=_/>F2FFo.dHpG@6+1a7\PXn+B%g^9fL>JMli^%DnBL(,oFht4:"_>X%uLB3Ele,A1/C>#Z$<b<'HNmF]Hfh`<[,-Qm>G!b+8i4%.^gpb6p37@<QM"Rk=>Q%fh4(\u7iPI7lQJ.uD16%nKiYa1"BqDU@TCOaDHEJ2Qcts#LP6&<`/d-dBI\/]Q^<U`3fXr-^HfZ9B)0Bj>!keYKgBO9"eYJ/$9MU#h@%C6tUDhF:S6-d%&4^%N[pqfM3CBrct,eOj:UDYj&[H-KFb:Zk4B8)=R,]]'HSn=8dq8*Ll'4EpSVgRoSk5R&hL.2]/RjSPf^qrs)C-]3suh;DC;KiHb>e^%-?joa)ils-ggL?Q?\S6>03OU'+IW'!/@[2aM'rH>b.YFhn4qEAQqdsp`-b'YNs.ZB[08Z>?j!A2cDUo!f>!8kiF`O)S-6gPXq>]N%XrJ)[r,X)[`&Y-(DnisB'j^=(\YP\Eo>bX?+D]:[=,jbW$B='8%^oh-VMDA@QU-]L+/5lNTGSA+2BuQ:TO!r`Gp^fC(33&CIiM<g%q.,fkTU>Q8;#f[<H:K&7E)8aRC-f0E^"_I1>+j[iS:aE^\V$JsNj0N]phOXL,=aZ%AIcgkkMhk;YQ9G;'@+l=j[_8@\#eW5:DrmL%!pT,oP0Vm.#=61Z[[=[54aO*+T?lbSS4=iB)2og3HNYBZ"'N27IOjrVBisoQN*LO.0kcop+t2bgN3Y4e8BOUf!WP,%_:=SXWO]J#%4[Vk<FUDj@[WW"U)=r7R1uE`b(t8C[!_Hd/X5+eH/YXRGqVZIToYp<iE(Z7^e`'"O"<KY^2/Z\)3r=%%2dAi#E7d3B2\`gC!ms5V%'%"#>c`)l),eL4PXtKK-B!N%,>lu`$$=,JL?aTdBfoRNo2Je@>#FGpTUQ"tThjKRgmI+[qFuC:JRW8"O<?4S9e*3kodEDN_U/Uh-%8o:Fk;O"A"1mXr`#YO=5Pe)Jj^]M"AA"=q1P$+RYBJ&`%FBBki#%15KIMtg%^kg4Lgd6PZ!JN+@KY`a4:$VV[Wge/`/lsaJ5`sP7%CXK]bW+_XRiEf!MqqP&c"VPS:O-%055Klfs@R\g?m/G.,3$h5Co03*<OmbK6btY9&[liB3:OdXRV\NGTpBNi7iG5ehO[0D!fuO:[%.DhCL'&NUY=+3NOdB4mKHG^D$\_[eE9ZHP]PlKj#]Bd\R'#jW[GD'KNP4d_P$\/]hFp/3V[Wn?/r:`q$@M^JARXi;a$Gece9ilT_%MBPTg*]Fos?FR)1kf"q(MQN@LqNH9`'V]EgqT7Z$cf/"o_\PEJQ&XPP.GQ^E*h.CdA;OAIin2OS\cdXV#DSCH$2!:!9*l?,WHd'^%9o-tnN-!+@FP$t>o40,CZLi`oCN]gSJG]csPf09d<Bk-0;imhGBIf\fEn6]k,'A=!$H_<!>3S(jV^#F\.65nt@)a%<F=#9#=&GI2%-;35u3'A.%)L.$R10_:UR]@RuU^=GO`Y[,`/:E^'%@BBed?7=!TQ-iJ.iW_/B>GKfTG795d7lOR:0qHZ(R.BLE=d&)M$"Y!_^oo`%J=U'1SU3MM3*k^jI+Wscj"Sd+'=rooVXTX4XU'J<j&;9sPD"d`W,RMHGUG(@@"C:t_"=)sq'q5/f^7!m'&!\W*3<F2(#cc`(jpK^%_T"W[X8R/JNgo"<oF=:uaG4F*6(O+0D[5@kUUq#VmL#>a-/cRKL(lVtV_XOX!Mg3;N0@m78R>*;&;\$frMG/\r*a*KWV=+]*1N@H%Pr<E4\u/8g[Cp_b(i$!T:KV.Bc-Q\1#/d^mU?=rrWV+Js:RrJo&'CH+Z;o*1j3*FsV.^Wprn)M.IT&*(cp,_b:o)0EZU(J^SOG,$%8p]IQKMlC,?&6"P:c8YR#cq^a22nBiSBXijAeq**12UBacgf7Z5X[VL-o<MJ4:kV]c!^;a[*Hq%#IftC'sP$($kaQ^/)Gb/fD[P#%bp4(emQ.:&R1%cidecIPB@)G=96sHl&,?D@ZM&&=Le#YJ-(Ksa%6+*NUUDJ?K+P'5pblCi!aF7P1\H0mZ!l?JpXp2S4U5$rh#6c-%h!:.A*J_!E[-:J6XF`!g'@J8-g`C@gQh3SqroM6)!fZ,(J'Ss"<QY2&>$!L"j.6F_,*DZf-/BH<4<^?4[iNqkDg(R1HcWD$b=[hT%lH486#di-EGt`%`8"/bm7)jul[,-\iRHmlZ46Z4<R6N"]AqIiTbDr!1h06(INN&bFS5s-74T;]nHTc4J,l\[Ye:I,BNpsD;UC+MQ%9I980<_`%]F2&EhRJbG,IUjTO/:aS"CJVTQcN-s+.D[4785ta7k*<L0`KjX9YM1>3-pK;GLI_uqB3(5,hMkblXr7:9]kTU(:6@jM%m)iOlELet$Toq$AqKU`8:H)a25l$O'#&N'@7bZUrA+1U4,n+kpV[knR0./M\1SY'[]'Zqq'AhbXMYW.+dE1W]X>Yd_lm#>DB%_G_%cU.EFORJ'2[iRRfX`Y;bbaQCUQVVJ%s0ZHNDb8*D["Z%;VH30_1X"j`-dpdUWJ1%J[\b:C9U?![,_*(g44kHqL4mk>EOSl!ju:,E%E1G$c]&gh=qrNU?pjn]g[gF?N'K=)r?fg&J3ZA&\bSdNhjC71eRK`n%U=47\PC"]"@X*HIqN5[0mNalZ&-s0+GrbH^A62$8[W'K^%HX$hEg.7GTE4U.*k*=J,jsgK5o_3?;)-8#lF%TS$p!na%Td)#J6kBDAXr<:`YAtAckTQjR4&ddhh+\GA'&E%FjmX5oVNll9\)nr5%^el*b?lXB#p4778S-L;hXH.n6g4#fm1j;F(1oZONpgQr!0BbCGl0?<,M]-_J[OcrX\bk`FJ6^Xt,X9KfI,]A-2#%3F,nB&TB"m0@%aH#U/+iUrLQ>c2UrZqcShk^!eBEYUfRIIJph_]]]4OYBi>IWJOR4ET-6j)K;4?9$cF9\k=?ue93H3`\]?1&!6P@,#q@K4ZtA[Z@i%>DFi]YTm@2I+juQ?S*,j\X(ZT=!@d4YAH(2LA42&I^<0.I/fuKT("f:m<$^0m1sjA89RcGhZJuO^5cg(j4T\oV4+h#.^erTgub#i%kF"rnb$Obl#B(l\Y(dU9Cqo<DOpA/4[S)>3IEmninXiV+T2B'`VstbCAAH\LA!Db6DXYgY,DfX&UZ@or/]W7][8"N+]mQ#&'(h?K%CZ3^+YH:26`LLD:S&C;2'hdqf49RK.>&-qPOc2"E^,i-1hB'h7)1Ib/LZ63/-ukm#0%mLo3.o'+b_\]"M\6(=1Pm^aG\3GpmO-C8%)^*Dah/![D4>O55;kVZWBr<'nmWr/9A5pn"Uc%]H;]bEA057<YG58.8eIcX*hlP6q3XiqfE"1aS7!U/eI)A!5O0*A5O'rp2DAf'X%;;pL1\N+WL<`?s18==+LSNY1MC;.`d\4GnIX`rmtr9$fiOVY0pj0Y-j+.lAU;dqM]B2%?+F@E5X.gDgQhV,jq<E0"halN<s?N[)?%*pi@W;#JdBgs`>AmtH?CS&&Us:NsB#;s>JGE->OGJSa)5Tl*9g8h$c(_l\I1ef<FH7'@b^-Bl;\M[fK.886U3jf0g3'3XZ::/D\]%/h]:i3#Th\;g--8X4O3qI;H*2NHM@b&>$M#$&Y;d)G?pCo=_"Ni27Shl#4F#1_k:nO"]*s+&_b?^Pha/:t>6kF0:NK`R2/oR:&it%D9o`cnMZ(sk@U=uAA^hAHA,pZ7\<<Lr8BCQQD41j#8qb%`3M&_1e`f07ag!C/W?Te(Z;.eI9e4(<WYa<.$K-=?$R`ZUi"7ZJ"-Wk%T%Ki];GA9\_Fh4O_NfWC/";9h.4mVL,L+.jZLYf\XWCF$PI^="Mj#DAQ\;[L1u/gkM=>=9:A:&Qae-8J!H>=2p!WSYOQ@b,RbUp9%[q7M=et5n(RKO$)`6(Prb,'>/^'.0'I[k95ln*F(_s8ZH';'`V>:QhZ^b?>4c5RVdR1V@-2);[o%JJ]"XML:p/B/m+(o<#N(-L5e%49ss0E,LeeHjgZ"rL=>/c[XRgmC+8&4>hPS%6qemB7$r\b)B?9iAYtYC-rjD,&82.!ARJkQ.ARIM\+0_20P@u9;k3$a1W-$^iPh2%KNNI%4+/OMfoa<=<$aGC&$qI+8m2uG-eK!/E5M?=]q#D?,$9U'n]V:DAW98':24"Mk3b8%Z:_h+j(j,'*Yk-&)4eeu>]G0-EMA]j%2]_2AS/?09O?[3,$E>`D4kob4,q+*j("50'm]><5R[D#i5R03E@@l4V>0cdWP;psW6:ic(F#J;BhK%1#)Q6.A=I_)i!P7hc*js)r%<68.6;*L&Q@VV`kldj3;1#A+YH\Sdh-_)aQbKd]XFXbBtnLW?ET;dSXJ!.#D8fd?D96Otm16rQBQ]d0)kfmV0Wf\g'UP)B#5<Y'@%qPZ>6rU-!h?SsTPPkt>+<?KGt6#D*:mK;iWXn%I8i?U#J(ifdG>2RR'[.=\T-0HW)+-aNqKT%Z_e(Kns"ph7`l;ra'IUS\C0K$)0%^]/s0<XjJ(<Gq>HY`MW1ZXjp!%K5ZArcbEsZ&"3]\X0sA$5Q_Fd1ind6T>nZ!QL&[A#6U<eMU%@N+/$NT)&U*Ja?$G.b>65XCQk/%l4P#^^Ska`7<)jg6('q)--QPGOP,;>9\A*:"@[Ooo^)\K>,S(<DZu]sLqm%I^/m!:n8Gq`V4Ir2"HRuddBtt:]q?n&0O,8=q+:ZH%OZFqsYkbibBKgutU>'1[1^0<:"R>&VS)?(?CELqK+I3Z5F5BhNR?%_:Zl>5sj@rs5:)YSN=IcBqYQp!p:'4/PLih7.GepPV*(&s2%Ng?&ZKg[IqAHG<em&jus/aQuSe$DH(mJ0.sMlAAL^M#`o3FEHkCH%JB%c*<F*e5QOV+jnj`eY&S1r:6\[O>d4)9[L/`$Q!k,`pDA%&[lum30DECl5O[qoP=Vr;jmHU35(b*>;:h:g<S>K9_SQ2Vf<md7`gE`ZDWQY.u2P=Yj0_+'(Eo!]_>NrgJKrA77WS;l$F`6YU0;<%*QAcmF[Xl\\Mj[OQMt7_VIYD64c@E!odLPl!JGM]_H&=<,2*r>VVbfcRu:hE&KJ5^asqfCegj%`lMb%t##(6'p'dqSHqI[F.AZb#%a;k]Q(aJ^19n8=@?LhoOGBI?B:==>t-Y[!fbIdEj!OTVKBpt3HIA%uJcZPu`RQUZu]lO[K8D?1iO6Gg`3\5HF@'X\CFV?s<6oh>j%VTYj&W;*S]T0((Ke5pscf76!oac0Wi2.0:H;jiMpr(0tTjBe^`ID1B>YoZOt'89Z?b`>AnSMuo\_b7oDR1o,;S&_@I$Vc`:,JAml%86AknMO.KbI1mBCRqoFT5fTiL+`%<T#?>@?k/j%=V-ABO1,tdkh%Wkpebu'\(dWg7GrQtToFWM;(8C/=eI&Xk&j<mF"i-Z1KY-oU%R1"I!!?%KUa45'(hMf)Y"iW!:^)?K5kbYBE+^3s8!hj:#]JFA:@6@;+XA)bnh@:88WTrE&YNUog>e/%hcpi^='?BGoLCIEteO@,@%f0\jQCI"CqXf$@FBN(-?9@>PN;mia#9)C2K`lAP2I>d`=AFe"tP5/<YCpnf2fA^R33bP)NN!S4g[%];Vc01NRrlkR)[_i/t9Qt*G%:><GQbA(0Hdi$(H_Wa_,U!nY'V7*>_#$"]IUDg-P,n1&DV6>Hh?BOCf+dEEd[VaX#M@*ha0fOYTSVCr(V+,\s,#pRo&nti`kE'%,%;i_Nu_JT-\(KTF#7f^o!Q'27:b9s(.TIV(QD4>PkR\RXrK]=q,CrA;(f-rMO05/R',+R!Iq<C8UG1m8jP]$%-$5koJAYP(UY[+,e%=U/)(KVB2-oToqD#'D2!VQj3=a^T8HDA<'SZt/0,1_E]8oqt=O,FYhcq<8Kr++XgLC./:pYuJsdDgJ9"7pDm:f#s)fIjqUM8S#Ld%lWej&DRC]"irt*YaIkEbj/PZ=.::T2\4uduWM]FANT9idlr.(<%86R&iQ8lX50VKuI=qQM8QO,!YCkoSfn37aA3W\B94utn*u"Eq%'AKpGj8.cM*S^<N07e#`Db!RlU4Z\m[7!5Le"D2!MYi=MSpik%HJ33T(T<E0-sej/(rB6<COIrA5B_AN8U(Z^JEhHEe1!u?^]e84%e!,mt(c1?G$C4TkDY7Qpp<.-+f,5^eY=Phpr:I/^k\JM?)1`1SHTsF^#[!4`@b)_B2G<$M&@`N$Jn%Z%=Kq&2#RkJ?lVT#6RDpJ*%H?ne,3c\mpX6;oP=5_BHODXYFO:LH?O)P&N)?Vr+j>c'.G@225=JL+@Kr5`BbN<^F2,\1M39h&gYnr/`cTAKG@C#"t:QcO7/L^W=%)Wd]>L3dgmn,_;&^0XdbI1/h5G6d]WpF@T[VckCH`\a=YE=;><#umDm4C9G>+Xn\6n24\o!oTfR7?D:YUHF_(.$VdWNN'qso(c&.%qJ=Hu1gPsna%hS%RT>n!NXjbBU$7Y@Ogt5p.?;8;Qc_8N.MqP=`S0\iA2\bpk`hW]<DJr.Vj"p]G_Bt6`j#"P^8,*DN$Il1V!:mK%aIM#&F-H,TQYLS4W0bfrjqb\_P]Vc,+'pY_E/?(i/a+\2;4HiW4;OsFh?"%^.FH1HFljX)5Im=>(%FFcmcl%/ds%#ApE.6^:,]!%%&l"\T(sZ;BIGI9,_`p=KL,NLTGluB-al\[l^6TN$WToGo+ehL![Ke(E/ItX`]<4CSSBIA]e?QmlS.\=Vc@_N[_Nt"s.a+WQa:^-^%HBD]bm&R?&,hl:F0Yd%j4kJ(On<cK/X2AZ&fK_%"RC+`@lRaOZ42-I/;s[\WmPS^J`H7*QZ)i&;7Anhhir\W&_V%O"8(acT/5tGd%q/\uQRZaqi"']Y\^a*k,I3r>U23ZN,kO;tMSAWOI9q8;8%dE-jL$3IeBr#m(H^=!Odo]Eq1](4Y0%kYT!S>VCWKbLO@7b-D;%,LJ%B<Y)fVFkJ(X)<pX$H]=cm^bHc21^[_k;k)0d=+!^?=,maJ=i,Ept'6(a.thQN?aQPbSES&J0Ya>B6'62NZYki'<,>KS'!E;Ah"hu%V^l<hpI9^2lpM$.enGM4ai!dfS+n(P6pOm<rfuRua0Mm[Gkl@_P&$^2kGp[2YK,Li$@3e3jaD%eEYJCupjP#>$mR!'krMc5;#n(p%$HE1EnBXie_-P8Q&(\B@BIoN2V^N06M?DIojPIr!n0<`/S/tPao@$`!6^j4a$l9dJgcLZ?p@bcV,cI=B!7k3bLW;s)s5c9kq2%kF%^XCr`*'9$eLNDMrc7I^&0PMl0!iP[^HL/']oK?8`(s".L88uaW)8\p"=-uq1PoO7T&!kERnL,LBb4TbW[/]u-WOkr:WnGX4dIq=Y%moGeD:7lqHB\>gC.;Flk)_6^KVpo]^WF?51j"/ALM]Mc-$"2=A`B>6Yq=E446\Xcp.`l<][]K*._Tg%XZBH?':]=lcr/`tj<+Ta_%0<4NY4_>S.m,8!&B>Qu1ZW6"2&L!cjEnrB:!cIm7n7Pb]RjK4T]]1-X2"=,(qD8D*rTOoW^mo3D:bsq7q]HqrQ7kJ!qr'*Jh]l<J%m8L[b3HaCC^bg41:?I(H-Q0$mij.#%e[P-`Y.iUV>/0Eu#qd?*6g`ZOPaN:bN&suYGfTJMcLNrUXSVn=pS7VZI.mNlU7+qiVFeeC%LA.0PPYG/KVsuFfl4#<2`CO"=Ir>H(]qt+'N,W'k"at;OPA3KS6[$7RHPRBi)+@i*@@Z@hPdr4g%)`)[;\_M&_>B2MOE)"*iE:#5%#6e>?Lk#n[-MZeR&obIhKb^I3WR9V[lScHrJN%*6:X'ur(nhO8*Tb"0pkGu=B8Q8IR?ZkJUEanu@I_!rb#8&krU+F!78s.+UL3q\%@I8LRjX8sZYCDM]BlNO$lgMgXJ=<a=o%<'WeDUq-h.k,Q.)/MEJa8nWih1SSZgi$!r:U@O`u7<NIqZ4To6[8)eSE@P-#7fr0FcZL%:TjCL7J^G9Z]hlg00b0'U9)rgb8rIBf3>nTp7q-OhMhK"eaht93i)a7s3UQ7c7d37JafrS(Z-:'AfNOQ0CLI^nsJOp40,#5k3J'_%F[PBU/RD/tGCDD5+8XI"jHH#-Qe*+&Wq&,VB0'G_b7a<fM@_lIj^lgF([:m@D35.$:s.dD/j[:XGUG-Pp"FF*0+7WQf(&HrhJ+&a%TC^%s[[k&JhmT*Q2D9F+r@i.Of\83sluVp5^$LK!s0jTO*i*.LGLh*p5?Vu7D5VA_.5*c"I\C"LRR]=G<mATX+.l7Rkp8@>L9<[4%q>GBPr$O/qE5I0J7CV;1)@r991`!T@hjYsOZJXME8*8jUFji/LVG9\I/TaEO83#m(Ze#W;[cKVda17fGXM,Hs^9D\ZW?5JVf9.3p%h8%Dul=<V7I_l]Y`Wf<)@rhsjKQ>#pGC]s7'B?m#Lh,-rrp'$HP)2)kAJHKXg:!$!?h2IbA.f*XZ0JS?ai!rV0Ek!T;k;14Fdpa-%VPh\OrG?q1\o%:,=ue>cBY=$Fg$\#T-+\W,nRPuY,W4<lo!uc`H[YJa\0(as&"-j>Mn4hq]0[2%D]29K7kc&DFfFnJS`2L$OipS-%[(MZlY?T(INq&aZrW2>c&kPgu)H5<a0WgU\1pe:Na&YjS^PCPI^/!e8EpXdFU.X9B5o5I;Xek7_&)H\<bYFbW8kjS\(tb'+T=h3c%2dOstnU:a[#bJ4E5Ugcan\'oI9,d*O!4;5i]ad:6@E7[6Cu!;4!MJ(n]mG5Ya+=KOhOd3&S*8&m;gJmTi;*BN-5h;[s,ShuqhMVa%]RTsi`EQXQTWM`l?3['rWSpQX7Y&_(FLFA'5T3G+ads_b?e-^q7mJ>s$hH@]$LNf(&Q#/UO7kI5c#3COD?O&D]tKHAa&gLkaIq%s%)ZfG.DKp(E5Xo%a\$ls"Hi*_Y%Q$em*rjOuT[;?:f)\-ud"\KC"$i(hd(j]&<0_:g7R.+;qJHF.[(BX6!$7KV`8=&B_lJ5.aX@ap%O7P7HfW<uC%0hT@<)h2KBHG?>]Gh5aQeLcK=>VIp>C.4rPodsBae0Q,4]Th5:c??PlK;:5</?E[)%-tZT($9OKaJg]*](jrj,<mk%-1h-i+25oFG4kV$8Xa=*b&]`em,mn^$rN*7q6VgH$&V`H1iMslDUnf1SeHuBJ>os.$$F%'hVW0"MH%fD9Bn5$p>)SISZM*508"N:%>41-uqY73XC_W_0?/LX9\q'2(.$BEmleNtl,f\`&,(@_ID5e)sYOX`1jNXjth8saEO)"+fOVFL9s4\Yo`BCpsR:M'\'_#Fo,^(L#%HPsa4YPP!u;25*\^)oah1P-Ql%UtP]Cq^CRR*YSW$t8+Sqsu_%1bdeH\d-WcT_X$JV:_3tFV(O:N84%H`1f;=Gs@)t!p:E5#I,,a%^Y@O.^?Q4I`.'Yj_\X@P;@EJ-Oi!rb(PbCi?U$VGpF_]bKG6',Ud3,dFhC2g&EC'5e$Uo,@(<!;!NoJL'&/,e\e57b)4jXpqe(ua%X7#_S:,=#4@hZfZ:qufe9k%6[FEe"WU0I^Amp+:L.";gq7@8Y,&!-LtQeC6LI@[,+)CD`_R0rL!g#.,7)2MW_"0IhKXNJg$J/B[(%Pn$LlJD:'Eef^4ROr2mg9stccYN#1!inCj+0KuCJXes>8PuIM"&RQc@ot0/9o?&f=[MZ"?m2K\_U-8P$b??YK9i_>!3q`Z^%U"m\%!_A'Tqm>JoXk)%R2HGWF>`hlcVN+5mj]W--9@I#pHbSjg!C2ho[bJUK8L@K5)u4'hYEX_2;l/2,132He])<N1RucMR4[Nr;WVi+,%d[L>h&LknV$&O4d%5eS,+/dQMRR]1j8Bpe<d]-<$ot#`]^<PD)UV%3rpY0gIng7pnYI#EPlarDd?oo'oc^!'N$;g1lg;h82opomk%p4%QqcV5]'.rZKt-d6.aQRQA"VpJ(R/P8en'Ofu$Wi^VVg2_(]:nu74Os%KNbSfAY5'Aqc_3kjJ@9R(g,2h<]Kf1l.6'r4_WsOP&%+RlOKV`KpiOiD#q.*gK1\V5CJKb>ut;c=3.Pb^7s2r]T_1^MK:5cKV[KEDlG1)P9jc2G058QnM;/O-W?FK1<0$'c/kR6sut)9A+&%5X4MCF^F3m+\0"a9?E_#DjZCpN#t:.ZeIU%ji'RGDNHkGS:E^6^g*CjAudu:8StLm]/&sno5:CBkn1]M!XU,2;Aa(l02^X4/5-\#%?ojmR<AVkV'_L+H>E;?^9l#,\!peJoC+:'YP!*>R]q8hnX^1[rWFIRtDU"e\!L`#?D%@Us%5hBSfddo"+e?TGT^.rC*i4&DGj$o0%3ll57Fm^]R1QSpY'-jL[01fR6`?'`cl>_LSq?V]XQ^oF>j>Ad4V1re4bVCtJ#'*kmc007;3K),+-<5Qq4ZD9HisWt,H'AD'1A`8#%hk[W@mZks.adr;%5:l$ePFHdEhMEc\;^soo>@k/R8I+k=\'S0W+@8@feM!P:7f7-O]nAq"!`_*q8;,M4'NsDeqPJT+@h0.=31r_>%o#]AZrWcZ^?iKqpro(Wh+34E\+92.$rT,,Ns4b<dr:<_an.5Qj5Q9-hrg/-1a8bb_^\u>Os7B[tn_;s8r8U$A1Odp4riaAWI/0[i%q:gDp^]3o?r9_[Wq*4lMs,6"/PPap#pkSnE5Q)*WrI7P'#[%~>%AI9_PrivateDataEnd